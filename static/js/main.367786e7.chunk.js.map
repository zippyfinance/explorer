{"version":3,"sources":["utils/getAddress/bytes.ts","utils/getAddress/keccak256.ts","utils/getAddress/keyTool.ts","utils/getAddress/errors.ts","utils/getAddress/bech32.ts","utils/getAddress/validators.ts","utils/indexedDB.ts","utils/getAddress/GetAddress.ts","config/index.ts","types/api.ts","utils/utils.ts","hooks/ERC20_Pool.ts","hooks/ZPT-ETH-SwitcherHook.ts","hooks/ERC721_Pool.ts","hooks/ERC1155_Pool.ts","components/ui/CopyBtn.tsx","components/ui/Address.tsx","components/ui/RelativeTimer.tsx","components/ui/Timestamp.tsx","components/ui/AnchorLink.tsx","components/ui/BlockNumber.tsx","components/ui/BlockHash.tsx","components/ui/TransactionHash.tsx","components/ui/Tooltip.tsx","hooks/useWindowFocusHook.ts","hooks/polling.tsx","hooks/useZPTExchangeRate.tsx","components/ZPT_USDT_Rate.tsx","utils/fee.ts","components/ui/utils.tsx","hooks/useClickOutside.ts","api/explorer/ws/index.ts","api/ApiCache.ts","api/3rdPartyApi.ts","api/client.ts","components/ui/ZPTValue.tsx","hooks/themeSwitcherHook.ts","utils/oneCountry.ts","components/ui/Search.tsx","responsive/breakpoints.ts","components/ui/BaseContainer.tsx","components/ui/Button/index.tsx","components/ui/Pagination/index.tsx","components/ui/PaginationBlock/index.tsx","components/ui/TransactionType.tsx","components/ui/StakingTransactionType.tsx","components/ui/TokenValue.tsx","hooks/dateFormatSwitcherHook.ts","components/ui/DateTime.tsx","components/block/helpers.tsx","components/block/BlockDetails.tsx","pages/BlockPage.tsx","components/ui/icons.tsx","components/metrics/BlockLatency.tsx","components/metrics/TransactionsCount.tsx","components/metrics/ZPTPrice.tsx","components/metrics/ShardsCount.tsx","theme.ts","components/metrics/common.ts","components/metrics/TransactionsHistory.tsx","components/metrics/WalletsHistory.tsx","components/metrics/index.tsx","pages/MainPage/LatestBlocksTable.tsx","pages/MainPage/LatestTransactionsTable.tsx","pages/MainPage/helpers.ts","components/dropdown/Dropdown.tsx","components/ui/ShardDropdown.tsx","pages/MainPage/index.tsx","web3/parseByteCode.tsx","hooks/BinancePairHistoricalPrice.ts","components/ui/TokenValueBalanced.tsx","components/transaction/tokenTransfer/tokenTransfersERC20.tsx","components/ui/ERC1155Icon.tsx","components/transaction/tokenTransfer/tokenTransfersERC1155.tsx","web3/parseHex.ts","components/transaction/TransactionInput.tsx","components/transaction/helpers.tsx","components/ui/TxStatusComponent.tsx","components/transaction/TransactionDetails.tsx","components/tables/TableComponents.tsx","components/tables/TransactionsTable.tsx","components/transaction/InternalTransactionList.tsx","components/transaction/TransactionLogs.tsx","utils/approvals.ts","api/rpc.ts","hooks/useQuery.ts","pages/TransactionPage/index.tsx","pages/StackingTransactionPage/index.tsx","pages/AllBlocksPage/AllBlocksTable.tsx","pages/AllBlocksPage/index.tsx","pages/AllTransactionsPage/index.tsx","web3/erc20Methods.ts","pages/AddressPage/TokenInfo.tsx","components/ui/ZPTValueDropdown.tsx","pages/AddressPage/StakingDelegations.tsx","pages/AddressPage/AddressDetails.tsx","components/ui/ExportToCsvButton.tsx","web3/ABIManager.ts","pages/AddressPage/tabs/transactions/columns/common.tsx","pages/AddressPage/tabs/transactions/ColumnFilter.tsx","pages/AddressPage/tabs/transactions/columns/staking.tsx","pages/AddressPage/tabs/transactions/Transactions.tsx","pages/AddressPage/tabs/transactions/columns/erc20.tsx","pages/AddressPage/tabs/transactions/columns/nft.tsx","pages/AddressPage/tabs/transactions/columns/transactions.tsx","pages/AddressPage/tabs/inventory/InventoryItem.tsx","components/pagination/Pagination.tsx","pages/AddressPage/tabs/inventory/Inventory.tsx","hooks/debounce.ts","api/explorerV1.ts","pages/AddressPage/ContractDetails/helpers.ts","pages/VerifyContract/VerifyContract.tsx","components/ui/AbiParam.tsx","pages/AddressPage/ContractDetails/AbiMethodView.tsx","pages/AddressPage/ContractDetails/ConnectWallets.tsx","pages/AddressPage/ContractDetails/index.tsx","pages/AddressPage/tabs/holders/HoldersTab.tsx","components/approvals/approvalsHeader.tsx","components/approvals/approvalsColumns.tsx","components/approvals/approvalSearch.tsx","components/approvals/approvalsRenderer.tsx","pages/AddressPage/tabs/tools/TokenApprovals.tsx","pages/AddressPage/tabs/tools/index.tsx","pages/AddressPage/index.tsx","pages/ERC20List/ERC20Table.tsx","pages/ERC20List/index.tsx","pages/ERC721List/ERC721Table.tsx","pages/ERC721List/index.tsx","pages/ERC1155List/ERC1155Table.tsx","pages/ERC1155List/index.tsx","pages/ExportData/export-utils.ts","pages/ExportData/index.tsx","pages/InventoryDetailsPage/InventoryDetailsPage.tsx","pages/ApprovalPage/index.tsx","pages/tools/CheckZRC/index.tsx","pages/ChartsPage/utils.ts","pages/ChartsPage/ChartFilter.tsx","pages/ChartsPage/DailyChartPage.tsx","pages/ChartsPage/ActiveAddresses.tsx","pages/ChartsPage/DailyTransactions.tsx","pages/ChartsPage/AverageFee.tsx","pages/ChartsPage/AverageBlockSize.tsx","pages/ChartsPage/StatPage.tsx","pages/ChartsPage/ViewChangeStats.tsx","pages/ChartsPage/index.tsx","pages/TopStatsPage/CommonTopTable.tsx","pages/TopStatsPage/OptionsSelect.tsx","pages/TopStatsPage/Transaction.tsx","pages/TopStatsPage/index.tsx","pages/ValidatorsPage/index.tsx","Routes.tsx","components/appHeader/ConfigureButton.tsx","components/appHeader/InfoButton.tsx","components/appHeader/ToolsButton.tsx","components/appHeader/ResourcesButton.tsx","components/appHeader/MenuMobile.tsx","components/appHeader/index.tsx","components/appFooter/index.tsx","components/ERC20_Pool.tsx","components/ERC721_Pool.tsx","components/ERC1155_Pool.tsx","components/ui/toaster/Toaster.ts","components/ui/toaster/ToasterComponent.tsx","utils/settingsService/SettingsService.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["isHexable","value","toHexString","addSlice","array","slice","args","Array","prototype","call","arguments","Uint8Array","apply","isArrayish","parseInt","String","length","i","v","arrayify","errors","arg","match","substring","result","push","substr","type","keccak256","data","arrayified","sha3","Error","toChecksumAddress","address","isBech32Address","fromBech32","chars","toLowerCase","split","hashed","charCodeAt","bytes","toUpperCase","join","UNKNOWN_ERROR","INVALID_ARGUMENT","NUMERIC_FAULT","_censorErrors","throwError","message","code","params","messageDetails","Object","keys","forEach","key","JSON","stringify","error","toString","reason","LogLevels","debug","default","info","warn","off","CHARSET","GENERATOR","polymod","values","chk","p","top","hrpExpand","hrp","ret","Buffer","from","createChecksum","concat","mod","bech32Decode","bechString","hasLower","hasUpper","pos","lastIndexOf","d","indexOf","charAt","verifyChecksum","HRP","tHRP","convertBits","fromWidth","toWidth","pad","undefined","acc","bits","maxv","toBech32","useHRP","isAddress","addrBz","replace","combined","bech32Encode","res","buf","isKeyString","keyString","lengh","validator","isNumber","obj","isString","isObject","isArray","isHex","startsWith","Number","raw","isBech32TestNetAddress","IndexedDbStore","IndexedDbKeyPath","saveToIndexedDB","storeName","objects","Promise","resolve","reject","dbRequest","indexedDB","open","onerror","onupgradeneeded","event","target","createObjectStore","keyPath","onsuccess","db","onversionchange","close","console","log","objectStore","transaction","item","arr","objectRequest","put","onblocked","loadFromIndexedDB","abort","getAll","e","HarmonyAddress","_classCallCheck","basic","this","getBasic","_createClass","get","addr","basicBool","bech32Bool","bech32TestNetBool","str","toTest","bech32","bech32TestNet","getAddress","input","RequestTxType","RequestOrder","MetricsType","MetricsTopType","MetricsTopPeriod","bridgeTokensMap","bridgeTokens","linkedContractsMap","linkedContracts","addressAliasMap","addressAliases","reduce","newObj","availableShards","process","map","t","shardUrls","shardId","filter","url","config","contractShardId","oneCountryContractAddress","REACT_APP_ZPT_COUNTRY_CONTRACT_ADDRESS","oneCountryNFTContractAddress","REACT_APP_ZPT_COUNTRY_NFT_CONTRACT_ADDRESS","ipfsGateway","getQueryVariable","variable","query","vars","pair","decodeURIComponent","isTokenBridged","copyTextToClipboard","copyTextareaInput","document","createElement","body","appendChild","focus","select","execCommand","_unused","removeChild","levenshteinDistance","a","b","an","bn","matrix","firstRow","j","Math","min","initValue","globalSetMode","useERC20Pool","singletonHook","getPool","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","erc20","erc20Map","wrap","_context","prev","next","ERC20Pool","sent","_objectSpread","isBridged","name","implementationAddress","setMode","t0","stop","useEffect","_useState","useState","_useState2","_slicedToArray","mode","setERC20Pool","pool","useCurrency","currentTheme","getStoredValue","window","localStorage","getItem","useERC721Pool","erc721","erc721Map","ERC721Pool","setERC721Pool","useERC1155Pool","erc1155","erc1155Map","ERC1155Pool","setERC1155Pool","Icon","styled","StatusGood","_templateObject","_taggedTemplateLiteral","CopyBtn","props","_jsx","Clone","size","color","onClick","showNotification","toaster","show","_jsxs","Box","direction","align","children","Text","style","cursor","AddressText","_templateObject2","isShortEllipsis","Address","isShort","_props$type","_props$color","displayHash","_props$hideCopyBtn","hideCopyBtn","_props$showLink","showLink","history","useHistory","ERC20Map","currency","EMPTY_ADDRESS","outPutAddress","parsedName","addressContent","marginLeft","noHistoryPush","preventDefault","display","justify","stopPropagation","Link","to","dayjs","extend","UpdateLocale","RelativeTimer","date","render","_props$updateInterval","updateInterval","now","Date","formatedDate","format","needFormated","diff","getTimeOffset","setFormattedValue","tId","setInterval","clearInterval","formattedValue","minWidth","title","RelativeTime","thresholds","l","r","updateLocale","relativeTime","future","past","s","ss","m","mm","h","hh","dd","M","MM","y","yy","Timestamp","timestamp","withRelative","Clock","AnchorLink","Anchor","as","colorProp","hasIcon","hasLabel","_objectWithoutProperties","_excluded","BlockNumber","options","hash","number","link","label","formatNumber","fontWeight","BlockHash","TransactionHash","_ref$link","ArrowDown","theme","global","colors","backgroundTip","TipContent","background","left","right","bottom","round","animation","duration","position","width","maxWidth","showArrow","border","globalGetHidden","useWindowFocused","currentFocus","hidden","setHidden","tabListener","addEventListener","removeEventListener","getTabHidden","useAPIPolling","opts","initialState","fetchFunc","delay","onError","updateTrigger","disableTabListener","timerId","useRef","fetchCallId","setData","pollingRoutine","id","current","then","newData","catch","doPolling","setTimeout","stopPolling","clearTimeout","coinGeckoMapper","lastPrice","zippychain","usd","priceChangePercent","usd_24h_change","fetch","useZPTExchangeRate","ZPT_USDT_Rate","getRates","rates","_res","json","prices","setItem","getNearestPriceForTimestamp","timestampString","parse","timestamps","valueOf","calculateFee","gas","gasPrice","fee","isNaN","pow","Intl","NumberFormat","maximumFractionDigits","num","toLocaleString","CalculateFee","normalizedFee","price","bi","Big","USDValue","minimumFractionDigits","_Fragment","CalculateTransactionFee","DP","NE","PE","socket","io","transports","connect","transport","method","emit","payload","err","ApiCache","_defineProperty","get4byteSignatureByHex","hex","_yield$yield$window$f","results","_results","abrupt","hex_signature","signature","text_signature","_x","pairCache","contractShardID","signatureHash","getBlockByHash","getBlocks","getCount","getTransactions","getTransactionByField","getStakingTransactionByField","getInternalTransactionsByField","blockNumber","getByteCodeSignatureByHash","_getByteCodeSignatureByHash","_params","hexValue","set","getTransactionCountLast14Days","getWalletsCountLast14Days","getMetricsByType","getTopMetricsByType","period","getContractsByField","getUserERC20Balances","_toConsumableArray","getTokenERC721AssetDetails","_x2","_x3","_getTokenERC721AssetDetails","_callee2","tokenID","_context2","getTokenERC1155Assets","getUserERC1155Balances","getRelatedTransactionsByType","getBinancePairPrice","cacheValue","getTokenERC1155AssetDetails","_x4","_x5","_getTokenERC1155AssetDetails","_callee3","_context3","ZPTValue","_props$timestamp","_props$hideTip","hideTip","isTodayTransaction","BigInt","gap","weight","margin","Tip","dropProps","content","initTheme","useThemeMode","setThemeMode","ZPTCountryTLD","provider","Web3","providers","HttpProvider","oneCountry","DCEns","contractAddress","getAddressByName","record","getRecord","renter","timeoutID","oneCountryPostfix","SearchInput","setValue","_useState3","_useState4","readySubmit","setReadySubmit","_useState5","_useState6","setFocus","_useState7","_useState8","setResults","themeMode","dataTest","symbol","onChange","useCallback","newValue","exec","onePostfix","countryPostfix","_v$split","_v$split2","prefix","ethAddress","endsWith","time","test","basicHex","all","t1","shard","t2","Row","index","minHeight","borderStyle","borderBottomWidth","borderTopWidth","borderLeftWidth","borderRightWidth","paddingLeft","borderRadius","marginRight","paddingRight","vertical","TextInput","onFocus","onBlur","onPaste","evt","onKeyDown","keyCode","icon","Search","backgroundColor","placeholder","marginTop","zIndex","maxHeight","overflowY","overflowX","boxShadow","height","AutoSizer","_ref2","List","className","itemCount","itemSize","breakpoints","mobile","mobileL","tablet","tabletM","laptop","desktop","sizes","BaseContainer","isLessTablet","useMediaQuery","maxDeviceWidth","horizontal","flex","BasePage","overflow","Button","StyledButton","GButton","button","borderColor","brand","primary","css","backgroundBack","_templateObject3","NavigationItem","disabled","PaginationNavigator","elements","totalElements","showPages","property","noScrollTop","isLoading","_filter$offset","offset","_filter$limit","limit","currentPage","toFixed","totalPages","ceil","Pagination","onFirstPageClick","newFilter","onPrevPageClick","onNextPageClick","onLastPageClick","disablePrevBtn","disableNextBtn","FormPrevious","userSelect","FormNext","defaultOptions","PaginationRecordsPerPage","_props$options","_filter$limit2","Select","option","PaginationBlockNavigator","blocks","filters","scrollBody","getElementById","scrollTo","blockNumbers","minBlockNumber","maxBlockNumber","max","innerFilter","find","TransactionType","typeMap","staticcall","create","create2","delegatecall","StakingTransactionTypeValue","CreateValidator","EditValidator","CollectRewards","Undelegate","Delegate","TextWrapper","TokenValue","_props$tokenAddress","tokenAddress","_props$hideSymbol","hideSymbol","_props$isShort","tokenInfo","decimals","div","_formatNumber","toNumber","whiteSpace","DateFormat","defaultDateFormat","EXACT","ITEM_NAME","setDateFormatMode","useDateFormatMode","currentDateFormat","DateTime","RELATIVE","formattedDate","StyledBox","blockPropertyDisplayNames","miner","extraData","gasLimit","gasUsed","difficulty","logsBloom","mixHash","nonce","parentHash","receiptsRoot","sha3Uncles","stateRoot","transactions","stakingTransactions","transactionsRoot","uncles","epoch","viewID","blockPropertyDescriptions","blockPropertySort","blockPropertyDisplayValues","isNewAddress","FormPreviousLink","FormNextLink","tx","block","columns","CircleQuestion","ShardIdSelect","blockShardId","_props$onSelectShardI","onSelectShardId","fontSize","BlockDetails","_ref2$isShardIdSelect","isShardIdSelectAvailable","showDetails","setShowDetails","setIsNewAddress","sortedKeys","sort","shardIdView","blockData","k","f","displayValue","includes","blockDisplayValues","DataTable","step","header","side","CaretUpFill","CaretDownFill","BlockPage","useParams","setBlockLoading","setBlock","setBlockShardId","isIdParamNumber","isBlockFetching","findBlock","shardsList","blockDetails","Heading","LatencyIcon","React","useContext","ThemeContext","_props$size3","_props$color3","palette","Grey","viewBox","enableBackground","fill","GearIcon","_props$size4","_props$color4","version","BlockLatency","latencyPerBlock","latency","TransactionsCount","count","setCount","getRes","shardNumber","cur","Transaction","ZPTPrice","_useZPTExchangeRate","LineChart","ShardCount","Cubes","WhiteGrey","LightGrey","CoolGray","DarkGray","WhiteBlue","DarkBlue","Purple","ElectricBlue","ElectricBlueLight","WhiteGreen","MintGreen","DarkGreen","MidnightBlue","WhiteBrown","GoldenBrown","text","backgroundEmptyIcon","backgroundDropdownItem","backgroundBackEmpty","headerText","majorText","minorText","iconMain","tableRow","tableRowHover","mintGreen","errorText","successText","backgroundError","backgroundSuccess","backgroundToaster","backgroundMark","warning","warningBackground","success","successBackground","clear","font","family","anchor","textDecoration","hover","radius","dataTable","darkTheme","container","selected","getChartOptions","points","_sort","minPoint","minY","minPointLog","floor","log10","ticksColor","tooltipColor","responsive","animations","x","tooltips","intersect","plugins","legend","tooltip","displayColors","caretPadding","caretSize","cornerRadius","titleSpacing","titleFont","bodyFont","borderWidth","titleColor","bodyColor","scales","grid","drawBorder","ticks","maxRotation","minRotation","callback","notation","tension","BlockTransactionsHistory","setResult","setIsLoading","getElements","labels","datasets","pointRadius","pointHoverRadius","pointBorderWidth","pointBorderColor","pointHoverBackgroundColor","Spinner","LineChartJs","WalletsHistory","MAX_SAFE_INTEGER","items","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","PointElement","LineElement","Metrics","isLessLaptop","isLessMobileM","flexWrap","flexBasis","Line","getColumns","LatestBlocksTable","shardID","marginBottom","toShardID","orderBy","orderDirection","LatestTransactionsTable","setTransactions","trxs","trxsList","getLatency","blocksTimestamp","getTime","diffs","calculateSecondPerBlocks","all_blocks","calculateSecondsPerBlock","DropdownWrapper","Value","DataList","DataItem","_templateObject4","_templateObject5","itemHeight","Dropdown","_React$Component","_inherits","_super","_createSuper","_this","element","defaultValue","state","isOpen","searchText","setOpened","setState","onToggle","handleClickBody","contains","onClickItem","createRef","_this2","_this$props","_this$props$group","group","searchable","_this$props$itemStyle","itemStyles","groupItem","groupBy","Fragment","renderGroupItem","renderItem","keyField","_this3","_this$props2","_this$props2$group","_this$props2$itemStyl","_this$props2$padDataL","padDataList","ref","renderValue","selectedValue","currentTarget","renderGroupItems","Component","ShardDropdown","allShardsAvailable","_","dataItem","paddingTop","ColumnHeader","MainPage","isLessDesktop","selectedShard","setSelectedShard","setBlocks","blockLatency","setBlockLatency","blockLatencyMap","setBlockLatencyMap","allBlocks","_blocks","blocksList","web3","parseSuggestedEvent","textSignature","topics","parseTextSignature","abi","createABI","inputs","_topics","_toArray","restTopics","parsed","eth","decodeLog","indexed","sig","_sig$split","_sig$split2","DisplaySignatureMethod","signatures","decodeParameters","parseSuggestedMethod","DisplaySignature","_input$name","_parsed$input$name$to","_input$name2","_parsed$input$name","alignItems","revertErrorMessage","decodeParameter","BinancePairs","TokenValueBalanced","dollar","setDollar","_props$direction","pairSymbol","hrc20Address","getContracts","contracts","dollarPrice","times","tokenTransfersERC20","logs","erc20Logs","events","val","Loader","InventImg","img","ErrorPreview","EmptyImage","ERC1155Icon","imageUrl","isErrorLoading","setIsErrorLoading","Image","src","onLoad","TokenTransfersERC1155","ercLogs","tokenDetails","setTokenDetails","_tokenDetails","_tokenDetails$meta","imageURL","meta","image","parseHexToText","utils","hexToUtf8","ViewType","defaultViewType","ViewTypeName","_ViewTypeName","decoded","utf8","OptionItem","isSelected","DropContentContainer","DropContent","currentOption","onSelectOption","RawInput","ReadableText","TextArea","rows","TxInput","inputSignature","viewType","setViewType","dropdownOptions","setDropdownOptions","inputUTF8Text","setInputUTF8Text","isOpened","dropContent","DropButton","onClose","onOpen","Down","reverse","padding","transactionPropertyDisplayNames","hash__staking","hash_harmony","txnFee","transactionFee","transactionIndex","amount","tokenTransfers","commissionRate","maxCommissionRate","maxChangeRate","minSelfDelegation","maxTotalDelegation","website","identity","securityContract","details","slotPubKeys","slotPubKeyToAdd","slotPubKeyToRemove","delegatorAddress","validatorAddress","transactionPropertySort","blockHash","transactionPropertyDescriptions","Status","validatorAddress__delegated","validatorAddress__undelegated","delegatorAddress__delegated","delegatorAddress__undelegated","amount__delegated","amount__undelegated","securityContact","transactionPropertyDisplayValues","internalTxs","filteredInternalTxs","internalTx","copyValue","flexDirection","href","TxStatusComponent","msg","CircleAlert","_ref$type","GasUsed","_props$tx","percent","TransactionDetails","_ref2$logs","errorMsg","hideShowMore","stakingData","_ref2$internalTxs","newTransaction","txData","nameKey","copyText","transactionDisplayValues","Flex","TableComponent","_len","_key","clickExpandButtons","alwaysOpenedRowDetails","querySelectorAll","td","expandButtons","expandButton","querySelector","parentNode","click","tableProps","onMore","resizeable","TransactionsTable","_props$step","setFilter","_props$emptyText","showIfEmpty","emptyText","hidePagination","hideCounter","_props$minWidth","_props$showPages","_props$textType","textType","paginationOptions","_IsLoading","opacity","transition","rowDetails","tableLayout","primaryKey","row","textAlign","InternalTransactionList","limitValue","initFilter","list","TransactionLogs","logIndex","LogItem","_props$log","parsedEvents","displaySignature","wordBreak","topic","approvalERC20ABI","constant","internalType","outputs","payable","stateMutability","approvalNonFungibleABI","convertTxnToObj","assetAddress","approvedObj","lastUpdated","spender","allowance","allowanceAmount","action","account","contract","matchesApproveAllNonFungible","tokenId","isFullApproval","tokenAmount","approval20Hash","approvalAll721Hash","approvalAll1155Hash","matchesApprovalMethod","filterTransactions","txnHistory","hasAllowance","toBN","isZero","revokePermission","web3Provider","hmyWeb3","_contract","_contract2","detectEthereumProvider","Contract","methods","approve","send","setApprovalForAll","API_URL","rpcAdapter","getBalance","nodeUrl","headers","jsonrpc","hmyv2_getTransactionReceipt","getAllBalance","getBalanceHandler","_yield$getBalance","shardUrl","defaultGetHistoryParams","fullTx","txType","ALL","order","DESC","hmyv2_getTransactionsHistory","mapStakingDelegation","delegation","undelegations","Undelegations","undelegation","Amount","Epoch","delegator_address","reward","validator_address","hmy_getDelegationsByDelegator","_len2","_key2","JSONBig","storeAsString","rpcBigIntAdapter","getAllApprovalsForTokens","erc20Pool","erc1155Pool","erc721Pool","contractHarmonyAddr","dataObj","_iterator","_step","_args2","pageIndex","pageSize","SENT","ASC","_createForOfIteratorHelper","n","done","getApiUrl","useQuery","search","useLocation","useMemo","URLSearchParams","extractError","errorMessages","getTxInputSignature","trx","TransactionPage","activeTab","setTx","txReceipt","setTxReceipt","setTrxs","setLogs","_useState9","_useState10","_useState11","_useState12","activeIndex","setActiveIndex","_useState13","_useState14","setInputSignature","getTx","trxInputSignature","txnReceipt","getInternalTxs","_ref3","txs","methodSignatures","txsWithSignatures","getLogs","_ref4","_callee4","_logs","logsSignatures","logsWithSignatures","_context4","loadTxData","_ref5","_callee5","_context5","finish","allSettled","txErrorMsg","txHash","getTransactionErrorMessage","internalErrorMsg","txReceiptErrorMsg","status","Tabs","alignControls","onActive","newActive","location","pathname","Tab","Boolean","StakingTransactionPage","_tx","restTx","restTxMsg","_excluded2","subTypeMap","AllBlocksTable","beginValue","endValue","AllBlocksPage","AllTransactionsPage","_trxs","TokensInfo","tokensList","setTokensList","isDropdownVisible","setDropdownVisible","isNodeBalancesLoaded","setNodeBalancesLoaded","loadErc20BalancesFromNode","balances","token","balance","walletAddress","ownerAddress","ERC20ABI","balanceOf","filterWithBalance","erc20Tokens","isERC20","erc721Tokens","isERC721","erc1155Tokens","isERC1155","borderBottom","_erc20Map$item$tokenA","_erc721Map$item$token","_erc1155Map$item$toke","justifyContent","needUpdate","Alert","borderTopLeftRadius","borderTopRightRadius","isVisible","ZPTValueDropdown","normalizedValue","hashValue","one","valueCopy","DelegationsCount","StakingDelegations","delegations","totalAmountBig","totalRewardsBig","plus","totalAmount","totalRewards","dropdownProps","AddressDescription","AddressDetailsDisplay","addressDescription","tokens","holdersCount","erc20Token","getType","erc721Token","erc1151data","_erc1151data$meta","restErc1151data","holders","sortByOrder","DetailItem","Item","addressPropertyDisplayNames","addressPropertyDisplayValues","creatorAddress","totalSupply","description","transactionHash","circulatingSupply","AddressPostfix","addressAlias","Share","_value","IPFSHash","lastUpdateBlockNumber","addressPropertyOrder","solidityVersion","bytecode","sourceCode","LinkText","TextContainer","ExportToCsvButton","ABIManager","entries","encodeFunctionSignature","encodeEventSignature","signatureWithout0x","getEntryByName","hasAllSignatures","names","hexData","entry","getMatchingSignatures","inputName","erc721ABIManager","ERC721ABI","erc1155ABIManager","ERC1155ABI","transferSignature","transferSingleSignature","Marker","TxMethod","TextEllipsis","_templateObject6","memo","cache","Map","has","extractTokenId","relatedAddress","transferLogs","transferLog","transactionType","_data$logs","eventType","_log$topics","_abi$decodeLog","TransactionAddress","rootAddress","_props$width","isRootAddress","tipContent","TransferDirectionMarker","_props$data","FilterDropButton","ColumnFilter","_props$initialValue","initialValue","onApply","isValueApplied","setValueApplied","setErrorMsg","onApplyClicked","validateValue","onClearClicked","FilterIcon","Close","onKeyPress","charCode","getStakingColumns","_data$msg","_data$msg2","_data$msg3","_data$msg4","_data$msg5","_data$msg6","allowedLimits","prepareFilter","usePrevious","Transactions","queryParams","limitParam","offsetParam","toParam","initFilterState","staking_transaction","internal_transaction","filterOnLoad","cachedTxs","setCachedTxs","relatedTrxs","setRelatedTrxs","setTotalElements","cachedTotalElements","setCachedTotalElements","prevType","prevId","_filter$props$type","_filter$props$type$li","loadTransactions","_txs","txsFilter","onTxsLoaded","loadTransactionsCount","countFilter","txsCount","cachedValue","filterTo","getERC20Columns","trim","getNFTColumns","columnFilters","onFilterChanged","historyUrl","InventItem","InventBoxContainer","InventoryInfo","EmptyPreview","_templateObject7","InventoryItem","_props$item","_props$item$meta","_props$item2","_props$item2$meta","_props$item3","_props$item3$meta","_props$item4","itemLink","disablePrev","onClickPrev","disableNext","onClickNext","Inventory","inventory","page","setPage","filteredInventory","setFilteredInventory","maxPage","renderedInventory","onSearchDebounce","func","timer","newTimer","useDebounce","_item$ownerAddress","targetString","_a$meta","_b$meta","_a$meta2","_b$meta2","sortByDistance","verifyContractCode","_data$fileList","formData","_i","_Object$entries","_Object$entries$_i","response","_response","_body","tab","FormData","fileList","file","append","credentials","redirect","referrerPolicy","loadSourceCode","convertInputs","abiInputs","idx","getContractByAddress","contractId","Field","Wrapper","uniqid","random","padEnd","trunc","V_TABS","TabBox","TabButton","VerifyContractBase","chainType","compiler","optimizer","optimizerTimes","libraries","constructorArguments","contractName","argsLoading","statusText","SINGLE","language","getBytecode","argStart","onClickSubmitBtn","_this$state","MULTI","FileInput","multiple","files","old","SubtractCircle","splice","findIndex","overflowWrap","VerifyContract","SmallTextInput","HeaderBox","NameLabel","AbiParam","readonly","readOnly","ViewWrapper","NameWrapper","ActionButton","AbiMethodsView","_abiMethod$inputs","_abiMethod$inputs2","abiMethod","inputsValue","setInputsValue","write","read","multipleValue","setMultipleValue","setAmount","setError","loading","setLoading","web3URL","accounts","isRead","ethereum","enable","setInputValue","newArr","isArrayValue","tabMethod","itemValue","itemType","itemId","removeItem","metamaskAddress","validChainId","Wallet","setMetamask","chainId","setChainId","onSetMetamask","onSetChainId","signInMetamask","alert","request","on","StyledTextArea","LabelSuccess","ContractDetails","implementation","implementationSourceCode","VerifiedContractDetails","NoVerifiedContractDetails","AbiMethods","VerifiedButMissingImplementation","cols","_props$sourceCode2","_props$sourceCode3","_props$sourceCode4","_props$sourceCode5","_props$sourceCode$sup","_props$sourceCode$sup2","_props$sourceCode$sup3","_props$sourceCode8","_props$sourceCode8$ab","_props$implementation","_props$implementation2","_props$implementation3","_props$implementation4","_props$implementation5","_props$implementation6","_props$implementation7","_props$implementation8","_props$implementation9","_props$implementation10","CODE","setTab","abiString","_props$sourceCode","proxyAddress","proxy","READ","WRITE","READ_PROXY","WRITE_PROXY","supporting","sources","source","_props$sourceCode6","_props$sourceCode7","rank","percentage","HoldersTab","_erc20Map$props$id","_erc721Map$props$id","_erc1155Map$props$id","_erc20Map$props$id2","_erc721Map$props$id2","_erc1155Map$props$id2","holdersTotal","setHolders","getHolders","holdersData","existed","_props$inventory","mul","ApprovalsHeader","ApprovalSearch","readyFilter","setReadyFilter","resolveName","filterString","sorted","dataFiltered","filtered","ApprovalsRenderer","_props$account","revokeClicked","ApprovalCache","TokenApprovals","_ref$account","_ref$contractAddress","harmonyAddress","revokePermissions","ToolsTab","APPROVAL","showTools","AddressPage","setContracts","setContractShardId","setSourceCode","setBalance","setDelegations","setAddressDescription","setImplementation","_useState15","_useState16","setImplementationSourceCode","_useState17","_useState18","setTokens","_useState19","_useState20","setInventory","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","setHoldersCount","erc1155Token","getBal","bal","getContractCode","_yield$getContractByA","mergedContracts","_yield$getContractByA2","contractData","_shardId","implCode","getStakingInfo","getInventory","holdersMap","holdersInventoryLength","tokenHolders","nextItem","getTokens","_ref6","_callee6","_tokens","erc1155tokens","erc721BalanceMap","_context6","txsCommonProps","linkedContract","_erc1155Token$meta","renderTitle","ERC20Table","ERC20List","setSearch","searchableFields","searchedTokenLength","filterWithFields","sortWithHolders","fields","some","field","ERC721Table","ERC721List","ERC1155Table","_data$meta","ERC1155List","convertValue","precision","mapRelatedTxToExport","onePrice","txDate","isSender","Txhash","Blockno","UnixTimestamp","unix","From","To","calculateFeePriceUSD","downloadCSV","filename","mappedTxs","mapHrc20TxToExport","mapInternalTxToExport","blob","Blob","URL","createObjectURL","pom","setAttribute","downloadBlob","replaceAll","IconError","StatusCritical","FlexWrapper","InputContainer","DownloadButton","ExportData","dateFormat","initialDateFrom","startOf","initialDateTo","isDownloading","setIsDownloading","dateFrom","setDateFrom","dateTo","setDateTo","dateInputProps","toISOString","calendarProps","bounds","subtract","inputProps","onDownloadClicked","blockFromFilter","_yield$getBlocks","_yield$getBlocks2","blockFrom","blockToFilter","_yield$getBlocks3","_yield$getBlocks4","blockTo","add","getTxTextType","alignSelf","DateInput","onChangeDateFrom","onChangeDateTo","letterSpacing","AddressLink","ImageContainer","NFTContainer","DetailsWrapper","NFTImage","setLoadingError","DetailsProp","DetailsRow","Attribute","_templateObject8","_templateObject9","urlPattern","MetaDescription","domainParseLinks","richText","dangerouslySetInnerHTML","__html","NFTDetails","tokenAddressParam","tokenIDParam","_asset$meta","_asset$meta2","tokenERC721","asset","EmptyValue","tokenStandard","attributes","attr","trait_type","display_type","valueTitle","NFTInfo","tokenERC1155","nameValue","erc1155Image","linkTokenId","erc721TokenId","labelHash","encodePacked","convertErc721TokenId","InventoryDetailsPage","_inventory$meta","_inventory$meta2","_useParams","_useParams$address","_useParams$tokenID","_useParams$type","token721","token1155","loadData","inventoryItem","metaImageUrl","fullImageUrl","ApprovalPage","ErrorMessage","EventsWrapper","EventContainer","isMatched","ContractType","_methods","erc20ABIManager","CheckZRC","initialId","setContractAddress","contractType","setContractType","matchedEvents","setMatchedEvents","setContractData","contractError","setContractError","isContractLoading","setContractLoading","geMethodSignature","onContractLoaded","_matched","matched","getContract","prepareAddress","isAllEventsMatched","matchedName","onEventClicked","dayOfYear","enrichResponse","downloadMetricsCSV","ChartOption","OptionAlias","_OptionAlias","month","month3","year","ytd","ChartOptions","Option","isActive","onSelect","ChartFilter","activeOption","ChartModalContainer","TextLink","LoadingErrorModal","formatValue","formatDate","DailyChartPage","loadingError","setItems","setCache","filterOption","setFilterOption","minValue","setMinValue","maxValue","setMaxValue","applyFilter","cachedData","chartItemFilter","sortedData","isMobile","chartOptions","yAxisLabel","maintainAspectRatio","maxTicksLimit","day","getDetailedChartOptions","chart","chartData","getChartData","tooltipLabel","flexGrow","Info","renderMaxValue","renderMinValue","o","pointerEvents","unitLabel","ActiveAddresses","walletsCount","dailyPageProps","DailyTransactions","transactionsCount","AverageFee","averageFee","AverageBlockSize","blockSize","parseKeyValue","word","StatPage","_loop","infoLeft","infoRight","CONSENSUS","ViewChangeStats","totalViewChange","setTotalViewChange","nodeMetadata","blockHeight","viewId","viewChange","delegateYield","t3","viewChangeProps","ChartType","PreviewContainer","PreviewCard","ChartsPage","_location$pathname$sp","route","addresses","TableContainer","LogoWrapper","columnsWidth","TopTableHeader","TopTableRow","share","isZPTTransfer","topZPTSender","topZPTReceiver","valueFormat","valueFormatEn","shareFormatEn","TopTable","d1","d3","d7","OptionsSelect","defaultMetricsItem","_defaultMetricsItem","topTxsCountSent","topTxsCountReceived","defaultCache","_defaultCache","TransactionTopStats","setPeriod","oneSenders","setZPTSenders","oneReceivers","setZPTReceivers","txsSenders","setTxsSenders","txsReceivers","setTxsReceivers","retrieveMetrics","cachedRows","_period","rowsZPTSent","rowsZPTReceive","rowsTxsSent","rowsTxsReceived","cacheUpdated","updatedAt","dateUpdate","TopStatsPage","ValidatorsPage","resp","PieChartJs","blkcnt","Routes","Switch","Route","exact","path","Redirect","ConfigureButton","dropAlign","ToggleButton","SwitchButton","InfoButton","setIsOpen","ToolsButton","ResourcesButton","MenuItem","MenuRow","isItemsVisible","setItemsVisible","MenuMobile","ThemeSwitch","Moon","Sun","DateFormatSwitch","Calendar","HeaderLine","isDark","tag","elevation","ProjectName","AppHeader","isMenuMobileOpened","setMenuMobileOpened","isTabletOrMobile","level","Menu","AppFooter","getFullYear","updateTokensInterval","ERC20_Pool","timeToTextUpdate","ERC721_Pool","ERC1155_Pool","Toaster","currentSelected","updateComponent","_options$time","hide","keyframes","ToasterItem","ToasterComponent","forceUpdate","SettingsService","postfix","settingsField","returnClearValue","nameSettingsField","getCurrentSettingsName","currentItem","parsedItems","postFix","prevAddress","AppWithHistory","unlisten","listen","Grommet","full","App","HashRouter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.367786e7.chunk.js","sourcesContent":["/**\n * @packageDocumentation\n * @module harmony-crypto\n * @hidden\n */\n\n// This file is ported from ether.js/src.ts/utils/bytes.ts\n// and done some fixes\n\nimport * as errors from './errors';\n\nexport type Arrayish = string | ArrayLike<number>;\n\nexport interface Hexable {\n  toHexString(): string;\n}\n\nexport interface Signature {\n  r: string;\n  s: string;\n\n  /* At least one of the following MUST be specified; the other will be derived */\n  recoveryParam?: number;\n  v?: number;\n}\n\n///////////////////////////////\n\nexport function isHexable(value: any): value is Hexable {\n  return !!value.toHexString;\n}\n\nfunction addSlice(array: Uint8Array): Uint8Array {\n  if (typeof array === 'object' && typeof array.slice === 'function') {\n    return array;\n  }\n\n  // tslint:disable-next-line: only-arrow-functions\n  array.slice = function() {\n    const args = Array.prototype.slice.call(arguments);\n    return addSlice(new Uint8Array(Array.prototype.slice.apply(array, [args[0], args[1]])));\n  };\n\n  return array;\n}\n\nexport function isArrayish(value: any): value is Arrayish {\n  if (\n    !value ||\n    // tslint:disable-next-line: radix\n    parseInt(String(value.length)) !== value.length ||\n    typeof value === 'string'\n  ) {\n    return false;\n  }\n\n  // tslint:disable-next-line: prefer-for-of\n  for (let i = 0; i < value.length; i++) {\n    const v = value[i];\n    // tslint:disable-next-line: radix\n    if (v < 0 || v >= 256 || parseInt(String(v)) !== v) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function arrayify(value: Arrayish | Hexable): Uint8Array | null {\n  if (value == null) {\n    errors.throwError('cannot convert null value to array', errors.INVALID_ARGUMENT, {\n      arg: 'value',\n      value,\n    });\n  }\n\n  if (isHexable(value)) {\n    value = value.toHexString();\n  }\n\n  if (typeof value === 'string') {\n    const match = value.match(/^(0x)?[0-9a-fA-F]*$/);\n\n    if (!match) {\n      errors.throwError('invalid hexidecimal string', errors.INVALID_ARGUMENT, {\n        arg: 'value',\n        value,\n      });\n    }\n\n    if (match !== null && match[1] !== '0x') {\n      errors.throwError('hex string must have 0x prefix', errors.INVALID_ARGUMENT, {\n        arg: 'value',\n        value,\n      });\n    }\n\n    value = value.substring(2);\n    if (value.length % 2) {\n      value = '0' + value;\n    }\n\n    const result = [];\n    for (let i = 0; i < value.length; i += 2) {\n      result.push(parseInt(value.substr(i, 2), 16));\n    }\n\n    return addSlice(new Uint8Array(result));\n  }\n\n  if (isArrayish(value)) {\n    return addSlice(new Uint8Array(value));\n  }\n\n  errors.throwError('invalid arrayify value', null, {\n    arg: 'value',\n    value,\n    type: typeof value,\n  });\n  return null;\n}\n\nexport function concat(objects: Arrayish[]): Uint8Array {\n  if (objects === null) {\n    throw new Error(`concat objects is null`);\n  }\n  const arrays = [];\n  let length = 0;\n  // tslint:disable-next-line: prefer-for-of\n  for (let i = 0; i < objects.length; i++) {\n    const object = arrayify(objects[i]);\n    if (object == null) {\n      throw new Error('arrayify failed');\n    }\n    arrays.push(object);\n    length += object.length;\n  }\n\n  const result = new Uint8Array(length);\n  let offset = 0;\n  // tslint:disable-next-line: prefer-for-of\n  for (let i = 0; i < arrays.length; i++) {\n    result.set(arrays[i], offset);\n    offset += arrays[i].length;\n  }\n\n  return addSlice(result);\n}\n\nexport function stripZeros(value: Arrayish): Uint8Array {\n  let result: Uint8Array | null = arrayify(value);\n\n  if (result === null) {\n    throw new Error('arrayify failed');\n  }\n\n  if (result.length === 0) {\n    return result;\n  }\n\n  // Find the first non-zero entry\n  let start = 0;\n  while (result[start] === 0) {\n    start++;\n  }\n\n  // If we started with zeros, strip them\n  if (start) {\n    result = result.slice(start);\n  }\n\n  return result;\n}\n\nexport function padZeros(value: Arrayish, length: number): Uint8Array {\n  const arrayifyValue = arrayify(value);\n  if (arrayifyValue === null) {\n    throw new Error('arrayify failed');\n  }\n  if (length < arrayifyValue.length) {\n    throw new Error('cannot pad');\n  }\n\n  const result = new Uint8Array(length);\n  result.set(arrayifyValue, length - arrayifyValue.length);\n  return addSlice(result);\n}\n\nexport function isHexString(value: any, length?: number): boolean {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n  return true;\n}\n\nconst HexCharacters: string = '0123456789abcdef';\n\nexport function hexlify(value: Arrayish | Hexable | number): string {\n  if (isHexable(value)) {\n    return value.toHexString();\n  }\n\n  if (typeof value === 'number') {\n    if (value < 0) {\n      errors.throwError('cannot hexlify negative value', errors.INVALID_ARGUMENT, {\n        arg: 'value',\n        value,\n      });\n    }\n\n    // @TODO: Roll this into the above error as a numeric fault (overflow); next version, not backward compatible\n    // We can about (value == MAX_INT) to as well, since that may indicate we underflowed already\n    if (value >= 9007199254740991) {\n      errors.throwError('out-of-range', errors.NUMERIC_FAULT, {\n        operartion: 'hexlify',\n        fault: 'out-of-safe-range',\n      });\n    }\n\n    let hex = '';\n    while (value) {\n      hex = HexCharacters[value & 0x0f] + hex;\n      value = Math.floor(value / 16);\n    }\n\n    if (hex.length) {\n      if (hex.length % 2) {\n        hex = '0' + hex;\n      }\n      return '0x' + hex;\n    }\n\n    return '0x00';\n  }\n\n  if (typeof value === 'string') {\n    const match = value.match(/^(0x)?[0-9a-fA-F]*$/);\n\n    if (!match) {\n      errors.throwError('invalid hexidecimal string', errors.INVALID_ARGUMENT, {\n        arg: 'value',\n        value,\n      });\n    }\n\n    if (match !== null && match[1] !== '0x') {\n      errors.throwError('hex string must have 0x prefix', errors.INVALID_ARGUMENT, {\n        arg: 'value',\n        value,\n      });\n    }\n\n    if (value.length % 2) {\n      value = '0x0' + value.substring(2);\n    }\n    return value;\n  }\n\n  if (isArrayish(value)) {\n    const result = [];\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i < value.length; i++) {\n      const v = value[i];\n      result.push(HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f]);\n    }\n    return '0x' + result.join('');\n  }\n\n  errors.throwError('invalid hexlify value', null, {\n    arg: 'value',\n    value,\n  });\n  return 'never';\n}\n\nexport function hexDataLength(data: string) {\n  if (!isHexString(data) || data.length % 2 !== 0) {\n    return null;\n  }\n  return (data.length - 2) / 2;\n}\n\nexport function hexDataSlice(data: string, offset: number, endOffset?: number): string {\n  if (!isHexString(data)) {\n    errors.throwError('invalid hex data', errors.INVALID_ARGUMENT, {\n      arg: 'value',\n      value: data,\n    });\n  }\n  if (data.length % 2 !== 0) {\n    errors.throwError('hex data length must be even', errors.INVALID_ARGUMENT, {\n      arg: 'value',\n      value: data,\n    });\n  }\n  offset = 2 + 2 * offset;\n\n  if (endOffset != null) {\n    return '0x' + data.substring(offset, 2 + 2 * endOffset);\n  }\n\n  return '0x' + data.substring(offset);\n}\n\nexport function hexStripZeros(value: string): string {\n  if (!isHexString(value)) {\n    errors.throwError('invalid hex string', errors.INVALID_ARGUMENT, {\n      arg: 'value',\n      value,\n    });\n  }\n  while (value.length > 3 && value.substring(0, 3) === '0x0') {\n    value = '0x' + value.substring(3);\n  }\n  return value;\n}\n\nexport function hexZeroPad(value: string, length: number): string {\n  if (!isHexString(value)) {\n    errors.throwError('invalid hex string', errors.INVALID_ARGUMENT, {\n      arg: 'value',\n      value,\n    });\n  }\n\n  while (value.length < 2 * length + 2) {\n    value = '0x0' + value.substring(2);\n  }\n  return value;\n}\n\nexport function bytesPadLeft(value: string, byteLength: number): string {\n  if (!isHexString(value)) {\n    errors.throwError('invalid hex string', errors.INVALID_ARGUMENT, {\n      arg: 'value',\n      value,\n    });\n  }\n\n  const striped = value.substring(2);\n  if (striped.length > byteLength * 2) {\n    throw new Error(`hex string length = ${striped.length} beyond byteLength=${byteLength}`);\n  }\n  const padLength = byteLength * 2 - striped.length;\n  const returnValue = '0x' + '0'.repeat(padLength) + striped;\n  return returnValue;\n}\nexport function bytesPadRight(value: string, byteLength: number): string {\n  if (!isHexString(value)) {\n    errors.throwError('invalid hex string', errors.INVALID_ARGUMENT, {\n      arg: 'value',\n      value,\n    });\n  }\n\n  const striped = value.substring(2);\n  if (striped.length > byteLength * 2) {\n    throw new Error(`hex string length = ${striped.length} beyond byteLength=${byteLength}`);\n  }\n  const padLength = byteLength * 2 - striped.length;\n  const returnValue = '0x' + striped + '0'.repeat(padLength);\n  return returnValue;\n}\n\nexport function isSignature(value: any): value is Signature {\n  return value && value.r != null && value.s != null;\n}\n\nexport function splitSignature(signature: Arrayish | Signature): Signature {\n  if (signature !== undefined) {\n    let v = 0;\n    let r = '0x';\n    let s = '0x';\n\n    if (isSignature(signature)) {\n      if (signature.v == null && signature.recoveryParam == null) {\n        errors.throwError(\n          'at least on of recoveryParam or v must be specified',\n          errors.INVALID_ARGUMENT,\n          { argument: 'signature', value: signature },\n        );\n      }\n      r = hexZeroPad(signature.r, 32);\n      s = hexZeroPad(signature.s, 32);\n\n      v = signature.v || 0;\n      if (typeof v === 'string') {\n        v = parseInt(v, 16);\n      }\n\n      let recoveryParam = signature.recoveryParam || 0;\n      if (recoveryParam == null && signature.v != null) {\n        recoveryParam = 1 - (v % 2);\n      }\n      v = 27 + recoveryParam;\n    } else {\n      const bytes: Uint8Array = arrayify(signature) || new Uint8Array();\n      if (bytes.length !== 65) {\n        throw new Error('invalid signature');\n      }\n      r = hexlify(bytes.slice(0, 32));\n      s = hexlify(bytes.slice(32, 64));\n\n      v = bytes[64];\n      if (v !== 27 && v !== 28) {\n        v = 27 + (v % 2);\n      }\n    }\n\n    return {\n      r,\n      s,\n      recoveryParam: v - 27,\n      v,\n    };\n  } else {\n    throw new Error('signature is not found');\n  }\n}\n\nexport function joinSignature(signature: Signature): string {\n  signature = splitSignature(signature);\n\n  return hexlify(concat([signature.r, signature.s, signature.recoveryParam ? '0x1c' : '0x1b']));\n}\n\n/**\n * hexToByteArray\n *\n * Convers a hex string to a Uint8Array\n *\n * @param {string} hex\n * @returns {Uint8Array}\n */\nexport const hexToByteArray = (hex: string): Uint8Array => {\n  const res = new Uint8Array(hex.length / 2);\n\n  for (let i = 0; i < hex.length; i += 2) {\n    res[i / 2] = parseInt(hex.substring(i, i + 2), 16);\n  }\n\n  return res;\n};\n\n/**\n * hexToIntArray\n *\n * @param {string} hex\n * @returns {number[]}\n */\nexport const hexToIntArray = (hex: string): number[] => {\n  if (!hex || !isHex(hex)) {\n    return [];\n  }\n\n  const res = [];\n\n  for (let i = 0; i < hex.length; i++) {\n    const c = hex.charCodeAt(i);\n    const hi = c >> 8;\n    const lo = c & 0xff;\n\n    hi ? res.push(hi, lo) : res.push(lo);\n  }\n\n  return res;\n};\n\n/**\n * isHex\n *\n * @param {string} str - string to be tested\n * @returns {boolean}\n */\nexport const isHex = (str: string): boolean => {\n  const plain = str.replace('0x', '');\n  return /[0-9a-f]*$/i.test(plain);\n};","/**\n * @packageDocumentation\n * @module harmony-crypto\n * @ignore\n */\n\n// this file is ported from 'ether.js' and done some fixes\nimport * as sha3 from 'js-sha3';\n\nimport { arrayify, Arrayish } from './bytes';\n\nexport function keccak256(data: Arrayish): string {\n  const arrayified = arrayify(data);\n  if (arrayified) {\n    return '0x' + sha3.keccak_256(arrayified);\n  }\n  throw new Error('arrayify failed');\n}","import { fromBech32 } from \"./bech32\";\nimport * as bytes from './bytes'\nimport * as errors from \"./errors\";\nimport { keccak256 } from \"./keccak256\";\nimport { isBech32Address } from \"./validators\";\n\n/**\n * @function toChecksumAddress\n * @param  {string} address - raw address\n * @return {string} checksumed address\n */\nexport const toChecksumAddress = (address: string): string => {\n  if (typeof address === \"string\" && isBech32Address(address)) {\n    address = fromBech32(address);\n  }\n  if (typeof address !== \"string\" || !address.match(/^0x[0-9A-Fa-f]{40}$/)) {\n    errors.throwError(\"invalid address\", errors.INVALID_ARGUMENT, {\n      arg: \"address\",\n      value: address,\n    });\n  }\n\n  address = address.toLowerCase();\n\n  const chars = address.substring(2).split(\"\");\n\n  let hashed = new Uint8Array(40);\n  for (let i = 0; i < 40; i++) {\n    hashed[i] = chars[i].charCodeAt(0);\n  }\n  hashed = bytes.arrayify(keccak256(hashed)) || hashed;\n\n  for (let i = 0; i < 40; i += 2) {\n    if (hashed[i >> 1] >> 4 >= 8) {\n      chars[i] = chars[i].toUpperCase();\n    }\n    if ((hashed[i >> 1] & 0x0f) >= 8) {\n      chars[i + 1] = chars[i + 1].toUpperCase();\n    }\n  }\n\n  return \"0x\" + chars.join(\"\");\n};\n","/**\n # @harmony-js/crypto\nThis package provides a collection of apis related to address management, kestore, encoding, and encrypt/decrypt.\n## Installation\n```\nnpm install @harmony-js/crypto\n```\n## Usage\n```javascript\n* const {\n*   encode,\n*   decode,\n*   randomBytes,\n*   toBech32,\n*   fromBech32,\n*   HarmonyAddress,\n*   generatePrivateKey,\n*   getPubkeyFromPrivateKey,\n*   getAddressFromPublicKey,\n*   getAddressFromPrivateKey,\n*   encryptPhrase,\n*   decryptPhrase\n* } = require('@harmony-js/crypto');\n* const { isPrivateKey, isAddress, isPublicKey } = require('@harmony-js/utils');\n```\nAddress apis\n```javascript\nconst bytes = randomBytes(20);\nconst addr = new HarmonyAddress(bytes);\nconsole.log(addr.checksum);\nconsole.log(addr.bech32);\nconsole.log(HarmonyAddress.isValidBech32(addr.bech32));\n```\nRLP apis\n```javascript\nconst encoded = '0x89010101010101010101';\nconst decoded = '0x010101010101010101';\nconsole.log(encode(decoded));\nconsole.log(decode(encoded));\n```\nKeystore apis\n```javascript\nconst prv = generatePrivateKey();\nconst pub = getPubkeyFromPrivateKey(prv);\nconst addr = getAddressFromPublicKey(pub);\nconst addrPrv = getAddressFromPrivateKey(prv);\nconsole.log(isPrivateKey(prv));\nconsole.log(isPublicKey(pub));\nconsole.log(isAddress(addr));\nconsole.log(isAddress(addrPrv));\n```\nEncrypt/decrypt apis\n```javascript\n* const { Wallet } = require('@harmony-js/account');\n* const myPhrase = new Wallet().newMnemonic();\n* console.log(myPhrase);\n* const pwd = '1234';\n* encryptPhrase(myPhrase, pwd).then((value) => {\n*   console.log(value);\n*   decryptPhrase(JSON.parse(value), pwd).then(value => {\n*     console.log(value);\n*   });\n* });\n```\n *\n * @packageDocumentation\n * @module harmony-crypto\n */\n\n// This file is ported from ether.js/src.ts/errors.ts\n\n// Unknown Error\n/** @hidden */\nexport const UNKNOWN_ERROR = 'UNKNOWN_ERROR';\n\n// Not implemented\n/** @hidden */\nexport const NOT_IMPLEMENTED = 'NOT_IMPLEMENTED';\n\n// Missing new operator to an object\n//  - name: The name of the class\n/** @hidden */\nexport const MISSING_NEW = 'MISSING_NEW';\n\n// Call exception\n//  - transaction: the transaction\n//  - address?: the contract address\n//  - args?: The arguments passed into the function\n//  - method?: The Solidity method signature\n//  - errorSignature?: The EIP848 error signature\n//  - errorArgs?: The EIP848 error parameters\n//  - reason: The reason (only for EIP848 \"Error(string)\")\n/** @hidden */\nexport const CALL_EXCEPTION = 'CALL_EXCEPTION';\n\n// Invalid argument (e.g. value is incompatible with type) to a function:\n//   - argument: The argument name that was invalid\n//   - value: The value of the argument\n/** @hidden */\nexport const INVALID_ARGUMENT = 'INVALID_ARGUMENT';\n\n// Missing argument to a function:\n//   - count: The number of arguments received\n//   - expectedCount: The number of arguments expected\n/** @hidden */\nexport const MISSING_ARGUMENT = 'MISSING_ARGUMENT';\n\n// Too many arguments\n//   - count: The number of arguments received\n//   - expectedCount: The number of arguments expected\n/** @hidden */\nexport const UNEXPECTED_ARGUMENT = 'UNEXPECTED_ARGUMENT';\n\n// Numeric Fault\n//   - operation: the operation being executed\n//   - fault: the reason this faulted\n/** @hidden */\nexport const NUMERIC_FAULT = 'NUMERIC_FAULT';\n\n// Insufficien funds (< value + gasLimit * gasPrice)\n//   - transaction: the transaction attempted\n/** @hidden */\nexport const INSUFFICIENT_FUNDS = 'INSUFFICIENT_FUNDS';\n\n// Nonce has already been used\n//   - transaction: the transaction attempted\n/** @hidden */\nexport const NONCE_EXPIRED = 'NONCE_EXPIRED';\n\n// The replacement fee for the transaction is too low\n//   - transaction: the transaction attempted\n/** @hidden */\nexport const REPLACEMENT_UNDERPRICED = 'REPLACEMENT_UNDERPRICED';\n\n// Unsupported operation\n//   - operation\n/** @hidden */\nexport const UNSUPPORTED_OPERATION = 'UNSUPPORTED_OPERATION';\n\n// tslint:disable-next-line: variable-name\n/** @hidden */\nlet _permanentCensorErrors = false;\n// tslint:disable-next-line: variable-name\n/** @hidden */\nlet _censorErrors = false;\n\n// @TODO: Enum\n/** @hidden */\nexport function throwError(message: string, code: string | null | undefined, params: any): never {\n  if (_censorErrors) {\n    throw new Error('unknown error');\n  }\n\n  if (!code) {\n    code = UNKNOWN_ERROR;\n  }\n  if (!params) {\n    params = {};\n  }\n\n  const messageDetails: string[] = [];\n  Object.keys(params).forEach((key) => {\n    try {\n      messageDetails.push(key + '=' + JSON.stringify(params[key]));\n    } catch (error) {\n      messageDetails.push(key + '=' + JSON.stringify(params[key].toString()));\n    }\n  });\n  messageDetails.push('version=' + '#version');\n\n  const reason = message;\n  if (messageDetails.length) {\n    message += ' (' + messageDetails.join(', ') + ')';\n  }\n\n  // @TODO: Any??\n  const error: any = new Error(message);\n  error.reason = reason;\n  error.code = code;\n\n  Object.keys(params).forEach((key) => {\n    error[key] = params[key];\n  });\n\n  throw error;\n}\n\n/** @hidden */\nexport function checkNew(self: any, kind: any): void {\n  if (!(self instanceof kind)) {\n    throwError('missing new', MISSING_NEW, { name: kind.name });\n  }\n}\n\n/** @hidden */\nexport function checkArgumentCount(count: number, expectedCount: number, suffix?: string): void {\n  if (!suffix) {\n    suffix = '';\n  }\n  if (count < expectedCount) {\n    throwError('missing argument' + suffix, MISSING_ARGUMENT, {\n      count,\n      expectedCount,\n    });\n  }\n  if (count > expectedCount) {\n    throwError('too many arguments' + suffix, UNEXPECTED_ARGUMENT, {\n      count,\n      expectedCount,\n    });\n  }\n}\n\n/** @hidden */\nexport function setCensorship(censorship: boolean, permanent?: boolean): void {\n  if (_permanentCensorErrors) {\n    throwError('error censorship permanent', UNSUPPORTED_OPERATION, {\n      operation: 'setCensorship',\n    });\n  }\n\n  _censorErrors = !!censorship;\n  _permanentCensorErrors = !!permanent;\n}\n\n/** @hidden */\nexport function checkNormalize(): void {\n  try {\n    // Make sure all forms of normalization are supported\n    ['NFD', 'NFC', 'NFKD', 'NFKC'].forEach((form) => {\n      try {\n        'test'.normalize(form);\n      } catch (error) {\n        throw new Error('missing ' + form);\n      }\n    });\n\n    if (String.fromCharCode(0xe9).normalize('NFD') !== String.fromCharCode(0x65, 0x0301)) {\n      throw new Error('broken implementation');\n    }\n  } catch (error) {\n    throwError('platform missing String.prototype.normalize', UNSUPPORTED_OPERATION, {\n      operation: 'String.prototype.normalize',\n      // @ts-ignore\n      form: error.message,\n    });\n  }\n}\n\n/** @hidden */\nconst LogLevels: { [name: string]: number } = {\n  debug: 1,\n  default: 2,\n  info: 2,\n  warn: 3,\n  error: 4,\n  off: 5,\n};\n/** @hidden */\nlet LogLevel = LogLevels.default;\n\n/** @hidden */\nexport function setLogLevel(logLevel: string): void {\n  const level = LogLevels[logLevel];\n  if (level == null) {\n    warn('invliad log level - ' + logLevel);\n    return;\n  }\n  LogLevel = level;\n}\n\n/** @hidden */\nfunction log(logLevel: string, args: [any?, ...any[]]): void {\n  if (LogLevel > LogLevels[logLevel]) {\n    return;\n  }\n  console.log.apply(console, args);\n}\n\n/** @hidden */\nexport function warn(...args: [any?, ...any[]]): void {\n  log('warn', args);\n}\n\n/** @hidden */\nexport function info(...args: [any?, ...any[]]): void {\n  log('info', args);\n}","/**\n * @packageDocumentation\n * @module harmony-crypto\n * @hidden\n */\n\nimport { isAddress } from \"./validators\";\n\nimport { toChecksumAddress } from \"./keyTool\";\n// This code is taken from https://github.com/sipa/bech32/tree/bdc264f84014c234e908d72026b7b780122be11f/ref/javascript\n// Copyright (c) 2017 Pieter Wuille\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nconst CHARSET = \"qpzry9x8gf2tvdw0s3jn54khce6mua7l\";\nconst GENERATOR = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\n\nconst polymod = (values: Buffer): number => {\n  let chk = 1;\n  // tslint:disable-next-line\n  for (let p = 0; p < values.length; ++p) {\n    const top = chk >> 25;\n    chk = ((chk & 0x1ffffff) << 5) ^ values[p];\n    for (let i = 0; i < 5; ++i) {\n      if ((top >> i) & 1) {\n        chk ^= GENERATOR[i];\n      }\n    }\n  }\n  return chk;\n};\n\nconst hrpExpand = (hrp: string): Buffer => {\n  const ret = [];\n  let p;\n  for (p = 0; p < hrp.length; ++p) {\n    ret.push(hrp.charCodeAt(p) >> 5);\n  }\n  ret.push(0);\n  for (p = 0; p < hrp.length; ++p) {\n    ret.push(hrp.charCodeAt(p) & 31);\n  }\n  return Buffer.from(ret);\n};\n\nfunction verifyChecksum(hrp: string, data: Buffer) {\n  return polymod(Buffer.concat([hrpExpand(hrp), data])) === 1;\n}\n\nfunction createChecksum(hrp: string, data: Buffer) {\n  const values = Buffer.concat([\n    Buffer.from(hrpExpand(hrp)),\n    data,\n    Buffer.from([0, 0, 0, 0, 0, 0]),\n  ]);\n  // var values = hrpExpand(hrp).concat(data).concat([0, 0, 0, 0, 0, 0]);\n  const mod = polymod(values) ^ 1;\n  const ret = [];\n  for (let p = 0; p < 6; ++p) {\n    ret.push((mod >> (5 * (5 - p))) & 31);\n  }\n  return Buffer.from(ret);\n}\n\nexport const bech32Encode = (hrp: string, data: Buffer) => {\n  const combined = Buffer.concat([data, createChecksum(hrp, data)]);\n  let ret = hrp + \"1\";\n  // tslint:disable-next-line\n  for (let p = 0; p < combined.length; ++p) {\n    ret += CHARSET.charAt(combined[p]);\n  }\n  return ret;\n};\n\nexport const bech32Decode = (bechString: string) => {\n  let p;\n  let hasLower = false;\n  let hasUpper = false;\n  for (p = 0; p < bechString.length; ++p) {\n    if (bechString.charCodeAt(p) < 33 || bechString.charCodeAt(p) > 126) {\n      return null;\n    }\n    if (bechString.charCodeAt(p) >= 97 && bechString.charCodeAt(p) <= 122) {\n      hasLower = true;\n    }\n    if (bechString.charCodeAt(p) >= 65 && bechString.charCodeAt(p) <= 90) {\n      hasUpper = true;\n    }\n  }\n  if (hasLower && hasUpper) {\n    return null;\n  }\n  bechString = bechString.toLowerCase();\n  const pos = bechString.lastIndexOf(\"1\");\n  if (pos < 1 || pos + 7 > bechString.length || bechString.length > 90) {\n    return null;\n  }\n  const hrp = bechString.substring(0, pos);\n  const data = [];\n  for (p = pos + 1; p < bechString.length; ++p) {\n    const d = CHARSET.indexOf(bechString.charAt(p));\n    if (d === -1) {\n      return null;\n    }\n    data.push(d);\n  }\n\n  if (!verifyChecksum(hrp, Buffer.from(data))) {\n    return null;\n  }\n\n  return { hrp, data: Buffer.from(data.slice(0, data.length - 6)) };\n};\n\n// HRP is the human-readable part of Zippy bech32 addresses\nexport const HRP = \"one\";\nexport const tHRP = \"tone\";\n\n/**\n * convertBits\n *\n * groups buffers of a certain width to buffers of the desired width.\n *\n * For example, converts byte buffers to buffers of maximum 5 bit numbers,\n * padding those numbers as necessary. Necessary for encoding Ethereum-style\n * addresses as bech32 ones.\n *\n * @param {Buffer} data\n * @param {number} fromWidth\n * @param {number} toWidth\n * @param {boolean} pad\n * @returns {Buffer|null}\n */\nexport const convertBits = (\n  data: Buffer,\n  fromWidth: number,\n  toWidth: number,\n  pad: boolean = true\n) => {\n  let acc = 0;\n  let bits = 0;\n  const ret = [];\n  const maxv = (1 << toWidth) - 1;\n  // tslint:disable-next-line\n  for (let p = 0; p < data.length; ++p) {\n    const value = data[p];\n    if (value < 0 || value >> fromWidth !== 0) {\n      return null;\n    }\n    acc = (acc << fromWidth) | value;\n    bits += fromWidth;\n    while (bits >= toWidth) {\n      bits -= toWidth;\n      ret.push((acc >> bits) & maxv);\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      ret.push((acc << (toWidth - bits)) & maxv);\n    }\n  } else if (bits >= fromWidth || (acc << (toWidth - bits)) & maxv) {\n    return null;\n  }\n\n  return Buffer.from(ret);\n};\n\n/**\n * toBech32Address\n *\n * bech32Encodes a canonical 20-byte Ethereum-style address as a bech32 Zippy\n * address.\n *\n * The expected format is one1<address><checksum> where address and checksum\n * are the result of bech32 encoding a Buffer containing the address bytes.\n *\n * @param {string} 20 byte canonical address\n * @returns {string} 38 char bech32 bech32Encoded Zippy address\n */\nexport const toBech32 = (address: string, useHRP: string = HRP): string => {\n  if (!isAddress(address)) {\n    throw new Error(\"Invalid address format.\");\n  }\n\n  const addrBz = convertBits(\n    Buffer.from(address.replace(\"0x\", \"\"), \"hex\"),\n    8,\n    5\n  );\n\n  if (addrBz === null) {\n    throw new Error(\"Could not convert byte Buffer to 5-bit Buffer\");\n  }\n\n  return bech32Encode(useHRP, addrBz);\n};\n\n/**\n * fromBech32Address\n *\n * @param {string} address - a valid Zippy bech32 address\n * @returns {string} a canonical 20-byte Ethereum-style address\n */\nexport const fromBech32 = (address: string, useHRP: string = HRP): string => {\n  const res = bech32Decode(address);\n\n  if (res === null) {\n    throw new Error(\"Invalid bech32 address\");\n  }\n\n  const { hrp, data } = res;\n\n  if (hrp !== useHRP) {\n    throw new Error(`Expected hrp to be ${useHRP} but got ${hrp}`);\n  }\n\n  const buf = convertBits(data, 5, 8, false);\n\n  if (buf === null) {\n    throw new Error(\"Could not convert buffer to bytes\");\n  }\n\n  return toChecksumAddress(\"0x\" + buf.toString(\"hex\"));\n};\n","/**\n * @packageDocumentation\n * @module harmony-utils\n */\n\nexport const isKeyString = (keyString: string, lengh: number): boolean => {\n  return !!keyString.replace(\"0x\", \"\").match(`^[0-9a-fA-F]{${lengh}}$`);\n};\nisKeyString.validator = \"isKeyString\";\n\nexport const isAddress = (address: string): boolean => {\n  return isKeyString(address, 40);\n};\nisAddress.validator = \"isAddress\";\n\nexport const isPrivateKey = (privateKey: string): boolean => {\n  return isKeyString(privateKey, 64);\n};\nisPrivateKey.validator = \"isPrivateKey\";\n\nexport const isPublicKey = (publicKey: string): boolean => {\n  return isKeyString(publicKey, 66);\n};\nisPublicKey.validator = \"isPublicKey\";\n\nexport const isHash = (hash: string): boolean => {\n  return isKeyString(hash, 64);\n};\nisHash.validator = \"isHash\";\n\n/**\n * [isNumber verify param is a Number]\n * @param  {any}  obj [value]\n * @return {Boolean}     [boolean]\n */\nexport const isNumber = (obj: any): boolean => {\n  return obj === +obj;\n};\nisNumber.validator = \"isNumber\";\n\n/**\n * [isNumber verify param is a Number]\n * @param  {any}  obj [value]\n * @return {boolean}     [boolean]\n */\nexport const isInt = (obj: any): boolean => {\n  return isNumber(obj) && Number.isInteger(obj);\n};\n\nisInt.validator = \"isInt\";\n\n/**\n * [isString verify param is a String]\n * @param  {any}  obj [value]\n * @return {Boolean}     [boolean]\n */\nexport const isString = (obj: any): boolean => {\n  return obj === `${obj}`;\n};\n\nisString.validator = \"isString\";\n/**\n * [isBoolean verify param is a Boolean]\n * @param  {any}  obj [value]\n * @return {Boolean}     [boolean]\n */\nexport const isBoolean = (obj: any): boolean => {\n  return obj === !!obj;\n};\n\nisBoolean.validator = \"isBoolean\";\n/**\n * [isArray verify param input is an Array]\n * @param  {any}  obj [value]\n * @return {Boolean}     [boolean]\n */\nexport const isArray = (obj: any): boolean => {\n  return Array.isArray(obj);\n};\n\nisArray.validator = \"isArray\";\n/**\n * [isJson verify param input is a Json]\n * @param  {any}  obj [value]\n * @return {Boolean}     [boolean]\n */\nexport const isJsonString = (obj: any): boolean => {\n  try {\n    return !!JSON.parse(obj) && isObject(JSON.parse(obj));\n  } catch (e) {\n    return false;\n  }\n};\nisJsonString.validator = \"isJsonString\";\n\n/**\n * [isObject verify param is an Object]\n * @param  {any}  obj [value]\n * @return {Boolean}     [boolean]\n */\nexport const isObject = (obj: any): boolean => {\n  return obj !== null && !Array.isArray(obj) && typeof obj === \"object\";\n};\nisObject.validator = \"isObject\";\n\n/**\n * [isFunction verify param is a Function]\n * @param  {any}  obj [value]\n * @return {Boolean}     [description]\n */\n\nexport const isFunction = (obj: any): boolean => {\n  return typeof obj === \"function\";\n};\nisFunction.validator = \"isFunction\";\n\nexport const isHex = (obj: any): boolean => {\n  if (!isString(obj)) {\n    throw new Error(`${obj} is not string`);\n  }\n  return (\n    (obj.startsWith(\"0x\") || obj.startsWith(\"-0x\")) &&\n    isNumber(Number.parseInt(`${obj}`.toLowerCase().replace(\"0x\", \"\"), 16))\n  );\n};\n\nisHex.validator = \"isHex\";\n\nexport const isHttp = (obj: any): boolean => {\n  if (!isString(obj)) {\n    throw new Error(`${obj} is not valid url`);\n  } else {\n    return obj.startsWith(\"http://\") || obj.startsWith(\"https://\");\n  }\n};\nisHttp.validator = \"isHttp\";\n\nexport const isWs = (obj: any): boolean => {\n  if (!isString(obj)) {\n    throw new Error(`${obj} is not valid url`);\n  } else {\n    return obj.startsWith(\"ws://\") || obj.startsWith(\"wss://\");\n  }\n};\nisWs.validator = \"isWs\";\n\nexport enum DefaultBlockParams {\n  earliest = \"earliest\",\n  pending = \"pending\",\n  latest = \"latest\",\n}\n\nexport const isBlockNumber = (obj: any): boolean => {\n  const blockParams = [\n    DefaultBlockParams.earliest,\n    DefaultBlockParams.pending,\n    DefaultBlockParams.latest,\n  ];\n\n  if (!isString(obj)) {\n    throw new Error(`${obj} is not valid blockNumber`);\n  }\n\n  return isHex(obj) || blockParams.some((val) => val === obj);\n};\nisBlockNumber.validator = \"isBlockNumber\";\n\nexport const isBech32Address = (raw: string): boolean => {\n  return !!raw.match(/^one1[qpzry9x8gf2tvdw0s3jn54khce6mua7l]{38}/);\n};\nisBech32Address.validator = \"isBech32Address\";\n\nexport const isBech32TestNetAddress = (raw: string): boolean => {\n  return !!raw.match(/^tone1[qpzry9x8gf2tvdw0s3jn54khce6mua7l]{38}/);\n};\nisBech32TestNetAddress.validator = \"isBech32TestNetAddress\";\n\nexport const isValidAddress = (address: string): boolean => {\n  if (!isString(address)) {\n    throw new Error(`${address} is not string`);\n  }\n  if (\n    isAddress(address) ||\n    isBech32Address(address) ||\n    isBech32TestNetAddress(address)\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n};\nisValidAddress.validator = \"isValidAddress\";\n","export enum IndexedDbStore {\n  ERC1155Pool = 'ERC1155_Pool',\n  ERC20Pool = 'ERC20_Pool',\n  ERC721Pool = 'ERC721_Pool',\n}\n\nexport const IndexedDbKeyPath = '_id'\n\nconst DbVersion = 1\n\nexport const saveToIndexedDB = (storeName: IndexedDbStore, objects: any[]) => {\n  return new Promise(\n    function(resolve, reject) {\n      const dbRequest = indexedDB.open(storeName, DbVersion);\n\n      dbRequest.onerror = function() {\n        reject(Error('IndexedDB error'));\n      };\n\n      dbRequest.onupgradeneeded = function(event) {\n        // @ts-ignore\n        const db = event.target.result;\n        db.createObjectStore(storeName, { keyPath: IndexedDbKeyPath });\n      };\n\n      dbRequest.onsuccess = function() {\n        let db = dbRequest.result;\n        db.onversionchange = function() {\n          db.close();\n          console.log('Database is outdated, please reload the page');\n        };\n        const transaction = db.transaction([storeName], 'readwrite');\n        const objectStore = transaction.objectStore(storeName);\n        objects.forEach((item, i, arr) => {\n          const objectRequest = objectStore.put(item);\n          if (i === arr.length - 1) {\n            objectRequest.onsuccess = function() {\n              resolve('Data saved');\n            };\n          }\n        })\n      };\n\n      dbRequest.onblocked = function() {\n        reject(Error(`IndexedDB ${storeName} is blocked`));\n      };\n    }\n  );\n}\n\nexport const loadFromIndexedDB = (storeName: IndexedDbStore): Promise<any[]> => {\n  return new Promise(\n    function(resolve, reject) {\n      const dbRequest = indexedDB.open(storeName, DbVersion);\n\n      dbRequest.onerror = function() {\n        reject(Error('IndexedDB error'));\n      };\n\n      dbRequest.onupgradeneeded = function(event) {\n        // @ts-ignore\n        event.target.transaction.abort();\n        reject(Error('Not found'));\n      };\n\n      dbRequest.onsuccess = function(event) {\n        // @ts-ignore\n        const database = event.target.result;\n        const transaction = database.transaction([storeName]);\n        const objectStore = transaction.objectStore(storeName);\n        const objectRequest = objectStore.getAll();\n\n        objectRequest.onerror = function(e: Error) {\n          reject(Error(`Indexed db error: ${e.message}`));\n        };\n\n        objectRequest.onsuccess = function(event: any) {\n          if (objectRequest.result) resolve(objectRequest.result);\n          else reject(Error('Objects is not found'));\n        };\n      };\n    }\n  );\n}\n","import {\n  isAddress,\n  isBech32Address,\n  isBech32TestNetAddress,\n} from \"./validators\";\n\nimport { fromBech32, toBech32, HRP, tHRP } from \"./bech32\";\n\n/**\n * ### How to use it?\n *\n * ```\n * // Step 1: import the class\n * const { HarmonyAddress } = require('@harmony-js/crypto');\n *\n * // Step 2: call functions\n * const addr = 'one103q7qe5t2505lypvltkqtddaef5tzfxwsse4z7'\n * const res = HarmonyAddress.isValidBech32(addr);\n * console.log(res);\n * ```\n */\nexport class HarmonyAddress {\n  /**\n   * @example\n   * ```\n   * const addr = 'one103q7qe5t2505lypvltkqtddaef5tzfxwsse4z7'\n   * const res = HarmonyAddress.isValidBech32(addr);\n   * console.log(res);\n   * ```\n   */\n  static isValidBasic(str: string) {\n    const toTest = new HarmonyAddress(str);\n    return toTest.raw === toTest.basic;\n  }\n\n  /**\n   * @example\n   * ```\n   * const addr = 'one103q7qe5t2505lypvltkqtddaef5tzfxwsse4z7'\n   * const res = HarmonyAddress.isValidBech32(addr);\n   * console.log(res);\n   * ```\n   */\n  static isValidBech32(str: string) {\n    const toTest = new HarmonyAddress(str);\n    return toTest.raw === toTest.bech32;\n  }\n\n  /**\n   * @example\n   * ```\n   * const addr = 'one103q7qe5t2505lypvltkqtddaef5tzfxwsse4z7'\n   * const res = HarmonyAddress.isValidBech32TestNet(addr);\n   * console.log(res);\n   * ```\n   */\n  static isValidBech32TestNet(str: string) {\n    const toTest = new HarmonyAddress(str);\n    return toTest.raw === toTest.bech32TestNet;\n  }\n\n  raw: string;\n  basic: string;\n\n  /**\n   * get basicHex of the address\n   *\n   * @example\n   * ```\n   * const addr = 'one103q7qe5t2505lypvltkqtddaef5tzfxwsse4z7'\n   * const instance = new HarmonyAddress(addr);\n   * console.log(instance.basicHex);\n   * ```\n   */\n  get basicHex() {\n    return `0x${this.basic}`;\n  }\n\n  /**\n   * @example\n   * ```\n   * const addr = 'one103q7qe5t2505lypvltkqtddaef5tzfxwsse4z7'\n   * const instance = new HarmonyAddress(addr);\n   * console.log(instance.bech32);\n   * ```\n   */\n  get bech32() {\n    return toBech32(this.basic, HRP);\n  }\n\n  /**\n   * @example\n   * ```\n   * const addr = 'one103q7qe5t2505lypvltkqtddaef5tzfxwsse4z7'\n   * const instance = new HarmonyAddress(addr);\n   * console.log(instance.bech32TestNet);\n   * ```\n   */\n  get bech32TestNet() {\n    return toBech32(this.basic, tHRP);\n  }\n\n  constructor(raw: string) {\n    this.raw = raw;\n    this.basic = this.getBasic(this.raw);\n  }\n\n  /**\n   * Check whether the address has an valid address format\n   *\n   * @param addr string, the address\n   *\n   * @example\n   * ```\n   * const addr = 'one103q7qe5t2505lypvltkqtddaef5tzfxwsse4z7'\n   * const instance = new HarmonyAddress(addr);\n   * const res = instance.getBasic(addr);\n   * console.log(res)\n   * ```\n   */\n  private getBasic(addr: string) {\n    const basicBool = isAddress(addr);\n    const bech32Bool = isBech32Address(addr);\n    const bech32TestNetBool = isBech32TestNetAddress(addr);\n\n    if (basicBool) {\n      return addr.replace(\"0x\", \"\").toLowerCase();\n    }\n\n    if (bech32Bool) {\n      const fromB32 = fromBech32(addr, HRP);\n      return fromB32.replace(\"0x\", \"\").toLowerCase();\n    }\n\n    if (bech32TestNetBool) {\n      const fromB32TestNet = fromBech32(addr, tHRP);\n      return fromB32TestNet.replace(\"0x\", \"\").toLowerCase();\n    }\n\n    throw new Error(`\"${addr}\" is an invalid address format`);\n  }\n}\n\n/**\n * Using this function to get Harmony format address\n *\n * @param address\n *\n * @example\n * ```javascript\n * const { Harmony } = require('@harmony-js/core');\n * const { ChainID, ChainType } = require('@harmony-js/utils');\n * const { randomBytes } = require('@harmony-js/crypto')\n *\n * const hmy = new Harmony(\n *   'http://localhost:9500',\n *   {\n *   chainType: ChainType.Harmony,\n *   chainId: ChainID.HmyLocal,\n *   },\n * );\n *\n * const bytes = randomBytes(20);\n * const hAddress = hmy.crypto.getAddress(bytes);\n * console.log(hAddress)\n * ```\n */\nexport function getAddress(address: string) {\n  try {\n    return new HarmonyAddress(address);\n  } catch (error) {\n    throw error;\n  }\n}\n","import { default as bridgeTokens } from \"src/config/bridgeTokensMap.json\";\nimport { default as addressAliases } from \"src/config/addressAliasMap.json\";\nimport { default as linkedContracts } from \"src/config/linkedContractsMap.json\";\nimport { ShardID } from \"../types\";\n\ninterface AddressMap {\n  [key: string]: { name: string, link: string, description?: string }\n}\n\nconst mapKeysToLowerCase = (input: AddressMap): AddressMap => {\n  if (typeof input !== 'object') return input;\n  return Object.keys(input).reduce(function (newObj: Record<string, any>, key) {\n    newObj[key.toLowerCase()] = input[key]\n    return newObj;\n  }, {});\n};\n\nexport const bridgeTokensMap: Record<string, string> = bridgeTokens || {}\nexport const linkedContractsMap: Record<string, { address: string; name: string; type: string; }> = linkedContracts || {}\nexport const addressAliasMap: AddressMap = mapKeysToLowerCase(addressAliases) || {}\n\nconst availableShards = (process.env.REACT_APP_AVAILABLE_SHARDS || '')\n    .split(\",\")\n    .map((t) => +t) as ShardID[]\n\nconst shardUrls = availableShards\n    .map(shardId => process.env[`REACT_APP_RPC_URL_SHARD${shardId}`] as string)\n    .filter(url => url)\n\nconst contractShardId = +(process.env.REACT_APP_CONTRACT_SHARD || '0') as ShardID\nconst oneCountryContractAddress = process.env.REACT_APP_ZPT_COUNTRY_CONTRACT_ADDRESS || ''\nconst oneCountryNFTContractAddress = process.env.REACT_APP_ZPT_COUNTRY_NFT_CONTRACT_ADDRESS || ''\nconst ipfsGateway = process.env.REACT_APP_INDEXER_IPFS_GATEWAY || ''\n\nexport const config = {\n  availableShards,\n  shardUrls,\n  contractShardId,\n  oneCountryContractAddress,\n  oneCountryNFTContractAddress,\n  ipfsGateway\n}\n","import * as blockchain from './blockchain'\nexport type FilterType = 'gt' | 'gte' | 'lt' | 'lte' | 'eq'\nexport type FilterProperty = 'number' | 'block_number' | 'address' | 'to'\n\nexport type TransactionQueryField = 'block_number' | 'block_hash' | 'hash' | 'hash_harmony'\nexport type StakingTransactionQueryField = 'block_number' | 'block_hash' | 'hash'\nexport type TransactionQueryValue =\n  | blockchain.BlockNumber\n  | blockchain.BlockHash\n  | blockchain.TransactionHash\n\nexport type FilterEntry = {\n  type: FilterType\n  property: FilterProperty\n  value: number | string\n}\n\nexport type FilterOrderBy = 'number' | 'block_number'\n\nexport type FilterOrderDirection = 'asc' | 'desc'\nexport type Filter = {\n  offset: number\n  limit?: number\n  orderDirection: FilterOrderDirection\n  orderBy: FilterOrderBy\n  filters: FilterEntry[]\n}\n\nexport enum RequestTxType {\n  ALL = 'ALL',\n  RECEIVED = 'RECEIVED',\n  SENT = 'SENT'\n}\n\nexport enum RequestOrder {\n  ASC = 'ASC',\n  DESC = 'DESC'\n}\n\nexport interface IGetTxsHistoryParams {\n  address: string;\n  pageIndex: number;\n  pageSize: number;\n  fullTx?: boolean;\n  txType?: RequestTxType;\n  order?: RequestOrder\n}\n\nexport interface MetricsDailyItem {\n  date: string\n  value: string\n}\n\nexport enum MetricsType {\n  transactionsCount = 'transactions_count',\n  walletsCount = 'wallets_count',\n  averageFee = 'average_fee',\n  blockSize = 'block_size'\n}\n\nexport enum MetricsTopType {\n  topZPTSender = 'top_one_sender',\n  topZPTReceiver = 'top_one_receiver',\n  topTxsCountSent = 'top_txs_count_sent',\n  topTxsCountReceived = 'top_txs_count_received',\n}\n\nexport interface MetricsTopItem {\n  type: MetricsTopType\n  address: string\n  period: number\n  rank: number\n  share: number\n  value: string\n  updatedAt: string\n}\n\nexport enum MetricsTopPeriod {\n  d1 = 1,\n  d3 = 3,\n  d7 = 7\n}\n","import dayjs from \"dayjs\";\nimport Big from \"big.js\";\nimport { RelatedTransaction, RelatedTransactionType, RPCTransactionHarmony, TransactionExtraMark } from \"../types\";\nimport { getAddress } from \"./getAddress/GetAddress\";\nimport { bridgeTokensMap } from \"src/config\";\n\nexport const getQueryVariable = (variable: string, query: string) => {\n  const vars = query.split(\"&\");\n  for (let i = 0; i < vars.length; i++) {\n    const pair = vars[i].split(\"=\");\n    if (decodeURIComponent(pair[0]) == variable) {\n      return decodeURIComponent(pair[1]);\n    }\n  }\n};\n\nexport const isTokenBridged = (address: string) => !!bridgeTokensMap[address]\n\nexport const copyTextToClipboard = (value: string) => {\n  const copyTextareaInput = document.createElement(\"textarea\");\n  copyTextareaInput.value = value;\n  document.body.appendChild(copyTextareaInput);\n\n  copyTextareaInput.focus();\n  copyTextareaInput.select();\n\n  try {\n    document.execCommand(\"copy\");\n  } catch {\n  } finally {\n    document.body.removeChild(copyTextareaInput);\n  }\n};\n\nexport const mapBlockchainTxToRelated = (\n  tx: RPCTransactionHarmony,\n  type: RelatedTransactionType = 'transaction'\n): RelatedTransaction => {\n  const resultedTx = {\n    ...tx,\n    transactionType: type,\n    address: '',\n    transactionHash: tx.ethHash || tx.hash,\n    timestamp: dayjs(+tx.timestamp * 1000).toString(),\n    extraMark: TransactionExtraMark.normal\n  }\n  if (tx.from) {\n    resultedTx.from = getAddress(tx.from).basicHex\n  }\n  if (tx.to) {\n    resultedTx.to = getAddress(tx.to).basicHex\n  }\n  if (typeof tx.value !== 'undefined') {\n    resultedTx.value = Big(tx.value).toString()\n  }\n  return resultedTx\n}\n\nexport function levenshteinDistance(a: string, b: string): number {\n  const an = a ? a.length : 0;\n  const bn = b ? b.length : 0;\n\n  if (an === 0) {\n    return bn;\n  }\n\n  if (bn === 0) {\n    return an;\n  }\n\n  const matrix = new Array<number[]>(bn + 1);\n  for (let i = 0; i <= bn; ++i) {\n    let row = matrix[i] = new Array<number>(an + 1);\n    row[0] = i;\n  }\n\n  const firstRow = matrix[0];\n  for (let j = 1; j <= an; ++j) {\n    firstRow[j] = j;\n  }\n\n  for (let i = 1; i <= bn; ++i) {\n    for (let j = 1; j <= an; ++j)\n    {\n      if (b.charAt(i - 1) === a.charAt(j - 1)) {\n        matrix[i][j] = matrix[i - 1][j - 1];\n      } else {\n        matrix[i][j] = Math.min(\n          matrix[i - 1][j - 1], // substitution\n          matrix[i][j - 1], // insertion\n          matrix[i - 1][j] // deletion\n        ) + 1;\n      }\n    }\n  }\n  return matrix[bn][an];\n}\n","import { useEffect, useState } from \"react\";\nimport { singletonHook } from \"react-singleton-hook\";\nimport { IndexedDbStore, loadFromIndexedDB } from \"../utils/indexedDB\";\nimport { isTokenBridged } from \"../utils\";\n\nconst initValue: ERC20_Pool = {};\n\nlet globalSetMode = () => {\n  return {};\n};\n\nexport const useERC20Pool = singletonHook(initValue, () => {\n  const getPool = async () => {\n    try {\n      const erc20 = await loadFromIndexedDB(IndexedDbStore.ERC20Pool)\n      const erc20Map = {} as Record<string, Erc20>;\n      erc20.forEach(item => {\n        erc20Map[item.address] = {\n          ...item,\n          isBridged: isTokenBridged(item.address),\n          name: item.implementationAddress ? `${item.name} (Proxy)` : item.name\n        };\n      })\n      setMode(erc20Map)\n    } catch (e) {\n      console.error('Cannot get ERC20 records: ', (e as Error).message)\n    }\n  }\n\n  useEffect(() => {\n    getPool()\n  }, [])\n\n  const [mode, setMode] = useState<ERC20_Pool>(initValue);\n  //@ts-ignore\n  globalSetMode = setMode;\n  return mode;\n});\n\nexport const setERC20Pool = (pool: ERC20_Pool) => {\n  //@ts-ignore\n  globalSetMode(pool);\n};\n\nexport interface Erc20 {\n  name: string;\n  address: string;\n  totalSupply: string;\n  circulatingSupply: string\n  holders: string;\n  decimals: number;\n  symbol: string;\n  lastUpdateBlockNumber: string\n  meta?: {\n    name?: string\n    image?: string;\n  };\n  isBridged: boolean;\n  implementationAddress: string\n}\n\nexport type ERC20_Pool = Record<string, Erc20>;\n","import { useState } from \"react\";\nimport { singletonHook } from \"react-singleton-hook\";\n\nconst initCurrency: currencyType = \"ETH\";\n\nlet globalSetMode = () => {\n  throw new Error(\"you must useDarkMode before setting its state\");\n};\n\nexport const useCurrency = singletonHook(initCurrency, () => {\n  const currentTheme = getStoredValue();\n\n  const [mode, setMode] = useState<currencyType>(currentTheme);\n  //@ts-ignore\n  globalSetMode = setMode;\n  return mode;\n});\n\n\nexport const setCurrency = (mode: currencyType) =>  {\n  //@ts-ignore\n  globalSetMode(mode);\n  window.localStorage.setItem('currency', mode);\n};\n\nexport type currencyType = \"ZPT\" | \"ETH\";\n\nexport const getStoredValue = () => window.localStorage.getItem('currency') as currencyType || initCurrency\n","import { useEffect, useState } from \"react\";\nimport { singletonHook } from \"react-singleton-hook\";\nimport { IndexedDbStore, loadFromIndexedDB } from \"../utils/indexedDB\";\nimport { isTokenBridged } from \"../utils\";\n\nconst initValue: ERC721_Pool = {};\n\nlet globalSetMode = () => {\n  return {};\n};\n\nexport const useERC721Pool = singletonHook(initValue, () => {\n  const getPool = async () => {\n    try {\n      const erc721 = await loadFromIndexedDB(IndexedDbStore.ERC721Pool)\n      const erc721Map = {} as Record<string, ERC721>;\n      erc721.forEach(item => {\n        erc721Map[item.address] = {\n          ...item,\n          isBridged: isTokenBridged(item.address)\n        };\n      })\n      setMode(erc721Map)\n    } catch (e) {\n      console.error('Cannot get ERC721 records: ', (e as Error).message)\n    }\n  }\n\n  useEffect(() => {\n    getPool()\n  }, [])\n\n  const [mode, setMode] = useState<ERC721_Pool>(initValue);\n  //@ts-ignore\n  globalSetMode = setMode;\n  return mode;\n});\n\nexport const setERC721Pool = (pool: ERC721_Pool) => {\n  //@ts-ignore\n  globalSetMode(pool);\n};\n\nexport interface ERC721 {\n  name: string;\n  address: string;\n  totalSupply: string;\n  holders: string;\n  decimals: number;\n  symbol: string;\n  isBridged: boolean;\n}\n\nexport type ERC721_Pool = Record<string, ERC721>;\n","import { useEffect, useState } from \"react\";\nimport { singletonHook } from \"react-singleton-hook\";\nimport { IndexedDbStore, loadFromIndexedDB } from \"../utils/indexedDB\";\nimport { isTokenBridged } from \"../utils\";\n\nconst initValue: ERC1155_Pool = {};\n\nlet globalSetMode = () => {\n  return {};\n};\n\nexport const useERC1155Pool = singletonHook(initValue, () => {\n  const getPool = async () => {\n    try {\n      const erc1155 = await loadFromIndexedDB(IndexedDbStore.ERC1155Pool)\n      const erc1155Map = {} as Record<string, ERC1155>;\n      erc1155.forEach(item => {\n        erc1155Map[item.address] = {\n          ...item,\n          isBridged: isTokenBridged(item.address)\n        };\n      })\n      setMode(erc1155Map)\n    } catch (e) {\n      console.error('Cannot get ERC1155 records: ', (e as Error).message)\n    }\n  }\n\n  useEffect(() => {\n    getPool()\n  }, [])\n\n  const [mode, setMode] = useState<ERC1155_Pool>(initValue);\n  //@ts-ignore\n  globalSetMode = setMode;\n  return mode;\n});\n\nexport const setERC1155Pool = (pool: ERC1155_Pool) => {\n  //@ts-ignore\n  globalSetMode(pool);\n};\n\nexport interface ERC1155 {\n  name: string;\n  address: string;\n  totalSupply: string;\n  holders: string;\n  decimals: number;\n  symbol: string;\n  meta?: any;\n  isBridged: boolean;\n}\n\nexport type ERC1155_Pool = Record<string, ERC1155>;\n","import { Clone, StatusGood } from \"grommet-icons\";\nimport React from \"react\";\nimport { toaster } from \"../../App\";\nimport { Box, Text } from \"grommet\";\nimport styled from \"styled-components\";\nimport { copyTextToClipboard } from \"../../utils\";\n\nconst Icon = styled(StatusGood)`\n  margin-right: 5px;\n`;\n\nconst showToasterNotification = () => {\n  toaster.show({\n    message: () => (\n      <Box direction={\"row\"} align={\"center\"} pad={\"small\"}>\n        <Icon size={\"small\"} color={\"headerText\"}/>\n        <Text size={\"small\"}>Copied to clipboard</Text>\n      </Box>\n    )\n  })\n}\n\nexport function CopyBtn(props: {\n  value: string;\n  showNotification?: boolean;\n  onClick?: (e: React.MouseEvent<SVGSVGElement>) => void;\n}) {\n\n  const onClick = (e: React.MouseEvent<SVGSVGElement>) => {\n    copyTextToClipboard(props.value);\n    if (props.onClick) {\n      props.onClick(e);\n    }\n    if (props.showNotification) {\n      showToasterNotification()\n    }\n  }\n  return (\n    <Clone\n      size=\"small\"\n      color=\"brand\"\n      onClick={onClick}\n      style={{ cursor: \"pointer\" }}\n    />\n  );\n}\n","import React, { CSSProperties } from \"react\";\nimport { Box, Text } from \"grommet\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport {toChecksumAddress} from 'web3-utils';\nimport { useERC20Pool } from \"src/hooks/ERC20_Pool\";\nimport { getAddress } from \"src/utils\";\nimport { useCurrency } from \"src/hooks/ZPT-ETH-SwitcherHook\";\nimport { useERC721Pool } from \"src/hooks/ERC721_Pool\";\nimport { addressAliasMap } from \"src/config\";\nimport { useERC1155Pool } from \"src/hooks/ERC1155_Pool\";\nimport { CopyBtn } from \"./CopyBtn\";\nimport { toaster } from \"src/App\";\nimport styled from \"styled-components\";\nimport { StatusGood } from \"grommet-icons\";\n\nconst Icon = styled(StatusGood)`\n  margin-right: 5px;\n`;\n\ninterface IAddress {\n  address: string;\n  isShort?: boolean;\n  isShortEllipsis?: boolean;\n  type?: \"tx\" | \"address\" | \"staking-tx\";\n  style?: CSSProperties;\n  color?: string;\n  displayHash?: boolean;\n  noHistoryPush?: boolean;\n  hideCopyBtn?: boolean;\n  showLink?: boolean;\n}\n\nconst AddressText = styled(Text)<{ isShortEllipsis?: boolean }>`\n  ${({ isShortEllipsis }) => isShortEllipsis && `\n    display: block;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  `}\n`\n\nexport const Address = (props: IAddress) => {\n  const {\n    address,\n    isShort,\n    isShortEllipsis,\n    style,\n    type = \"address\",\n    color = \"brand\",\n    displayHash,\n    hideCopyBtn = false,\n    showLink = true\n  } = props;\n  const history = useHistory();\n  const ERC20Map = useERC20Pool();\n  const erc721Map = useERC721Pool();\n  const erc1155Map = useERC1155Pool();\n  const currency = useCurrency();\n\n  const EMPTY_ADDRESS = \"0x0000000000000000000000000000000000000000\";\n\n  if (!address) {\n    return null;\n  }\n\n  let parsedName = \"\";\n\n  if (ERC20Map[address] && !displayHash) {\n    parsedName = ERC20Map[address].name;\n  }\n\n  if (erc721Map[address] && !displayHash) {\n    parsedName = erc721Map[address].name;\n  }\n\n  if (erc1155Map[address] && !displayHash) {\n    parsedName = erc1155Map[address].name;\n  }\n\n  if (addressAliasMap[address] && !displayHash) {\n    parsedName = addressAliasMap[address].name;\n  }\n\n  parsedName = address === EMPTY_ADDRESS ? \"0x0\" : parsedName;\n\n  let outPutAddress: string;\n  try {\n    outPutAddress = currency === \"ZPT\" ? getAddress(address).bech32 : toChecksumAddress(address);\n  } catch {\n    outPutAddress = address;\n  }\n\n  const addressContent = <AddressText\n    size=\"small\"\n    color={color}\n    style={{\n      marginLeft: hideCopyBtn ? \"0px\" : \"7px\",\n      cursor: showLink ? 'pointer' : 'default',\n      ...style,\n    }}\n    isShortEllipsis={isShortEllipsis}\n    onClick={\n      address === EMPTY_ADDRESS\n        ? undefined\n        : props.noHistoryPush\n          ? undefined\n          : (e) => {\n            e.preventDefault();\n            history.push(`/${type}/${address}`);\n          }\n    }\n  >\n    {parsedName ||\n      (isShort\n        ? `${outPutAddress.substr(0, 4)}...${outPutAddress.substr(-4)}`\n        : outPutAddress)}\n  </AddressText>\n\n  return (\n    <div style={{ display: \"inline-block\" }}>\n      <Box direction={\"row\"} align={\"center\"} justify={\"start\"}>\n        {hideCopyBtn ? null : (\n          <CopyBtn\n            value={outPutAddress}\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              toaster.show({\n                message: () => (\n                  <Box direction={\"row\"} align={\"center\"} pad={\"small\"}>\n                    <Icon size={\"small\"} color={\"headerText\"} />\n                    <Text size={\"small\"}>Copied to clipboard</Text>\n                  </Box>\n                ),\n              });\n            }}\n          />\n        )}\n        {showLink &&\n          <Link to={address === EMPTY_ADDRESS ? \"\" : `/${type}/${address}`}>\n            {addressContent}\n          </Link>\n        }\n        {!showLink &&\n          addressContent\n        }\n      </Box>\n    </div>\n  );\n};\n","import React, { CSSProperties, useEffect, useState } from \"react\";\nimport { Text } from \"grommet\";\nimport RelativeTime from \"dayjs/plugin/relativeTime\";\nimport UpdateLocale from \"dayjs/plugin/updateLocale\";\nimport dayjs from \"dayjs\";\n\ndayjs.extend(UpdateLocale);\nconst config = {\n  thresholds: [\n    { l: \"s\", r: 3, d: \"second\" },\n    { l: \"ss\", r: 59, d: \"second\" },\n    { l: \"m\", r: 1 },\n    { l: \"mm\", r: 59, d: \"minute\" },\n    { l: \"h\", r: 1 },\n    { l: \"hh\", r: 23, d: \"hour\" },\n    { l: \"d\", r: 1 },\n    { l: \"dd\", r: 29, d: \"day\" },\n    { l: \"M\", r: 1 },\n    { l: \"MM\", r: 11, d: \"month\" },\n    { l: \"y\" },\n    { l: \"yy\", d: \"year\" },\n  ],\n};\n\ndayjs.extend(RelativeTime, config);\n\ndayjs.updateLocale(\"en\", {\n  relativeTime: {\n    future: \"in %s\",\n    past: \"%s ago\",\n    s: \"a few seconds\",\n    ss: \"%d seconds\",\n    m: \"a minute\",\n    mm: \"%d minutes\",\n    h: \"an hour\",\n    hh: \"%d hours\",\n    d: \"a day\",\n    dd: \"%d days\",\n    M: \"a month\",\n    MM: \"%d months\",\n    y: \"a year\",\n    yy: \"%d years\",\n  },\n});\n\ninterface IRelativeTimer {\n  date: number | string | Date;\n  updateInterval?: number;\n  style?: CSSProperties;\n  render?: (value: string) => React.ReactNode;\n}\n\nexport function RelativeTimer(props: IRelativeTimer) {\n  const { date, render, updateInterval = 1000, style } = props;\n\n  const now = dayjs(new Date());\n  const formatedDate = dayjs(date).format(\"MM/DD/YYYY, HH:mm:ss\");\n  const needFormated = now.diff(dayjs(date)) > 86400000;\n\n  useEffect(() => {\n    const getTimeOffset = () => {\n      setFormattedValue(needFormated ? formatedDate : dayjs().to(dayjs(date))); \n    };\n    getTimeOffset();\n    const tId = window.setInterval(getTimeOffset, updateInterval);\n\n    return () => {\n      clearInterval(tId);\n    };\n  }, [date]);\n\n  const [formattedValue, setFormattedValue] = useState(\"\");\n\n  if (!date) {\n    return null;\n  }\n\n  if (render) {\n    return <div>{render(formattedValue)}</div>;\n  }\n\n  return (\n    <Text\n      size=\"small\"\n      style={{ minWidth: \"125px\", ...style }}\n      color=\"minorText\"\n      title={formatedDate}\n    >\n      {formattedValue}\n    </Text>\n  );\n}\n","import React from \"react\";\nimport { Clock } from \"grommet-icons\";\nimport dayjs from \"dayjs\";\nimport {RelativeTimer} from \"./RelativeTimer\";\n\ninterface TimestampProps {\n  timestamp: string;\n  withRelative?: boolean;\n}\n\n// @ts-ignore\nexport const Timestamp = (props: TimestampProps) => {\n  const  { timestamp, withRelative } = props;\n  return (\n    <span>\n      <Clock size=\"small\" />\n      &nbsp;{dayjs(timestamp).format(\"YYYY-MM-DD, HH:mm:ss\").toString()}\n      {withRelative && <span>, <RelativeTimer date={timestamp} /></span>}\n    </span>\n  );\n};\n","import { Anchor, AnchorProps } from 'grommet/components/Anchor'\nimport React from 'react'\nimport { Link, LinkProps } from 'react-router-dom'\n\nexport const AnchorLink: React.FC<AnchorLinkProps> = props => {\n  return <Anchor\n    as={({ colorProp, hasIcon, hasLabel, focus, ...p }) => <Link {...p} />}\n    {...props}\n  />\n}\n\nexport type AnchorLinkProps = LinkProps &\n  AnchorProps &\n  Omit<JSX.IntrinsicElements['a'], 'color'>","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Anchor } from \"grommet\";\nimport { AnchorLink } from \"./AnchorLink\";\nimport { formatNumber } from \".\";\n\n// @ts-ignore\n\nexport const BlockNumber = (options: { number: any; hash?: any }) => {\n  const { hash, number } = options;\n  const link = `/block/${hash || number}`;\n  return (\n    <AnchorLink\n      to={link}\n      label={formatNumber(+number, {})}\n      style={{ fontWeight: 400 }}\n    />\n  );\n};\n","import React from 'react'\n\nimport { Anchor } from 'grommet'\nimport {AnchorLink} from './AnchorLink'\n\n// @ts-ignore\nexport const BlockHash = ({ hash }) => {\n  const link = `/block/${hash}`\n  return <AnchorLink to={link} label={hash} style={{fontWeight: 400}} />\n}","import React from \"react\";\n\nimport { AnchorLink } from \"./AnchorLink\";\n\n// @ts-ignore\nexport const TransactionHash = ({ hash, link = \"tx\" }) => {\n  const url = `/${link}/${hash}`;\n  return <AnchorLink to={url} label={hash} style={{ fontWeight: 400 }} />;\n};\n","import React from 'react'\nimport { Box, Text, BoxExtendedProps } from 'grommet'\nimport styled from \"styled-components\";\n\nconst ArrowDown = styled(Box)`\n  position: absolute;\n  top: 100%;\n  width: 0;\n  height: 0;\n  border-left: 8px solid transparent;\n  border-right: 8px solid transparent;\n  border-top: 8px solid ${(props) => props.theme.global.colors.backgroundTip};\n  border-bottom: 0 solid transparent;\n`\n\nexport interface TipContentProps extends BoxExtendedProps{\n  message: string | JSX.Element,\n  showArrow?: boolean\n}\n\nexport const TipContent = (props: TipContentProps) => {\n  let message = props.message\n  if (typeof message === 'string') {\n    message = <Text size={'small'}>{message}</Text>\n  }\n  return <Box\n    direction=\"column\"\n    align=\"center\"\n    background=\"backgroundTip\"\n    pad={{ top: 'xxsmall', left: 'small', right: 'small', bottom: 'xxsmall' }}\n    round={{ size: 'xsmall' }}\n    animation={[{ type: 'fadeIn', duration: 350 }]}\n    style={{ position: 'relative', color: 'white', width: 'fit-content', maxWidth: '400px' }}\n    {...props}\n  >\n    <Box>{message}</Box>\n    {props.showArrow &&\n      <ArrowDown border={{ color: '#EFF8FF' }} />\n    }\n  </Box>\n}\n","import { useEffect, useState } from \"react\";\nimport { singletonHook } from \"react-singleton-hook\";\n\nconst currentFocus: focusType = true;\n\nlet globalGetHidden = () => {\n    return false; // on init should return false\n};\n\nexport const useWindowFocused = singletonHook(currentFocus, () => {\n    const currentFocus = document.hidden;\n\n    const [hidden, setHidden] = useState<focusType>(currentFocus);\n\n    useEffect(() => {\n        const tabListener = function () {\n            setHidden(document.hidden);\n        };\n        window.addEventListener(\"visibilitychange\", tabListener);\n\n        return () => {\n            window.removeEventListener(\"visibilitychange\", tabListener);\n        }\n    }, [])\n    //@ts-ignore\n    globalGetHidden = () => {\n        return hidden;\n    };\n    return hidden;\n});\n\nexport type focusType = true | false;\nexport const getTabHidden = () => {\n    return globalGetHidden();\n}\n// export const getStoredValue = () => window.localStorage.getItem('currency') as currencyType || initCurrency\n","import { useState, useEffect, useRef, Dispatch } from 'react'\nimport { getTabHidden, useWindowFocused } from './useWindowFocusHook';\n\nexport type APIPollingOptions<DataType> = {\n  fetchFunc: () => Promise<DataType>\n  initialState: DataType\n  delay: number\n  onError?: (e: Error, setData?: Dispatch<any>) => void\n  updateTrigger?: any,\n  disableTabListener?: boolean\n}\n\nfunction useAPIPolling<DataType>(opts: APIPollingOptions<DataType>): DataType {\n  const { initialState, fetchFunc, delay, onError, updateTrigger, disableTabListener } = opts\n  const focus = useWindowFocused();\n\n  const timerId = useRef<any>()\n  const fetchCallId = useRef(0)\n  const [data, setData] = useState(initialState)\n\n  const fetchData = (id: Number) => {\n    return new Promise(resolve => {\n      fetchFunc()\n        .then(newData => {\n          if (id === fetchCallId.current) {\n            setData(newData)\n          }\n          resolve(null)\n        })\n        .catch(e => {\n          if (!onError) {\n            setData(initialState)\n            resolve(null)\n          } else {\n            onError(e, setData)\n            resolve(null)\n          }\n        })\n    })\n  }\n\n  const pollingRoutine = () => {\n    if (getTabHidden() && !disableTabListener) {\n      return; // don't poll if the tab is hidden\n    }\n    fetchCallId.current += 1\n    /* tslint:disable no-floating-promises */\n    fetchData(fetchCallId.current).then(() => {\n      doPolling()\n    })\n    /* tslint:enable no-floating-promises */\n  }\n\n  const doPolling = () => {\n    timerId.current = setTimeout(() => {\n      pollingRoutine()\n    }, delay)\n  }\n\n  const stopPolling = () => {\n    if (timerId.current) {\n      clearTimeout(timerId.current)\n      timerId.current = null\n    }\n  }\n\n  useEffect(\n    () => {\n      /* tslint:disable no-floating-promises */\n      pollingRoutine()\n      /* tslint:enable */\n\n      return stopPolling\n    },\n    updateTrigger ? [updateTrigger] : []\n  )\n\n  return data\n}\n\nexport default useAPIPolling","import React, {useEffect, useState} from 'react'\nimport useAPIPolling, { APIPollingOptions } from './polling'\nimport { singletonHook } from 'react-singleton-hook';\n\n// const url = 'https://api.binance.com/api/v1/ticker/24hr?symbol=ZPTUSDT'\nconst url = 'https://api.coingecko.com/api/v3/simple/price?ids=zippychain&vs_currencies=usd&include_24hr_change=true'\nconst coinGeckoMapper = (res: any) => {\n\n  return {\n    lastPrice: res.zippychain.usd,\n    priceChangePercent: res.zippychain.usd_24h_change\n  }\n}\n\nconst fetchFunc = () => fetch(url).then(r => \n  {\n    return {\"zippychain\":{\"usd\": 1.0 ,\"usd_24h_change\": 0.0}}\n  }\n)\n.then(coinGeckoMapper)\n\nexport const useZPTExchangeRate = singletonHook({}, () => {\n  const [data, setData] = useState<any>({})\n\n  const options: APIPollingOptions<any> = {\n    fetchFunc,\n    initialState: {},\n    delay: 30000,\n    disableTabListener: true\n  }\n  const res = useAPIPolling(options)\n\n  useEffect(() => {\n    setData(res)\n  }, [res])\n\n  return data\n})\n","import React, { useEffect } from \"react\";\nimport * as api from 'src/api/client'\nimport dayjs from \"dayjs\";\nexport function ZPT_USDT_Rate() {\n  useEffect(() => {\n    const getRates = () => {\n      const rates = {} as Record<string, number>;\n      // fetch(\"https://api.binance.com/api/v3/klines?symbol=ZPTUSDT&interval=1d\")\n      fetch(\"https://api.coingecko.com/api/v3/coins/zippychain/market_chart?vs_currency=usd&days=2000&interval=daily\")\n      //FIXME\n      //https://api.coingecko.com/api/v3/coins/harmony/market_chart?vs_currency=usd&days=2000&interval=daily\n      .then((_res) => _res.json())\n      .then(res => res.prices) // for coingecko, delete for binance\n        .then((res) => {\n          console.log('price', {res})\n          res && res.forEach((t: Array<string | number>) => {\n            rates[String(t[0])] = Number(t[1]);\n          });\n          window.localStorage.setItem('ZPT_USDT_rates', JSON.stringify(rates))\n        });\n    };\n    getRates();\n    const tId = window.setInterval(getRates, 10 * 60 * 1e3);\n\n    return () => {\n      clearTimeout(tId);\n    }\n  }, []);\n  return null;\n}\n\nexport function getNearestPriceForTimestamp(timestampString: string) {\n  const rates = JSON.parse(window.localStorage.getItem('ZPT_USDT_rates') || '{}') as Record<string, number>;\n  const timestamps = Object.keys(rates);\n  const prices = Object.values(rates);\n  const timestamp = dayjs(timestampString).valueOf();\n\n  if(timestamp >= +timestamps.slice(-1)[0]) {\n    return prices.slice(-1)[0];\n  }\n\n  if(timestamp <= +timestamps[0]) {\n    return -1;\n  }\n\n  if(timestamps.length) {\n    let i = 0;\n    while(+timestamps[i] <= timestamp) {\n      i++;\n    }\n\n    return prices[i];\n  }\n\n  return 0;\n}\n","export const calculateFee = (gas: string, gasPrice: string) => {\n  const fee =\n    isNaN(+gas) || isNaN(+gasPrice)\n      ? 0\n      : (Number(gas) * Number(gasPrice)) /\n      10 ** 14 /\n      10000;\n\n  return Intl.NumberFormat(\"en-US\", {\n    maximumFractionDigits: 18,\n  }).format(fee);\n}\n\nexport const calculateFeePriceUSD = (gas: string, gasPrice: string, onePrice: string | number) => {\n  const fee = calculateFee(gas, gasPrice)\n  return (+fee * +onePrice).toLocaleString(\"en-US\", {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 8,\n    currency: \"USD\",\n  })\n}\n","import Big from \"big.js\";\nimport React from \"react\";\nimport { useZPTExchangeRate } from \"src/hooks/useZPTExchangeRate\";\nimport { calculateFee } from \"../../utils/fee\";\nimport {RPCStakingTransactionHarmony, RPCTransactionHarmony} from \"../../types\";\n\nexport function formatNumber(\n  num: number,\n  options?: Intl.NumberFormatOptions\n): string {\n  if (num === undefined) return \"\";\n\n  return num.toLocaleString(\"en-US\", options);\n}\n\nexport function reintervate(\n  func: () => any,\n  interval: number\n): number | Promise<number> {\n  const res = func();\n  if (res instanceof Promise) {\n    return res.then(() =>\n      window.setTimeout(() => reintervate(func, interval), interval)\n    );\n  } else {\n    return window.setTimeout(() => reintervate(func, interval), interval);\n  }\n}\n\nBig.DP = 21;\nBig.NE = -20;\nBig.PE = 15;\n\nexport function CalculateFee(transaction: any) {\n  const { lastPrice } = useZPTExchangeRate();\n\n  if(!(transaction && transaction.gasPrice)) {\n    return ''\n  }\n\n  const fee = isNaN(transaction.gasPrice)\n    ? 0\n    : Number(transaction.gasPrice) / 10 ** 14 / 10000;\n\n  const normalizedFee = Intl.NumberFormat(\"en-US\", {\n    maximumFractionDigits: 18,\n  }).format(fee);\n\n  const price = lastPrice;\n\n  const bi =\n    (Big(normalizedFee) as unknown as number) /\n    (Big(10 ** 14) as unknown as any);\n  const v = parseInt(bi.toString()) / 10000;\n  let USDValue = \"\";\n\n  if (price && v > 0) {\n    USDValue = (v * +price).toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n      currency: \"USD\",\n    });\n  }\n\n  return (\n    <>\n      {normalizedFee} ZPT\n      {!USDValue || USDValue === \"0.00\" || USDValue == \"0\" ? null : (\n        <>($ {USDValue})</>\n      )}\n    </>\n  );\n}\n\nexport function CalculateTransactionFee(transaction: RPCTransactionHarmony | RPCStakingTransactionHarmony) {\n  const { lastPrice: price } = useZPTExchangeRate();\n\n  if(!(transaction && transaction.gas)) {\n    return ''\n  }\n\n  const fee = calculateFee(transaction.gas, transaction.gasPrice)\n\n  const bi =\n    (Big(fee) as unknown as number) /\n    (Big(10 ** 14) as unknown as any);\n  const v = parseInt(bi.toString()) / 10000;\n  let USDValue = \"\";\n\n  if (price && v > 0) {\n    USDValue = (v * +price).toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n      currency: \"USD\",\n    });\n  }\n\n  return (\n    <>\n      {fee} ZPT\n      {!USDValue || USDValue === \"0.00\" || USDValue == \"0\" ? null : (\n        <>($ {USDValue})</>\n      )}\n    </>\n  );\n}\n","import React from 'react'\n\nexport const useClickOutside = (ref: React.RefObject<HTMLDivElement>, handler: (e: TouchEvent | MouseEvent) => void) => {\n  const listener = (event: TouchEvent | MouseEvent) => {\n    if (!ref.current || ref.current.contains(event.target as Node)) {\n      return;\n    }\n    handler(event);\n  };\n\n  React.useEffect(\n    () => {\n      document.addEventListener(\"mousedown\", listener);\n      document.addEventListener(\"touchstart\", listener);\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    },\n    [ref, handler]\n  );\n}\n","import { io } from \"socket.io-client\";\n \nconst socket = io(process.env.REACT_APP_PROD_ADDRESS as string, {\n  transports: [\"websocket\"],\n});\n\nsocket.connect();\n\nexport const transport = <T = any>(method: string, params: any[]) => {\n  return new Promise<T>((resolve, reject) => {\n    socket.emit(method, params, (res: any) => {\n      try {\n        const payload = JSON.parse(res.payload);\n\n        if (res.event === \"Response\") {\n          resolve(payload);\n        } else {\n          reject(payload);\n        }\n      } catch (err) {\n        reject(null);\n      }\n    });\n  });\n};\n","export class ApiCache {\n  public key: string = \"apiCache\";\n\n  constructor(props: { key: string }) {\n    this.key = props.key;\n    const objStr = localStorage.getItem(this.key);\n    if (!objStr) {\n      localStorage.setItem(this.key, \"{}\");\n    }\n  }\n\n  get<T = any>(name: string) {\n    const obj = JSON.parse(localStorage.getItem(this.key) as string);\n    return obj[name] as T | undefined;\n  }\n\n  set(name: string, value: any) {\n    const obj = JSON.parse(localStorage.getItem(this.key) as string);\n\n    localStorage.setItem(this.key, JSON.stringify({ ...obj, [name]: value }));\n  }\n}\n","import { IHexSignature } from \"../types\";\n\nconst fourByteApiUrl = 'https://www.4byte.directory/api/v1'\n\ninterface I4BytesSignatureResult {\n  id: number;\n  created_at: string;\n  text_signature: string;\n  hex_signature: string;\n  bytes_signature: string;\n}\n\ninterface I4BytesSignatureResponse {\n  count: number;\n  next: null;\n  previous: null;\n  results: I4BytesSignatureResult[];\n}\n\nexport const get4byteSignatureByHex = async (hex: string): Promise<IHexSignature[]> => {\n  const { results }: I4BytesSignatureResponse = await(\n    await window.fetch(`${fourByteApiUrl}/signatures/?hex_signature=${hex}`)\n  ).json()\n\n  const [result] = results\n  if(!result) {\n    return []\n  }\n  return [{\n    hash: result.hex_signature,\n    signature: result.text_signature\n  }]\n}\n","import { transport } from \"./explorer\";\nimport {\n    Block,\n    InternalTransaction,\n    RPCStakingTransactionHarmony,\n    RPCTransactionHarmony,\n    RelatedTransaction,\n    Log, LogDetailed, AddressDetails,\n    ShardID, MetricsType, MetricsDailyItem, MetricsTopType, MetricsTopItem, MetricsTopPeriod\n} from \"src/types\";\nimport {\n  IERC1155Balance,\n  IHoldersInfo,\n  IPairPrice,\n  IUserERC721Assets,\n  TRelatedTransaction,\n} from \"./client.interface\";\nimport { ApiCache } from \"./ApiCache\";\nimport { get4byteSignatureByHex } from \"./3rdPartyApi\";\nimport { eth_traceTransaction } from './rpc'\n// import { ClientCache } from \"./clientCache\";\n\n// const clientCache = new ClientCache({\n//   timer: 5000, // 15 mins\n// });\n\n// TODO: hardcode\nlet pairCache: { [pair: string]: IPairPrice } = {};\nconst contractShardID = process.env.REACT_APP_CONTRACT_SHARD  ? (+process.env.REACT_APP_CONTRACT_SHARD || 0) : 0\n\nsetInterval(() => {\n  pairCache = {};\n}, 90000);\n\nconst signatureHash = new ApiCache({ key: \"signatureHashCache\" });\n\nexport function getBlockByNumber(params: any[]) {\n  return transport(\"getBlockByNumber\", params) as Promise<Block>;\n}\n\nexport function getBlockByHash(params: any[]) {\n  return transport(\"getBlockByHash\", params) as Promise<Block>;\n}\n\nexport function getBlocks(params: any[]) {\n  return transport(\"getBlocks\", params) as Promise<Block[]>;\n}\n\nexport function getCount(params: any[]) {\n  return transport(\"getCount\", params) as Promise<{ count: string }>;\n}\n\nexport function getTransactions(params: any[]) {\n  return transport(\"getTransactions\", params) as Promise<\n    RPCTransactionHarmony[]\n  >;\n}\n\nexport function getTransactionByField(params: any[]) {\n  return transport(\n    \"getTransactionByField\",\n    params\n  ) as Promise<RPCTransactionHarmony>;\n}\n\nexport function getStakingTransactionByField(params: [number, \"hash\", string]) {\n  return transport(\n    \"getStakingTransactionsByField\",\n    params\n  ) as Promise<RPCStakingTransactionHarmony>;\n}\n\nexport function getInternalTransactionsByField(params: any[], blockNumber?: string) {\n  // fallback to rpc as we don't keep old records older than 34000000 any more in postgres\n  // if (!blockNumber || +blockNumber < 34000000) {\n  //   const queryType = params[1]\n  //   if (queryType !== 'transaction_hash') {\n  //     console.error('use only transaction hash to get internal transactions')\n  //     return [] as InternalTransaction[]\n  //   }\n  //\n  //   const txHash = params[2]\n  //   //\n  //   console.info('internal transactions is not available to serve')\n  //   return [] as InternalTransaction[]\n  //   // todo note check error field may not work properly\n  //   /* return eth_traceTransaction(txHash).then(txs => {\n  //     const mapTxs = txs.map((tx: any, i: number) => ({\n  //       type: tx.action.type || tx.type,\n  //       value: tx.value,\n  //       input: tx.action.input,\n  //       output: tx.result.output,\n  //       transactionHash: tx.transactionHash,\n  //       gasUsed: tx.result.gasUsed,\n  //       index: i,\n  //       to: tx.action.to,\n  //       from: tx.action.from,\n  //       error: tx.result.error,\n  //       gas: tx.action.gas\n  //     }))\n  //     return mapTxs as InternalTransaction[]\n  //   }) */\n  // }\n\n  return transport(\"getInternalTransactionsByField\", params) as Promise<InternalTransaction[]>;\n}\n\nexport function getTransactionLogsByField(params: any[]) {\n  return transport(\"getLogsByField\", params) as Promise<Log[]>;\n}\n\nexport function getDetailedTransactionLogsByField(params: any[]) {\n  return transport(\"getDetailedLogsByField\", params) as Promise<LogDetailed[]>;\n}\n\nexport async function getByteCodeSignatureByHash(params: [string]) {\n  const [hexValue] = params\n  let signature = signatureHash.get(hexValue)\n  if (signature) {\n    return signature\n  }\n  signature = await transport(\"getSignaturesByHash\", params)\n  if (!signature || signature.length === 0) {\n    signature = await get4byteSignatureByHex(hexValue)\n  }\n  if (signature) {\n    signatureHash.set(hexValue, signature);\n  }\n  return signature\n}\n\nexport function getRelatedTransactions(params: any[]) {\n  return transport(\"getRelatedTransactions\", params) as Promise<\n    RelatedTransaction[]\n  >;\n}\n\nexport function getTransactionCountLast14Days(limit = 14) {\n  return transport(\"getTransactionCountLast14Days\", [limit]) as Promise<any[]>;\n}\n\n\nexport function getWalletsCountLast14Days(limit = 14) {\n    return transport(\"getWalletsCountLast14Days\", [limit]) as Promise<any[]>;\n}\n\nexport function getMetricsByType(type: MetricsType, offset = 0, limit = 14) {\n    return transport(\"getMetricsByType\", [type, offset, limit]) as Promise<MetricsDailyItem[]>;\n}\n\nexport function getTopMetricsByType(type: MetricsTopType, period: MetricsTopPeriod, limit = 10) {\n    return transport(\"getTopMetricsByType\", [type, period, limit]) as Promise<MetricsTopItem[]>;\n}\n\nexport function getContractsByField(params: any[]) {\n  return transport(\"getContractsByField\", params) as Promise<AddressDetails>;\n}\n\nexport function getAllERC20() {\n  return transport(\"getAllERC20\", [contractShardID]) as Promise<any[]>;\n}\n\nexport function getAllERC721() {\n  return transport(\"getAllERC721\", [contractShardID]) as Promise<any[]>;\n}\n\nexport function getAllERC1155() {\n  return transport(\"getAllERC1155\", [contractShardID]) as Promise<any[]>;\n}\n\nexport function getUserERC20Balances(params: any[]) {\n  return transport(\"getUserERC20Balances\", [contractShardID, ...params]) as Promise<any[]>;\n}\n\nexport function getUserERC721Assets(params: any[]) {\n  return transport(\"getUserERC721Assets\", [contractShardID, ...params]) as Promise<\n    IUserERC721Assets[]\n  >;\n}\n\nexport function getTokenERC721Assets(params: [string]) {\n  return transport(\"getTokenERC721Assets\", [contractShardID, ...params]) as Promise<\n    IUserERC721Assets[]\n  >;\n}\n\nexport async function getTokenERC721AssetDetails(address: string, tokenID: string) {\n  return transport(\"getTokenERC721AssetDetails\", [contractShardID, address, tokenID])\n}\n\nexport function getTokenERC1155Assets(params: [string]) {\n  return transport(\"getTokenERC1155Assets\", [contractShardID, ...params]) as Promise<\n    IUserERC721Assets[]\n  >;\n}\n\nexport function getUserERC1155Balances(params: [string]) {\n  return transport(\"getUserERC1155Balances\", [contractShardID, ...params]) as Promise<IERC1155Balance[]>;\n}\n\nexport function getTokenERC1155Balances(params: [string]) {\n  return transport(\"getTokenERC1155Balances\", [contractShardID, ...params]) as Promise<IERC1155Balance[]>;\n}\n\nexport function getRelatedTransactionsByType(\n  params: [number, string, TRelatedTransaction, any]\n) {\n  return transport(\"getRelatedTransactionsByType\", [contractShardID, params[1], params[2], params[3]]) as Promise<\n    RelatedTransaction[]\n  >;\n}\n\nexport function getRelatedTransactionsCountByType(\n  params: [number, string, TRelatedTransaction, any]\n) {\n  return transport(\"getRelatedTransactionsCountByType\", [contractShardID, params[1], params[2], params[3]]) as Promise<number>;\n}\n\nexport function getBinancePairPrice(params: [string]) {\n  const cacheValue = pairCache[params[0]];\n  return cacheValue\n    ? Promise.resolve(cacheValue)\n    : transport<IPairPrice>(\"getBinancePairPrice\", params).then((res) => {\n        pairCache[params[0]] = res;\n        return res;\n      });\n}\n\nexport function getBinancePairHistoricalPrice(params: [string]) {\n  return transport(\"getBinancePairHistoricalPrice\", params) as Promise<any[]>;\n}\n\nexport function getERC20TokenHolders(params: [string, number, number]) {\n  return transport(\"getERC20TokenHolders\", [contractShardID, ...params]) as Promise<IHoldersInfo[]>;\n}\n\nexport async function getTokenERC1155AssetDetails(address: string, tokenID: string) {\n    const res = await transport(\"getTokenERC1155AssetDetails\", [contractShardID, address, tokenID])\n    // todo fix on backend\n    return res && res[0]\n}\n","import { useZPTExchangeRate } from \"../../hooks/useZPTExchangeRate\";\nimport { getNearestPriceForTimestamp } from \"src/components/ZPT_USDT_Rate\";\nimport { Box, Card, CardBody, Spinner, Text, Tip } from \"grommet\";\nimport { TipContent } from \"./Tooltip\";\nimport React, { useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { formatNumber } from \"./utils\";\nimport { useClickOutside } from \"../../hooks/useClickOutside\";\nimport { getInternalTransactionsByField } from \"../../api/client\";\nimport { InternalTransaction, TransactionExtraMark } from \"../../types\";\nimport { Address } from \"./Address\";\nimport { FormNextLink } from \"grommet-icons\";\nimport styled from \"styled-components\";\n\ninterface ZPTValueProps {\n  value: string | number;\n  timestamp?: string;\n  hideTip?: boolean;\n}\n\n// @ts-ignore\nexport const ZPTValue = (props: ZPTValueProps) => {\n  const { value, timestamp = \"\", hideTip = false } = props;\n  const { lastPrice } = useZPTExchangeRate();\n\n  if (!value) {\n    return null;\n  }\n\n  const isTodayTransaction =\n    dayjs(timestamp).format(\"YYYY-MM-DD\") === dayjs().format(\"YYYY-MM-DD\");\n  const price =\n    timestamp && !isTodayTransaction\n      ? getNearestPriceForTimestamp(timestamp)\n      : lastPrice;\n\n  const bi = BigInt(value) / BigInt(10 ** 14);\n  const v = parseInt(bi.toString()) / 10000;\n  let USDValue = \"\";\n  if (price && v > 0) {\n    USDValue = (v * +price).toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n      currency: \"USD\",\n    });\n  }\n\n  return (\n    <Box direction=\"row\" gap=\"xsmall\">\n      <Text\n        weight={v > 0 ? \"bold\" : \"normal\"}\n        size=\"small\"\n        margin={{ right: \"xxmall\" }}\n      >\n        {v.toString()} ZPT\n      </Text>\n      {USDValue && +price > 0 && !isTodayTransaction && !hideTip && (\n        <Tip\n          dropProps={{ align: { bottom: \"top\" }}}\n          content={\n            <TipContent\n              showArrow={true}\n              message={\n                <Text size={'small'}>\n                  {`Displaying value on ${dayjs(timestamp).format(\n                    \"YYYY-MM-DD\"\n                  )}. Current value:`}{\" \"}\n                  <b>\n                    $\n                    {formatNumber(v * +lastPrice, {\n                      maximumFractionDigits: 2,\n                    })}\n                  </b>\n                </Text>\n              }\n            />\n          }\n        >\n          <Text size=\"small\">(${USDValue})</Text>\n        </Tip>\n      )}\n      {USDValue && +price > 0 && isTodayTransaction && (\n        <Text size=\"small\">(${USDValue})</Text>\n      )}\n    </Box>\n  );\n};\n\nconst InternalTransfers = (props: { tx: any, isLoading: boolean, internalTxs: InternalTransaction[] }) => {\n  const { tx, isLoading, internalTxs } = props\n  return <Card background=\"backgroundTip\" style={{ boxShadow: 'none'}}>\n      <CardBody pad=\"medium\">\n        {isLoading &&\n          <Box justify={'center'} align={'center'}>\n            <Spinner />\n          </Box>\n        }\n        {!isLoading && internalTxs.length === 0 &&\n          <Box justify={'center'} align={'center'}>\n            No internal transfers\n          </Box>\n        }\n        {!isLoading && <Box gap={'8px'}>\n          {internalTxs.length > 0 &&\n            <Box><Text size={'small'}>Internal transfers</Text></Box>\n          }\n          <Box overflow={'auto'} style={{ display: 'block', maxHeight: '300px' }}>\n            {internalTxs\n              .filter((internalTx, i) => +internalTx.value > 0)\n              .map((internalTx) => {\n                return <Box direction={'row'} style={{ fontSize: '8px' }}>\n                  <ZPTValue value={internalTx.value} timestamp={tx.timestamp} hideTip={true} />\n                  &nbsp;\n                  &nbsp;\n                  <Address\n                    isShort={true}\n                    address={internalTx.from}\n                    // hideCopyBtn={true}\n                  />\n                  <div>\n                    <FormNextLink size=\"small\" color=\"brand\"/>\n                  </div>\n                  <Address\n                    isShort={true}\n                    address={internalTx.to}\n                    // hideCopyBtn={true}\n                  />\n                </Box>\n              })}\n          </Box>\n        </Box>}\n      </CardBody>\n    </Card>\n}\n\nconst InternalTransfersContainer = styled(Box)`\n  position: absolute;\n  min-width: 260px;\n  margin-top: 12px;\n`\n\nexport const ZPTValueWithInternal = (props: ZPTValueProps & { tx: any }) => {\n  const [detailsOpened, setDetailsOpened] = useState(false)\n  const [isLoading, setLoading] = useState(false)\n  const [internalTxs, setInternalTxs] = useState<InternalTransaction[]>([])\n\n  const clickRef = React.useRef() as React.RefObject<HTMLDivElement>;\n  useClickOutside(clickRef, () => setDetailsOpened(false));\n\n  useEffect(() => {\n    const loadInternal = async () => {\n      try {\n        setLoading(true)\n        const txs = await getInternalTransactionsByField([\n          0,\n          \"transaction_hash\",\n          props.tx.hash,\n        ]);\n        setInternalTxs(txs)\n      } catch (e) {\n\n      } finally {\n        setLoading(false)\n      }\n    }\n    if(detailsOpened && internalTxs.length === 0) {\n      loadInternal()\n    }\n  }, [detailsOpened])\n\n  return <Box direction={'row'} gap={'8px'} align={'center'}>\n    <Box>\n      <ZPTValue {...props} />\n    </Box>\n    {props.tx.extraMark === TransactionExtraMark.hasInternalZPTTransfers && +props.tx.value === 0 &&\n      <Box ref={clickRef}>\n        <Box onClick={() => setDetailsOpened(!detailsOpened)}>\n          <Text size={'small'} color={'brand'}>\n            Show internal\n          </Text>\n        </Box>\n          {detailsOpened &&\n            <Box align={'center'}>\n              <InternalTransfersContainer>\n                <InternalTransfers tx={props.tx} isLoading={isLoading} internalTxs={internalTxs} />\n              </InternalTransfersContainer>\n            </Box>\n          }\n      </Box>\n    }\n  </Box>\n}\n","import { useState } from \"react\";\nimport { singletonHook } from \"react-singleton-hook\";\n\nconst initTheme: themeType = \"light\";\n\nlet globalSetMode = () => {\n  throw new Error(\"you must useDarkMode before setting its state\");\n};\n\nexport const useThemeMode = singletonHook(\n  (window.localStorage.getItem(\"themeMode\") || initTheme) as themeType,\n  () => {\n    const currentTheme =\n      (window.localStorage.getItem(\"themeMode\") as themeType) || initTheme;\n\n    const [mode, setMode] = useState<themeType>(currentTheme);\n    //@ts-ignore\n    globalSetMode = setMode;\n    return mode;\n  }\n);\n\nexport const setThemeMode = (mode: themeType) => {\n  //@ts-ignore\n  globalSetMode(mode);\n  window.localStorage.setItem(\"themeMode\", mode);\n};\n\nexport type themeType = \"light\" | \"dark\";\n","import { DCEns } from 'one-country-sdk'\nimport Web3 from \"web3\";\nimport { config } from '../config'\nimport {keccak256} from \"./getAddress/keccak256\";\n\nexport const ZPTCountryTLD = '.country'\nconst ZPTCountryTLDNode = '0xad4be81514036b9f6ff6c5f69394daacc516c82bd6dc4756d7f6ef1b3f9ea717'\n\n\nconst { oneCountryContractAddress, shardUrls } = config\nconst provider = new Web3.providers.HttpProvider(shardUrls[0] || '')\nconst oneCountry = new DCEns({ provider, contractAddress: oneCountryContractAddress })\n\nexport const getAddressByName = async (name: string) => {\n    const record = await oneCountry.getRecord(name)\n    return record ? record.renter : ''\n}\n\nexport const convertErc721TokenId = (erc721TokenId: string) => {\n    let labelHash = Web3.utils.toBN(erc721TokenId).toString('hex', 64)\n    labelHash = '0x' + labelHash\n    const encodePacked = Web3.utils.encodePacked(\n      {value: ZPTCountryTLDNode, type: 'bytes32'},\n      {value: labelHash, type: 'bytes32'},\n    ) || '';\n    return Web3.utils.toBN(keccak256(encodePacked)).toString()\n}\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { Search } from \"grommet-icons\";\nimport { Box, TextInput, Text } from \"grommet\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  getBlockByHash,\n  getStakingTransactionByField,\n  getTransactionByField,\n} from \"src/api/client\";\nimport { useThemeMode } from \"../../hooks/themeSwitcherHook\";\nimport { getAddress } from \"src/utils\";\nimport { useERC20Pool } from \"src/hooks/ERC20_Pool\";\nimport { useERC721Pool } from \"src/hooks/ERC721_Pool\";\nimport { useERC1155Pool } from \"src/hooks/ERC1155_Pool\";\n\nimport { FixedSizeList as List } from \"react-window\";\nimport AutoSizer, {Size} from \"react-virtualized-auto-sizer\";\nimport { Address } from \"./Address\";\nimport { config } from \"../../config\";\nimport {getAddressByName, ZPTCountryTLD} from \"../../utils/oneCountry\";\nimport {toaster} from \"../../App\";\n\nlet timeoutID: any | null = null;\n\nexport interface ISearchItem {\n  symbol: string;\n  name: string;\n  type: \"erc1155\" | \"erc20\" | \"erc721\";\n  item: any;\n}\n\nconst oneCountryPostfix = {\n  dotZPT: '.1',\n  dotCountry: ZPTCountryTLD\n}\n\nexport const SearchInput = () => {\n  const [value, setValue] = useState(\"\");\n  const [readySubmit, setReadySubmit] = useState(false);\n  const [focus, setFocus] = useState(false);\n  const [results, setResults] = useState<ISearchItem[]>([]);\n  const themeMode = useThemeMode();\n\n  const erc20Map = useERC20Pool();\n  const erc721Map = useERC721Pool();\n  const erc1155Map = useERC1155Pool();\n\n  const dataTest: ISearchItem[] = [\n    ...Object.keys(erc1155Map).map((address) => ({\n      symbol: erc1155Map[address].symbol,\n      name: erc1155Map[address].name,\n      type: \"erc1155\" as \"erc1155\",\n      item: erc1155Map[address],\n    })),\n    ...Object.keys(erc20Map).map((address) => ({\n      symbol: erc20Map[address].symbol,\n      name: erc20Map[address].name,\n      type: \"erc20\" as \"erc20\",\n      item: erc20Map[address],\n    })),\n    ...Object.keys(erc721Map).map((address) => ({\n      symbol: erc721Map[address].symbol,\n      name: erc721Map[address].name,\n      type: \"erc721\" as \"erc721\",\n      item: erc721Map[address],\n    })),\n  ];\n\n  const { availableShards } = config\n\n  const history = useHistory();\n  const onChange = useCallback((event) => {\n    const { value: newValue } = event.target;\n\n    setValue(newValue);\n  }, []);\n\n  useEffect(() => {\n    setResults(\n      dataTest.filter((item) => {\n        if (\n          item.name.toLowerCase().indexOf(value.toLowerCase()) >= 0 ||\n          item.symbol.toLowerCase().indexOf(value.toLowerCase()) >= 0\n        ) {\n          return true;\n        }\n      })\n    );\n  }, [value]);\n\n  useEffect(() => {\n    const exec = async () => {\n      // todo separate validation\n      const v = value.split(\" \").join(\"\").toLowerCase();\n\n      setReadySubmit(false);\n      if (\"\" + +v === v && +v > 0) {\n        // is block number\n        history.push(`/block/${v}`);\n        setValue(\"\");\n        return;\n      }\n\n      if(config.oneCountryContractAddress) {\n        const onePostfix = v.endsWith(oneCountryPostfix.dotZPT)\n        const countryPostfix = v.endsWith(oneCountryPostfix.dotCountry)\n        if(onePostfix || countryPostfix) {\n          const [prefix] = v.split(onePostfix ? oneCountryPostfix.dotZPT : oneCountryPostfix.dotCountry);\n          if(prefix) {\n            try {\n              const address = await getAddressByName(prefix);\n              if(address) {\n                history.push(`/address/${address}`);\n              } else {\n                toaster.show({\n                  message: () => (\n                    <Box direction={\"row\"} align={\"center\"} pad={\"small\"}>\n                      <Text size={\"small\"}>Address for \"{v}\" not found</Text>\n                    </Box>\n                  ),\n                  time: 5000\n                })\n              }\n            } catch (e) {\n              console.log('Cannot get one country address', e)\n            }\n          }\n        }\n      }\n\n      if (v.length !== 66 && v.length !== 42) {\n        return;\n      }\n      if (v.length === 42 && /^0x[a-f0-9]+$/.test(v)) {\n        // address\n        history.push(`/address/${v}`);\n        setValue(\"\");\n        return;\n      }\n\n      if (v.length === 42 && v.slice(0, 4) === \"one1\") {\n        // address\n        const ethAddress = getAddress(v).basicHex;\n\n        history.push(`/address/${ethAddress}`);\n        setValue(\"\");\n        return;\n      }\n\n      if (v.length === 66 && v[0] === \"0\" && v[1] === \"x\") {\n        // is block hash or tx hash\n        try {\n          try {\n            await Promise.all([\n              getBlockByHash([0, v])\n                .then((res) => {\n                  if (!res) {\n                    return;\n                  }\n                  history.push(`/block/${v}`);\n                  setValue(\"\");\n                })\n                .catch(),\n              getTransactionByField([0, \"hash\", v])\n                .then((res) => {\n                  if (!res) {\n                    return;\n                  }\n                  history.push(`/tx/${v}`);\n                  setValue(\"\");\n                })\n                .catch(),\n              getStakingTransactionByField([0, \"hash\", v]).then((res) => {\n                if (!res) {\n                  return;\n                }\n\n                history.push(`/staking-tx/${v}`);\n                setValue(\"\");\n              }),\n            ]);\n          } catch {\n            await Promise.all(\n              availableShards\n                .filter((t) => t !== 0)\n                .map((shard) => {\n                  return Promise.all([\n                    getBlockByHash([shard, v]).then((res) => {\n                      if (!res) {\n                        return;\n                      }\n                      history.push(`/block/${v}`);\n                      setValue(\"\");\n                    }),\n                    getTransactionByField([shard, \"hash\", v]).then((res) => {\n                      if (!res) {\n                        return;\n                      }\n                      history.push(`/tx/${v}`);\n                      setValue(\"\");\n                    }),\n                    getStakingTransactionByField([shard, \"hash\", v]).then(\n                      (res) => {\n                        if (!res) {\n                          return;\n                        }\n\n                        history.push(`/staking-tx/${v}`);\n                        setValue(\"\");\n                      }\n                    ),\n                  ]);\n                })\n            );\n          }\n\n          return;\n        } catch (e) {}\n      }\n    };\n\n    if(readySubmit) {\n      exec();\n    }\n  }, [readySubmit]);\n\n  const Row = (options: { index: number; style: any }) => {\n    const { index, style } = options;\n    return (\n      <div style={style}>\n        <Box\n          key={`${results[index].item.address}_${results[index].type}`}\n          direction={\"row\"}\n          pad={\"xsmall\"}\n          style={{\n            cursor: \"pointer\",\n            minHeight: \"40px\",\n            borderStyle: \"solid\",\n            borderBottomWidth: \"1px\",\n            borderTopWidth: \"0px\",\n            borderLeftWidth: \"0px\",\n            borderRightWidth: \"0px\",\n            paddingLeft: \"10px\",\n          }}\n          align={\"center\"}\n          border={{\n            color: \"backgroundBack\",\n            size: \"xsmall\",\n          }}\n          onClick={() => {\n            history.push(`/address/${results[index].item.address}`);\n            setValue(\"\");\n          }}\n        >\n          <Box\n            pad={\"xxsmall\"}\n            background={\"backgroundSuccess\"}\n            style={{\n              borderRadius: \"6px\",\n              marginRight: \"10px\",\n              paddingLeft: \"6px\",\n              paddingRight: \"6px\",\n            }}\n          >\n            <Text size={\"xsmall\"}>{`H${results[index].type\n              .slice(1)\n              .toUpperCase()}`}</Text>\n          </Box>\n          <Text size={\"small\"} style={{ paddingRight: \"5px\" }}>\n            {results[index].name} |\n          </Text>\n          <Text size={\"small\"} style={{ paddingRight: \"5px\" }}>\n            {results[index].symbol} |\n          </Text>\n          <Address\n            address={results[index].item.address}\n            noHistoryPush\n            displayHash\n          />\n        </Box>\n      </div>\n    );\n  };\n\n  return (\n    <Box\n      width=\"100%\"\n      pad={{ vertical: \"medium\" }}\n      style={{ position: \"relative\" }}\n    >\n      <TextInput\n        value={value}\n        onChange={onChange}\n        onFocus={() => setFocus(true)}\n        onBlur={() => {\n          setTimeout(() => {\n            setFocus(false);\n          }, 100);\n        }}\n        onPaste={(evt) => {\n          clearTimeout(timeoutID);\n          timeoutID = setTimeout(() => setReadySubmit(true), 200);\n        }}\n        onKeyDown={(e) => {\n          if (e.keyCode === 13) {\n            clearTimeout(timeoutID);\n            timeoutID = setTimeout(() => setReadySubmit(true), 200);\n          }\n        }}\n        color=\"red\"\n        icon={<Search color=\"brand\" />}\n        style={{\n          backgroundColor: themeMode === \"light\" ? \"white\" : \"transparent\",\n          fontWeight: 500,\n          borderRadius: '8px'\n        }}\n        placeholder=\"Search by Address / Transaction Hash / Block / Token\"\n      />\n      {focus && results.length && value ? (\n        <Box\n          style={{\n            borderRadius: \"6px\",\n            position: \"absolute\",\n            marginTop: \"43px\",\n            width: \"100%\",\n            zIndex: 9,\n            maxHeight: \"350px\",\n            minHeight: \"350px\",\n            overflowY: \"auto\",\n            overflowX: \"hidden\",\n            boxShadow:\n              themeMode === \"light\"\n                ? \"0 0 10px 1px rgba(0,0,0,0.05)\"\n                : \"0 0 10px 1px rgba(255,255,255,0.09)\",\n          }}\n          background={\"background\"}\n        >\n          <Box height={\"40px\"} pad={\"small\"}>\n            <Text size={\"small\"}>\n              <b>{results.length}</b> found\n            </Text>\n          </Box>\n          <AutoSizer>\n            {({ height, width }: Size) => (\n              <List\n                className=\"List\"\n                height={height as number}\n                itemCount={results.length}\n                itemSize={40}\n                width={width as number}\n              >\n                {Row}\n              </List>\n            )}\n          </AutoSizer>\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n","export const breakpoints = {\n  mobile: '375px',\n  mobileL: '425px',\n  tablet: '768px',\n  tabletM: '868px',\n  laptop: '1024px',\n  desktop: '1366px',\n};","import React from \"react\";\nimport { Box } from \"grommet\";\nimport { useMediaQuery } from 'react-responsive';\nimport { breakpoints } from \"src/responsive/breakpoints\";\n\nconst sizes = {\n  minWidth: \"343px\",\n  maxWidth: \"1408px\",\n};\n\nexport const BaseContainer = (props: any) => {\n  const { style } = props;\n  const isLessTablet = useMediaQuery({ maxDeviceWidth: breakpoints.tablet });\n\n  return (\n    <Box\n      pad={{ horizontal: isLessTablet ? \"12px\" : '20px' }}\n      {...props}\n      style={{ ...sizes, width: \"100%\", flex: \"1 1 auto\", ...style }}\n    />\n  );\n};\n\nexport const BasePage = (props: any) => {\n  const { style } = props;\n\n  return (\n    <Box\n      pad=\"medium\"\n      background=\"background\"\n      border={{ size: \"xsmall\", color: \"border\" }}\n      {...props}\n      style={{\n        borderRadius: \"8px\",\n        overflow: 'hidden',\n        ...style,\n      }}\n    />\n  );\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { Button as GButton, ButtonExtendedProps } from \"grommet\";\n\nexport type TButtonProps = ButtonExtendedProps & { primary?: boolean };\n\nexport function Button(props: TButtonProps) {\n  return <StyledButton {...props} />;\n}\n\nconst StyledButton = styled(GButton)`\n  border: 1px solid\n    ${(props) => props.theme.global.colors[props.theme.button.borderColor]};\n  padding: 8px 5px;\n  border-radius: 4px;\n  font-weight: bold;\n  text-align: center;\n  font-size: 12px;\n  color: ${(props) => props.theme.global.colors.brand};\n  transition: 0.3s ease all;\n\n  ${(props) =>\n    props.primary\n      ? css`\n          background: ${props.theme.global.colors.backgroundBack};\n        `\n      : css``};\n\n  &:hover {\n    // background-color: ${(props) => props.theme.global.colors.border};\n    letter-spacing: 0.3px;\n  }\n`;\n","import React, { useEffect } from \"react\";\nimport { Box, Text, Select } from \"grommet\";\nimport { Filter } from \"src/types\";\nimport { FormPrevious, FormNext } from \"grommet-icons\";\nimport { formatNumber } from \"src/components/ui/utils\";\nimport styled from \"styled-components\";\n\nconst NavigationItem = styled(Box)<{ disabled?: boolean }>`\n  border-radius: 4px;\n  height: 28px;\n  align-items: center;\n  justify-content: center;\n  padding: 4px 8px;\n  text-align: center;\n  background: ${(props) => props.theme.global.colors.backgroundBack};\n  cursor: ${(props) => props.disabled ? 'default': 'pointer'};\n  opacity: ${(props) => props.disabled ? 0.6: 1};\n  border: 1px solid ${(props) => props.theme.global.colors.border};\n`\n\nexport type TPaginationAction = \"nextPage\" | \"prevPage\" | \"firstPage\" | \"lastPage\";\n\ninterface PaginationNavigator {\n  filter: Filter;\n  elements: any[];\n  totalElements: number;\n  onChange: (filter: Filter, action: TPaginationAction) => void;\n  property?: string;\n  noScrollTop?: boolean;\n  showPages?: boolean;\n  lastElement?: number;\n  isLoading?: boolean;\n}\n\nexport function PaginationNavigator(props: PaginationNavigator) {\n  const {\n    elements,\n    totalElements,\n    filter,\n    onChange,\n    property,\n    noScrollTop,\n    showPages,\n    isLoading,\n  } = props;\n\n  const { offset = 0, limit = 10 } = filter;\n\n  const onFirstPageClick = () => {\n    const newFilter = JSON.parse(JSON.stringify(filter)) as Filter;\n    newFilter.offset = 0;\n\n    if (!isLoading) {\n      onChange(newFilter, \"firstPage\");\n    }\n  };\n\n  const onPrevClick = () => {\n    const newFilter = JSON.parse(JSON.stringify(filter)) as Filter;\n    newFilter.offset = newFilter.offset - (filter.limit || 10);\n\n    if (!isLoading) {\n      onChange(newFilter, \"prevPage\");\n    }\n  };\n\n  const onNextClick = () => {\n    const newFilter = JSON.parse(JSON.stringify(filter)) as Filter;\n    newFilter.offset += filter.limit || 10;\n    if (!isLoading) {\n      onChange(newFilter, \"nextPage\");\n    }\n  };\n\n  const onLastPageClick = () => {\n    const newFilter = JSON.parse(JSON.stringify(filter)) as Filter;\n    const limit = filter.limit || 10\n    newFilter.offset = limit * +Math.ceil(Number(totalElements) / limit).toFixed(0) - limit\n    if (!isLoading) {\n      onChange(newFilter, \"lastPage\");\n    }\n  };\n\n  const currentPage = +(+offset / limit).toFixed(0) + 1\n  const totalPages = +Math.ceil(Number(totalElements) / limit).toFixed(0)\n\n  return (\n    <Box style={{ flex: \"0 0 auto\" }}>\n      <Pagination\n        //@ts-ignore\n        currentPage={currentPage}\n        totalPages={totalPages}\n        onFirstPageClick={onFirstPageClick}\n        onPrevPageClick={onPrevClick}\n        onNextPageClick={onNextClick}\n        onLastPageClick={onLastPageClick}\n        showPages={showPages}\n        disablePrevBtn={filter.offset === 0}\n        disableNextBtn={currentPage >= totalPages}\n      />\n    </Box>\n  );\n}\ninterface PaginationProps {\n  currentPage: number;\n  totalPages: number;\n  showPages?: boolean;\n  onFirstPageClick: () => void;\n  onPrevPageClick: () => void;\n  onNextPageClick: () => void;\n  onLastPageClick: () => void;\n  disableNextBtn: boolean;\n  disablePrevBtn: boolean;\n}\n\nfunction Pagination(props: PaginationProps) {\n  const {\n    currentPage,\n    totalPages,\n    onFirstPageClick,\n    onPrevPageClick,\n    onNextPageClick,\n    onLastPageClick,\n    showPages,\n    disableNextBtn,\n    disablePrevBtn,\n  } = props;\n\n  return (\n    <Box direction=\"row\" gap=\"xsmall\" align={'center'}>\n      {showPages &&\n        <NavigationItem disabled={disablePrevBtn} onClick={disablePrevBtn ? undefined : onFirstPageClick}>\n          <Text size={'xsmall'}>First</Text>\n        </NavigationItem>\n      }\n      <NavigationItem disabled={disablePrevBtn} onClick={disablePrevBtn ? undefined : onPrevPageClick}>\n        <FormPrevious size={'20px'} style={{ userSelect: \"none\"}} />\n      </NavigationItem>\n      {showPages &&\n        <NavigationItem disabled={true}>\n          <Text size={'xsmall'} style={{ cursor: 'default' }}>\n            Page {formatNumber(+currentPage)} of {formatNumber(+totalPages)}\n          </Text>\n        </NavigationItem>\n      }\n      <NavigationItem disabled={disableNextBtn} onClick={disableNextBtn ? undefined : onNextPageClick}>\n        <FormNext size={'20px'} style={{ userSelect: \"none\" }} />\n      </NavigationItem>\n      {showPages &&\n        <NavigationItem disabled={disableNextBtn} onClick={disableNextBtn ? undefined : onLastPageClick}>\n          <Text size={'xsmall'}>Last</Text>\n        </NavigationItem>\n      }\n    </Box>\n  );\n}\n\ninterface ElementsPerPage {\n  filter: Filter;\n  onChange: (filter: Filter) => void;\n  options?: string[];\n}\n\nconst defaultOptions: string[] = [\"10\", \"25\", \"50\", \"100\"];\n\nexport function PaginationRecordsPerPage(props: ElementsPerPage) {\n  const { filter, options = defaultOptions, onChange } = props;\n  const { limit = 10 } = filter;\n\n  const onChangeLimit = (props: { option: number }) => {\n    const newFilter = JSON.parse(JSON.stringify(filter)) as Filter;\n    newFilter.limit = Number(props.option);\n    onChange(newFilter);\n  };\n\n  const renderOption = (option: string) => <Box pad={'small'}><Text size={'small'}>{option}</Text></Box>\n\n  return (\n    <Box direction=\"row\" gap=\"small\" align=\"center\">\n      <Box style={{ width: \"105px\" }}>\n        <Select\n          options={options}\n          value={limit.toString()}\n          onChange={onChangeLimit}\n        >{renderOption}</Select>\n      </Box>\n      <Text size=\"small\">records per page</Text>\n    </Box>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { Box } from \"grommet\";\nimport { Filter } from \"src/types\";\nimport { FormPrevious, FormNext } from \"grommet-icons\";\n\ninterface PaginationNavigator {\n  filter: Filter;\n  blocks: any[];\n  totalElements: number;\n  onChange: (filter: Filter) => void;\n  property: string;\n}\n\nexport function PaginationBlockNavigator(props: PaginationNavigator) {\n  const { blocks, totalElements, filter, onChange, property } = props;\n  const { filters, limit = 10 } = filter;\n  const { value } = filters[0];\n\n  useEffect(() => {\n    const scrollBody = document.getElementById(\"scrollBody\");\n\n    if (scrollBody) {\n      scrollBody.scrollTo({ top: 0 });\n    }\n  }, [filter]);\n\n  const blockNumbers = blocks.map((b) => +b.number);\n  const minBlockNumber = blockNumbers.reduce(\n    (a, b) => (a === -1 || a > b ? b : a),\n    -1\n  );\n  const maxBlockNumber = blockNumbers.reduce((a, b) => Math.max(a, b), 0);\n\n  const onPrevClick = () => {\n    const newFilter = JSON.parse(JSON.stringify(filter)) as Filter;\n    const innerFilter = newFilter.filters.find((i) => i.property === property);\n    if (innerFilter) {\n      innerFilter.type = \"lt\";\n      innerFilter.value = maxBlockNumber + limit + 1;\n    }\n\n    onChange(newFilter);\n  };\n\n  const onNextClick = () => {\n    const newFilter = JSON.parse(JSON.stringify(filter)) as Filter;\n    const innerFilter = newFilter.filters.find((i) => i.property === property);\n    if (innerFilter) {\n      innerFilter.type = \"lt\";\n      innerFilter.value = minBlockNumber;\n    }\n\n    onChange(newFilter);\n  };\n\n  return (\n    <Box style={{ flex: \"1 0 auto\" }}>\n      <Pagination\n        currentPage={+((totalElements - +value) / limit).toFixed(0) + 1}\n        totalPages={+(Number(totalElements) / limit).toFixed(0)}\n        onPrevPageClick={onPrevClick}\n        onNextPageClick={onNextClick}\n      />\n    </Box>\n  );\n}\ninterface PaginationProps {\n  currentPage: number;\n  totalPages: number;\n  onPrevPageClick: () => void;\n  onNextPageClick: () => void;\n}\n\nfunction Pagination(props: PaginationProps) {\n  const { onPrevPageClick, onNextPageClick } = props;\n  return (\n    <Box direction=\"row\" gap=\"small\" justify=\"end\">\n      <FormPrevious\n        onClick={onPrevPageClick}\n        style={{ cursor: \"pointer\", userSelect: \"none\" }}\n      />\n      <FormNext\n        onClick={onNextPageClick}\n        style={{ cursor: \"pointer\", userSelect: \"none\" }}\n      />\n    </Box>\n  );\n}\n\n// interface ElementsPerPage {\n//   filter: Filter;\n//   onChange: (filter: Filter) => void;\n//   options?: number[];\n// }\n//\n// const defaultOptions: string[] = [\"10\", \"25\", \"50\", \"100\"];\n\n// export function PaginationBlockRecordsPerPage(props: ElementsPerPage) {\n//   const { filter, options = defaultOptions, onChange } = props;\n//   const { limit = 10 } = filter;\n//\n//   const onChangeLimit = (props: { option: number }) => {\n//     const newFilter = JSON.parse(JSON.stringify(filter)) as Filter;\n//     newFilter.limit = Number(props.option);\n//     onChange(newFilter);\n//   };\n//\n//   return (\n//     <Box direction=\"row\" gap=\"small\" align=\"center\">\n//       <Box style={{ width: \"95px\" }}>\n//         <Select\n//           options={options}\n//           value={limit.toString()}\n//           onChange={onChangeLimit}\n//         />\n//       </Box>\n//       <Text size=\"small\">records per page</Text>\n//     </Box>\n//   );\n// }\n","import { Text } from \"grommet\";\nimport { TraceCallTypes } from \"src/types\";\n\ninterface ITransactionType {\n  type: TraceCallTypes;\n}\n\nexport const TransactionType = (props: ITransactionType) => {\n  const { type } = props;\n  return (\n    <Text size=\"small\" margin={{ right: \"xxmall\" }}>\n      {typeMap[type] || type}\n    </Text>\n  );\n};\n\nconst typeMap: Record<string, string> = {\n  call: \"Call\",\n  staticcall: \"Static Call\",\n  create: \"Create\",\n  create2: \"Create 2\",\n  delegatecall: \"Delegate Call\",\n};\n","import { Text } from \"grommet\";\nimport { StakingTransactionType } from \"src/types\";\n\ninterface IStakingTransactionType {\n  type: StakingTransactionType;\n}\n\nexport const StakingTransactionTypeValue = (props: IStakingTransactionType) => {\n  const { type } = props;\n  return (\n    <Text size=\"small\" margin={{ right: \"xxmall\" }}>\n      {typeMap[type] || type}\n    </Text>\n  );\n};\n\nconst typeMap: Record<StakingTransactionType, string> = {\n  CreateValidator: \"Create Validator\",\n  EditValidator: \"Edit Validator\",\n  CollectRewards: \"Collect Rewards\",\n  Undelegate: \"Undelegate\",\n  Delegate: \"Delegate\",\n};\n","import { Text } from \"grommet\";\nimport React from \"react\";\nimport Big from \"big.js\";\nimport { formatNumber as _formatNumber } from \"src/components/ui/utils\";\n\nimport { useERC20Pool } from \"src/hooks/ERC20_Pool\";\nimport { useERC721Pool } from \"src/hooks/ERC721_Pool\";\nimport styled from \"styled-components\";\n\ninterface ZPTValueProps {\n  value: string | number;\n  tokenAddress?: string;\n  style?: React.CSSProperties;\n  formatNumber?: boolean;\n  hideSymbol?: boolean;\n  isShort?: boolean;\n}\n\nBig.DP = 21;\nBig.NE = -20;\nBig.PE = 15;\n\nconst TextWrapper = styled(Text)<{ isShort: boolean }>`\n  ${(props) => props.isShort &&\n  `\n    width: 200px;\n    display: flex;\n  \n    b {\n      display: block;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  `\n  }\n`\n\n// @ts-ignore\nexport const TokenValue = (props: ZPTValueProps) => {\n  const {\n    value,\n    tokenAddress = \"\",\n    style,\n    formatNumber,\n    hideSymbol = false,\n    isShort = false\n  } = props;\n  const erc20Map = useERC20Pool();\n  const erc721Map = useERC721Pool();\n  //TODO remove hardcode\n  const tokenInfo: any = erc20Map[tokenAddress] ||\n    erc721Map[tokenAddress] || { decimals: 14, symbol: \"\" };\n\n  if (!(\"decimals\" in tokenInfo)) {\n    tokenInfo.decimals = 0;\n  }\n\n  if (value === \"0\" || value === 0) {\n    return <Text size=\"small\">—</Text>;\n  }\n\n  if (!value) {\n    return null;\n  }\n\n  const bi = Big(value).div(10 ** tokenInfo.decimals);\n  const v = formatNumber ? _formatNumber(bi.toNumber()) : bi.toString();\n\n  return (\n    <TextWrapper size=\"small\" isShort={isShort} style={style}>\n      <b>{v}</b> {hideSymbol ? null : <span style={{ whiteSpace: 'nowrap' }}>{tokenInfo.symbol}</span>}\n    </TextWrapper>\n  );\n};\n","import { useState } from \"react\";\nimport { singletonHook } from \"react-singleton-hook\";\n\nexport enum DateFormat {\n  RELATIVE= 'relative',\n  EXACT = 'exact'\n}\n\nconst defaultDateFormat: DateFormat = DateFormat.EXACT;\n\nlet globalSetMode = () => {\n  throw new Error(\"you must useDarkMode before setting its state\");\n};\n\nconst ITEM_NAME = 'dateFormat';\n\nexport const setDateFormatMode = (mode: DateFormat) => {\n  //@ts-ignore\n  globalSetMode(mode);\n  window.localStorage.setItem(ITEM_NAME, mode);\n};\n\nexport const useDateFormatMode = singletonHook<DateFormat>(\n  (window.localStorage.getItem(ITEM_NAME) || defaultDateFormat) as DateFormat,\n  () => {\n    const currentDateFormat =\n      (window.localStorage.getItem(ITEM_NAME) as DateFormat) || defaultDateFormat;\n\n    const [mode, setMode] = useState<DateFormat>(currentDateFormat);\n    //@ts-ignore\n    globalSetMode = setMode;\n    return mode;\n  }\n);\n\n\n","import React from \"react\";\nimport { Text } from \"grommet\";\nimport dayjs from \"dayjs\";\nimport { DateFormat, useDateFormatMode } from \"../../hooks/dateFormatSwitcherHook\";\nimport { RelativeTimer } from \"./RelativeTimer\";\n\ninterface IRelativeTimer {\n  date: number | string | Date;\n}\n\nexport function DateTime(props: IRelativeTimer) {\n  const { date } = props;\n\n  const dateFormat = useDateFormatMode();\n\n  if (dateFormat === DateFormat.RELATIVE) {\n    return <RelativeTimer date={date} />\n  }\n\n  const formattedDate = dayjs(date).format(\"MM/DD/YYYY, HH:mm:ss\");\n\n  return (\n    <Text\n      size=\"small\"\n      style={{ minWidth: \"125px\" }}\n      color=\"minorText\"\n      title={formattedDate}\n    >\n      {formattedDate}\n    </Text>\n  );\n}\n","import {\n  Address,\n  Timestamp,\n  BlockHash,\n  BlockNumber,\n  TransactionHash,\n  formatNumber,\n} from \"src/components/ui\";\nimport {\n  Clone,\n  FormPreviousLink,\n  FormNextLink,\n  StatusGood,\n} from \"grommet-icons\";\nimport { Link } from \"react-router-dom\";\n\nimport React from \"react\";\nimport { Block } from \"src/types\";\nimport { CopyBtn } from \"../ui/CopyBtn\";\nimport { toaster } from \"src/App\";\nimport { Box, Text } from \"grommet\";\nimport styled from \"styled-components\";\n\nexport const StyledBox = styled(Box)`\n  transition: all 0.2s linear;\n  border-radius: 2px;\n  padding-left: 5px;\n`;\n\nconst Icon = styled(StatusGood)`\n  margin-right: 5px;\n`;\n\nexport const blockPropertyDisplayNames: Record<string, string> = {\n  number: \"Height\",\n  hash: \"Hash\",\n  miner: \"Proposer\",\n  extraData: \"Extra Data\",\n  gasLimit: \"Gas Limit\",\n  gasUsed: \"Gas Used\",\n  timestamp: \"Timestamp\",\n  difficulty: \"Difficulty\",\n  logsBloom: \"Logs Bloom\",\n  mixHash: \"Mix Hash\",\n  nonce: \"Nonce\",\n  parentHash: \"Parent Hash\",\n  receiptsRoot: \"Receipts Root\",\n  sha3Uncles: \"SHA3 Uncles\",\n  size: \"Size\",\n  stateRoot: \"State Root\",\n  transactions: \"Transactions\",\n  stakingTransactions: \"Staking Transactions\",\n  transactionsRoot: \"Transactions Root\",\n  uncles: \"Uncles\",\n  epoch: \"Epoch\",\n  viewID: \"View ID\",\n  shard: \"Shard\",\n};\n\nexport const blockPropertyDescriptions: Record<string, string> = {\n  shard: 'Shard Number',\n  number:\n    \"Also known as Block Number. The block height, which indicates the length of the blockchain, increases after the addition of the new block.\",\n  hash: \"The hash of the block header of the current block.\",\n  miner: \"Miner who successfully include the block onto the blockchain.\",\n  extraData: \"Any data that can be included by the miner in the block.\",\n  gasLimit: \"Total gas limit provided by all transactions in the block.\",\n  gasUsed:\n    \"The total gas used in the block and its percentage of gas filled in the block.\",\n  timestamp: \"The date and time at which a block is mined.\",\n  difficulty:\n    \"The amount of effort required to mine a new block. The difficulty algorithm may adjust according to time.\",\n  logsBloom: \"Logs Bloom\",\n  mixHash: \"Mix Hash\",\n  nonce:\n    \"Block nonce is a value used during mining to demonstrate proof of work for a block.\",\n  parentHash:\n    \"The hash of the block from which this block was generated, also known as its parent block.\",\n  receiptsRoot: \"Receipts Root\",\n  sha3Uncles:\n    \"The mechanism which Ethereum Javascript RLP encodes an empty string.\",\n  size: \"The block size is actually determined by the block's gas limit.\",\n  stateRoot: \"The root of the state trie\",\n  transactions:\n    \"The number of transactions in the block. Internal transaction is transactions as a result of contract execution that involves ZPT value.\",\n  stakingTransactions: \"The number of staking transactions in the block.\",\n  transactionsRoot: \"Transactions Root\",\n  uncles: \"Uncles\",\n  epoch: \"Epoch\",\n  viewID: \"View ID\",\n};\n\nexport const blockPropertySort: Record<string, number> = {\n  number: 1000,\n  shard: 997,\n  hash: 995,\n  miner: 960,\n  extraData: 500,\n  gasLimit: 900,\n  gasUsed: 890,\n  timestamp: 990,\n  difficulty: 500,\n  logsBloom: 500,\n  mixHash: 500,\n  nonce: 500,\n  parentHash: 500,\n  receiptsRoot: 500,\n  sha3Uncles: 500,\n  size: 700,\n  stateRoot: 500,\n  transactions: 980,\n  stakingTransactions: 970,\n  transactionsRoot: 500,\n  uncles: 500,\n  epoch: 500,\n  viewID: 500,\n};\nconst emptyLogBloom =\n  \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\";\nconst emptyMixHash =\n  \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n\nexport const blockPropertyDisplayValues: any = {\n  // @ts-ignore\n  number: (value: any, data, isNewAddress) => (\n    <>\n      <StyledBox\n        direction={\"row\"}\n        background={isNewAddress ? \"backgroundSuccess\" : \"\"}\n        style={{ maxWidth: \"125px\" }}\n        align={\"center\"}\n      >\n        <CopyBtn\n          value={value}\n          onClick={() =>\n            toaster.show({\n              message: () => (\n                <Box direction={\"row\"} align={\"center\"} pad={\"small\"}>\n                  <Icon size={\"small\"} color={\"headerText\"} />\n                  <Text size={\"small\"}>Copied to clipboard</Text>\n                </Box>\n              ),\n            })\n          }\n        />\n         &nbsp;\n        <BlockNumber number={value} />\n        &nbsp;\n        {value > 0 && (\n          <Link to={`/block/${+value - 1}`}>\n            <FormPreviousLink size=\"small\" color=\"brand\" />\n          </Link>\n        )}\n        <Link to={`/block/${+value + 1}`}>\n          <FormNextLink size=\"small\" color=\"brand\" />\n        </Link>\n      </StyledBox>\n    </>\n  ),\n  transactions: (value: any[]) =>\n    value.length > 0\n      ? value.map((tx) => (\n          <>\n            <CopyBtn\n              value={tx}\n              onClick={() =>\n                toaster.show({\n                  message: () => (\n                    <Box direction={\"row\"} align={\"center\"} pad={\"small\"}>\n                      <Icon size={\"small\"} color={\"headerText\"} />\n                      <Text size={\"small\"}>Copied to clipboard</Text>\n                    </Box>\n                  ),\n                })\n              }\n            />\n            &nbsp;\n            <TransactionHash key={tx} hash={tx} />\n            <br />\n          </>\n        ))\n      : null,\n  stakingTransactions: (value: any[]) =>\n    value.length > 0\n      ? value.map((tx) => (\n          <>\n            <CopyBtn\n              value={tx}\n              onClick={() =>\n                toaster.show({\n                  message: () => (\n                    <Box direction={\"row\"} align={\"center\"} pad={\"small\"}>\n                      <Icon size={\"small\"} color={\"headerText\"} />\n                      <Text size={\"small\"}>Copied to clipboard</Text>\n                    </Box>\n                  ),\n                })\n              }\n            />\n            &nbsp;\n            <TransactionHash link=\"staking-tx\" key={tx} hash={tx} />\n            <br />\n          </>\n        ))\n      : null,\n  miner: (value: any) => <Address address={value} />,\n  hash: (value: any) => <BlockHash hash={value} />,\n  parentHash: (value: any) => <BlockHash hash={value} />,\n  timestamp: (value: any) => <Timestamp timestamp={value} withRelative />,\n  gasUsed: (value: any, block: Block) => (\n    <span>\n      {formatNumber(+value)} ({((+value / +block.gasLimit) * 100).toFixed(2)}%){\" \"}\n    </span>\n  ),\n  gasLimit: (value: any) => <>{formatNumber(+value)}</>,\n  size: (value: any) => <>{formatNumber(+value)}</>,\n};\n\nexport const blockDisplayValues = (\n  block: Block,\n  key: string,\n  value: any,\n  isNewAddress: boolean\n) => {\n  const f = blockPropertyDisplayValues[key];\n\n  let displayValue = value;\n\n  if (f) {\n    displayValue = f(value, block, isNewAddress);\n  } else {\n    if (Array.isArray(value)) {\n      displayValue = value.join(\", \");\n    }\n\n    if (displayValue === emptyLogBloom || displayValue === emptyMixHash) {\n      displayValue = null;\n    } else if (value && value.length && value.length > 66) {\n      displayValue = value.slice(0, 63) + \"...\";\n    }\n\n    if (displayValue === \"0x\") {\n      displayValue = null;\n    }\n  }\n\n  return (\n    <div>\n      {![\"transactions\", \"stakingTransactions\", \"uncles\", \"nonce\"].includes(\n        key\n      ) &&\n        ![\"0x\", \"0\", 0, null].includes(displayValue) &&\n        ![\"miner\", \"number\"].find((item) => item === key) && (\n          <>\n            <CopyBtn\n              value={value}\n              onClick={() =>\n                toaster.show({\n                  message: () => (\n                    <Box direction={\"row\"} align={\"center\"} pad={\"small\"}>\n                      <Icon size={\"small\"} color={\"headerText\"} />\n                      <Text size={\"small\"}>Copied to clipboard</Text>\n                    </Box>\n                  ),\n                })\n              }\n            />\n            &nbsp;\n          </>\n        )}\n      {displayValue || \"—\"}\n    </div>\n  );\n};\n","import React, { FunctionComponent, useEffect, useState } from \"react\";\nimport { Block } from \"../../types\";\nimport {\n  blockPropertyDisplayNames,\n  blockPropertySort,\n  blockPropertyDescriptions,\n  blockDisplayValues,\n} from \"./helpers\";\nimport { TipContent } from \"src/components/ui\";\nimport {Box, DataTable, Tip, Anchor, Text, Select} from \"grommet\";\nimport { CircleQuestion, CaretDownFill, CaretUpFill } from \"grommet-icons\";\nimport { useWindowFocused } from \"src/hooks/useWindowFocusHook\";\nimport { config } from \"../../config\";\nconst { availableShards } = config\n\nconst columns = [\n  {\n    property: \"key\",\n    render: (e: any) => (\n      <div>\n        <Tip\n          dropProps={{ align: { left: \"right\" } }}\n          content={<TipContent message={blockPropertyDescriptions[e.key]} />}\n        >\n          <span>\n            <CircleQuestion size=\"small\" />\n          </span>\n        </Tip>\n        &nbsp;{blockPropertyDisplayNames[e.key] || e.key}\n      </div>\n    ),\n    size: \"1/3\",\n  },\n  {\n    property: \"value\",\n    size: \"2/3\",\n    render: (e: any) => e.value,\n  },\n];\n\ntype BlockDetailsProps = {\n  block: Block;\n  blockShardId: number;\n  isShardIdSelectAvailable?: boolean;\n  onSelectShardId?: (shardId: number) => void;\n};\ntype tableEntry = {\n  key: string;\n  value: any;\n};\n\ninterface ShardIdSelectProps {\n  blockShardId: number\n  onSelectShardId?: (shardId: number) => void\n}\n\nconst ShardIdSelect = (props: ShardIdSelectProps) => {\n  const {blockShardId, onSelectShardId = () => {}} = props\n  const value = blockShardId.toString()\n  const options = availableShards.map((id) => id.toString())\n  const renderOption = (option: string) => <Box pad={'small'}><Text size={'small'}>Shard {option}</Text></Box>\n\n  return <Box width={'xsmall'} style={{ fontSize: 'small' }}>\n    <Select\n        options={options}\n        value={value}\n        onChange={({ option }) => onSelectShardId(+option)}\n        disabled={false}\n    >\n      {renderOption}\n    </Select>\n  </Box>\n}\n\nexport const BlockDetails: FunctionComponent<BlockDetailsProps> = ({\n  block,\n  blockShardId,\n  isShardIdSelectAvailable = false,\n  onSelectShardId\n}) => {\n  const [showDetails, setShowDetails] = useState(true);\n  const [isNewAddress, setIsNewAddress] = useState<boolean>(false);\n  const focus = useWindowFocused();\n\n  useEffect(() => {\n    let tId = 0;\n    const getActiveIndex = () => {\n      setIsNewAddress(true);\n      tId = window.setTimeout(() => setIsNewAddress(false), 1000);\n    };\n    getActiveIndex();\n\n    return () => clearTimeout(tId);\n  }, [block]);\n\n  const keys = Object.keys({ ...block, shard: blockShardId });\n  const sortedKeys = keys.sort(\n    (a, b) => blockPropertySort[b] - blockPropertySort[a]\n  );\n  const shardIdView = isShardIdSelectAvailable\n      ? <ShardIdSelect blockShardId={blockShardId} onSelectShardId={onSelectShardId} />\n      : <Text size={\"small\"}>{blockShardId}</Text>\n  // show 8 till gas used\n  const filteredKeys = sortedKeys.filter((k, i) => showDetails || i < 8);\n  const blockData = filteredKeys.reduce((arr, key) => {\n    // @ts-ignore\n    const value =\n      key === \"shard\"\n          ? shardIdView\n          : (\n        blockDisplayValues(block, key, (block as any)[key], isNewAddress)\n      );\n\n    arr.push({ key, value } as tableEntry);\n    return arr;\n  }, [] as tableEntry[]);\n\n  return (\n    <>\n      <Box\n        flex\n        align=\"stretch\"\n        justify=\"start\"\n        margin={{ top: \"-42px\" }}\n        style={{ overflow: \"auto\" }}\n      >\n        <DataTable\n          className={\"g-table-body-last-col-right\"}\n          style={{ width: \"100%\", minWidth: \"698px\" }}\n          columns={columns}\n          data={blockData}\n          step={50}\n          border={{\n            header: false,\n            body: {\n              color: \"border\",\n              side: \"bottom\",\n              size: \"1px\",\n            },\n          }}\n        />\n        <Box align=\"center\" justify=\"center\">\n          <Anchor\n            onClick={() => setShowDetails(!showDetails)}\n            margin={{ top: \"medium\" }}\n          >\n            {showDetails ? (\n              <>\n                Show less&nbsp;\n                <CaretUpFill size=\"small\" />\n              </>\n            ) : (\n              <>\n                Show more&nbsp;\n                <CaretDownFill size=\"small\" />\n              </>\n            )}\n          </Anchor>\n        </Box>\n      </Box>\n    </>\n  );\n};\n","import { BlockDetails } from \"src/components/block/BlockDetails\";\nimport { Block } from \"../types\";\nimport { useParams } from \"react-router-dom\";\nimport { BasePage } from \"src/components/ui\";\nimport { getBlockByNumber, getBlockByHash } from \"src/api/client\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { Heading } from \"grommet\";\nimport { config } from \"../config\";\nconst { availableShards } = config\n\nexport const BlockPage = () => {\n  // hash or number\n  // @ts-ignore\n  const { id } = useParams();\n  const [isBlockLoading, setBlockLoading] = useState(false);\n  const [block, setBlock] = useState<Block | null>(null);\n  const [blockShardId, setBlockShardId] = useState<null | number>(null)\n\n  const isIdParamNumber = \"\" + +id === id\n\n  useEffect(() => {\n    let isBlockFetching = true;\n\n    const findBlock = async () => {\n      const shardsList = blockShardId === null\n          ? [...availableShards]  // Search in all available shards\n          : [blockShardId]        // Search in specific shardId\n      setBlock(null)\n      setBlockLoading(true)\n      for(let i=0; i < shardsList.length; i++) { // Search block on each shard until it will be found or not\n        const shardId = shardsList[i]\n        try {\n          if (isBlockFetching) {\n            const blockData = isIdParamNumber\n                ? await getBlockByNumber([shardId, +id])\n                : await getBlockByHash([shardId, id]);\n            setBlock(blockData as Block);\n            setBlockShardId(shardId);\n            break\n          } else {\n            break\n          }\n        } catch (e) {\n          console.log(`Block with id/hash \"${id}\" not found on shard \"${shardId}\"`)\n        }\n      }\n      setBlockLoading(false)\n    }\n\n    findBlock();\n\n    return () => {\n      isBlockFetching = false\n    };\n  }, [id, blockShardId]);\n\n  if (!block) {\n    if (!isIdParamNumber) {\n      return null\n    }\n    const blockDetails = { number: id } as Block\n    return (\n        <>\n          <Heading size=\"xsmall\" margin={{ top: \"0\" }}>\n            Block <b>#{id}</b>\n          </Heading>\n          <BasePage>\n            <BlockDetails\n                block={blockDetails}\n                blockShardId={blockShardId || 0}\n                isShardIdSelectAvailable={isIdParamNumber}\n                onSelectShardId={(shardId: number) => setBlockShardId(shardId)}\n            />\n          </BasePage>\n        </>\n    );\n  }\n\n  return (\n    <>\n      <Heading size=\"xsmall\" margin={{ top: \"0\" }}>\n        Block <b>#{block.number}</b>\n      </Heading>\n      <BasePage>\n        <BlockDetails\n            block={block}\n            blockShardId={blockShardId || 0}\n            isShardIdSelectAvailable={isIdParamNumber}\n            onSelectShardId={(shardId: number) => setBlockShardId(shardId)}\n        />\n      </BasePage>\n    </>\n  );\n};\n","import React from \"react\";\nimport { ThemeContext } from \"styled-components\";\n\ninterface IIconProps {\n  size?: string;\n  color?: string;\n}\n\nexport function TelegramIcon(props: IIconProps) {\n  const theme = React.useContext(ThemeContext);\n  const { size = \"24px\", color = theme.global.palette.Grey } = props;\n\n  return (\n    <svg\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      strokeLinejoin=\"round\"\n      strokeMiterlimit=\"1.41421\"\n    >\n      <path\n        fill={theme.global.colors[color] || color}\n        id=\"telegram-4\"\n        d=\"M12,0c-6.626,0 -12,5.372 -12,12c0,6.627 5.374,12 12,12c6.627,0 12,-5.373 12,-12c0,-6.628 -5.373,-12 -12,-12Zm3.224,17.871c0.188,0.133 0.43,0.166 0.646,0.085c0.215,-0.082 0.374,-0.267 0.422,-0.491c0.507,-2.382 1.737,-8.412 2.198,-10.578c0.035,-0.164 -0.023,-0.334 -0.151,-0.443c-0.129,-0.109 -0.307,-0.14 -0.465,-0.082c-2.446,0.906 -9.979,3.732 -13.058,4.871c-0.195,0.073 -0.322,0.26 -0.316,0.467c0.007,0.206 0.146,0.385 0.346,0.445c1.381,0.413 3.193,0.988 3.193,0.988c0,0 0.847,2.558 1.288,3.858c0.056,0.164 0.184,0.292 0.352,0.336c0.169,0.044 0.348,-0.002 0.474,-0.121c0.709,-0.669 1.805,-1.704 1.805,-1.704c0,0 2.084,1.527 3.266,2.369Zm-6.423,-5.062l0.98,3.231l0.218,-2.046c0,0 3.783,-3.413 5.941,-5.358c0.063,-0.057 0.071,-0.153 0.019,-0.22c-0.052,-0.067 -0.148,-0.083 -0.219,-0.037c-2.5,1.596 -6.939,4.43 -6.939,4.43Z\"\n      />\n    </svg>\n  );\n}\n\nexport function DiscordIcon(props: IIconProps) {\n  const theme = React.useContext(ThemeContext);\n  const { size = \"24px\", color = theme.global.palette.Grey } = props;\n\n  return (\n    <svg\n      width={size}\n      height={size}\n      enableBackground=\"new 0 0 512 512\"\n      viewBox=\"0 0 512 512\"\n    >\n      <circle\n        cx=\"256\"\n        cy=\"256\"\n        fill={theme.global.colors[color] || color}\n        id=\"ellipse\"\n        r=\"256\"\n      />\n      <path\n        d=\"M372.4,168.7c0,0-33.3-26.1-72.7-29.1l-3.5,7.1c35.6,8.7,51.9,21.2,69,36.5  c-29.4-15-58.5-29.1-109.1-29.1s-79.7,14.1-109.1,29.1c17.1-15.3,36.5-29.2,69-36.5l-3.5-7.1c-41.3,3.9-72.7,29.1-72.7,29.1  s-37.2,54-43.6,160c37.5,43.3,94.5,43.6,94.5,43.6l11.9-15.9c-20.2-7-43.1-19.6-62.8-42.3c23.5,17.8,59.1,36.4,116.4,36.4  s92.8-18.5,116.4-36.4c-19.7,22.7-42.6,35.3-62.8,42.3l11.9,15.9c0,0,57-0.3,94.5-43.6C409.6,222.7,372.4,168.7,372.4,168.7z   M208.7,299.6c-14.1,0-25.5-13-25.5-29.1s11.4-29.1,25.5-29.1c14.1,0,25.5,13,25.5,29.1S222.8,299.6,208.7,299.6z M303.3,299.6  c-14.1,0-25.5-13-25.5-29.1s11.4-29.1,25.5-29.1s25.5,13,25.5,29.1S317.3,299.6,303.3,299.6z\"\n        fill={theme.global.colors.background}\n      />\n    </svg>\n  );\n}\n\nexport function LatencyIcon(props: IIconProps) {\n  const theme = React.useContext(ThemeContext);\n  const { size = \"24px\", color = theme.global.palette.Grey } = props;\n\n  return (\n    <svg\n      width={size}\n      height={size}\n      viewBox=\"0 0 512 512\"\n      enableBackground=\"new 0 0 512 512;\"\n      fill={theme.global.colors[color] || color}\n    >\n      <g>\n        <path\n          d=\"M256,512C114.5,512,0,397.5,0,256c0-69.8,27.9-135.9,78.2-184.3c8.4-8.4,21.4-7.4,28.9,0.9\n\t\tc8.4,8.4,7.4,21.4-0.9,28.9C63.3,142.4,40,197.4,40,256c0,118.2,96.8,215,215,215s216-96.8,216-215c0-111.7-85.6-203.9-194.6-214.1\n\t\tv80.1c0,11.2-9.3,20.5-20.5,20.5c-11.2,0-20.5-9.3-20.5-20.5V20.5C235.5,9.3,244.8,0,256,0c141.5,0,256,114.5,256,256\n\t\tS397.5,512,256,512z\"\n        />\n        <path\n          d=\"M153.6,135.9l127.5,91.2c17.7,12.1,21.4,36.3,9.3,54s-36.3,21.4-54,9.3c-3.7-2.8-6.5-5.6-9.3-9.3\n\t\tl-91.2-127.5c-3.7-5.6-2.8-14,2.8-17.7C143.4,132.2,148.9,132.2,153.6,135.9z\"\n        />\n      </g>\n    </svg>\n  );\n}\n\n// export function TransactionsIcon(props: IIconProps) {\n//   const theme = React.useContext(ThemeContext);\n//   const { size = \"24px\", color = theme.global.palette.Grey } = props;\n//\n//   return (\n//     <svg\n//       width={size}\n//       height={size}\n//       viewBox=\"-16 0 480 480\"\n//       fill={theme.global.colors[color] || color}\n//\n//     >\n//       <path d=\"m440 224h-72v-184c-.027344-22.082031-17.917969-39.9726562-40-40h-264c-17.671875 0-32 14.328125-32 32v96h-24c-4.417969 0-8 3.582031-8 8v48c0 4.417969 3.582031 8 8 8h24v88c0 4.417969 3.582031 8 8 8h40v160c0 17.671875 14.328125 32 32 32h264c17.671875 0 32-14.328125 32-32s-14.328125-32-32-32h-8v-128h72c4.417969 0 8-3.582031 8-8v-48c0-4.417969-3.582031-8-8-8zm-392-192c0-8.835938 7.164062-16 16-16s16 7.164062 16 16v96h-32zm-32 112h224c4.023438 0 7.421875-2.984375 7.9375-6.976562l27.566406 22.976562-27.566406 22.976562c-.515625-3.992187-3.914062-6.976562-7.9375-6.976562h-224zm32 128v-80h32v80zm344 176c0 8.835938-7.164062 16-16 16h-236.296875c2.824219-4.859375 4.304687-10.378906 4.296875-16v-16h232c8.835938 0 16 7.164062 16 16zm-40-32h-216c-4.417969 0-8 3.582031-8 8v24c0 8.835938-7.164062 16-16 16s-16-7.164062-16-16v-256h136v8c0 3.105469 1.796875 5.933594 4.609375 7.25s6.132813.886719 8.519531-1.105469l48-40c1.820313-1.519531 2.875-3.769531 2.875-6.144531s-1.054687-4.625-2.875-6.144531l-48-40c-2.386718-1.992188-5.707031-2.421875-8.519531-1.105469s-4.609375 4.144531-4.609375 7.25v8h-136v-96c-.027344-5.632812-1.558594-11.15625-4.433594-16h236.433594c13.253906 0 24 10.746094 24 24v184h-136v-8c0-3.105469-1.796875-5.933594-4.609375-7.25s-6.132813-.886719-8.519531 1.105469l-48 40c-1.820313 1.519531-2.875 3.769531-2.875 6.144531s1.054687 4.625 2.875 6.144531l48 40c2.386718 1.992188 5.707031 2.421875 8.519531 1.105469s4.609375-4.144531 4.609375-7.25v-8h136zm80-144h-224c-1.03125.003906-2.050781.210938-3 .609375-.292969.152344-.574219.324219-.847656.511719-.574219.296875-1.113282.660156-1.601563 1.085937-.257812.289063-.496093.59375-.710937.914063-.390625.449218-.722656.941406-1 1.472656-.15625.375-.277344.765625-.367188 1.167969-.167968.390625-.300781.796875-.394531 1.214843l-27.582031-22.976562 27.566406-22.976562c.09375.417968.226562.824218.394531 1.214843.085938.402344.210938.792969.367188 1.167969.273437.53125.609375 1.023438 1 1.472656.214843.320313.453125.625.710937.914063.488282.425781 1.027344.789062 1.601563 1.085937.273437.1875.554687.359375.847656.511719.953125.402344 1.980469.609375 3.015625.609375h224zm0 0\" />\n//       <path d=\"m128 48h80v16h-80zm0 0\" />\n//       <path d=\"m128 80h80v16h-80zm0 0\" />\n//       <path d=\"m160 352h160v16h-160zm0 0\" />\n//       <path d=\"m160 384h160v16h-160zm0 0\" />\n//       <path d=\"m272 320h48v16h-48zm0 0\" />\n//     </svg>\n//   );\n// }\n\nexport function GearIcon(props: IIconProps) {\n  const theme = React.useContext(ThemeContext);\n  const { size = \"24px\", color = theme.global.palette.Grey } = props;\n\n  return (\n    <svg  width={size}\n          height={size}\n          version=\"1.1\"\n          viewBox=\"0 0 512 512\"\n          fill={theme.global.colors[color] || color}\n    >\n      <path d=\"M424.5,216.5h-15.2c-12.4,0-22.8-10.7-22.8-23.4c0-6.4,2.7-12.2,7.5-16.5l9.8-9.6c9.7-9.6,9.7-25.3,0-34.9l-22.3-22.1  c-4.4-4.4-10.9-7-17.5-7c-6.6,0-13,2.6-17.5,7l-9.4,9.4c-4.5,5-10.5,7.7-17,7.7c-12.8,0-23.5-10.4-23.5-22.7V89.1  c0-13.5-10.9-25.1-24.5-25.1h-30.4c-13.6,0-24.4,11.5-24.4,25.1v15.2c0,12.3-10.7,22.7-23.5,22.7c-6.4,0-12.3-2.7-16.6-7.4l-9.7-9.6  c-4.4-4.5-10.9-7-17.5-7s-13,2.6-17.5,7L110,132c-9.6,9.6-9.6,25.3,0,34.8l9.4,9.4c5,4.5,7.8,10.5,7.8,16.9  c0,12.8-10.4,23.4-22.8,23.4H89.2c-13.7,0-25.2,10.7-25.2,24.3V256v15.2c0,13.5,11.5,24.3,25.2,24.3h15.2  c12.4,0,22.8,10.7,22.8,23.4c0,6.4-2.8,12.4-7.8,16.9l-9.4,9.3c-9.6,9.6-9.6,25.3,0,34.8l22.3,22.2c4.4,4.5,10.9,7,17.5,7  c6.6,0,13-2.6,17.5-7l9.7-9.6c4.2-4.7,10.2-7.4,16.6-7.4c12.8,0,23.5,10.4,23.5,22.7v15.2c0,13.5,10.8,25.1,24.5,25.1h30.4  c13.6,0,24.4-11.5,24.4-25.1v-15.2c0-12.3,10.7-22.7,23.5-22.7c6.4,0,12.4,2.8,17,7.7l9.4,9.4c4.5,4.4,10.9,7,17.5,7  c6.6,0,13-2.6,17.5-7l22.3-22.2c9.6-9.6,9.6-25.3,0-34.9l-9.8-9.6c-4.8-4.3-7.5-10.2-7.5-16.5c0-12.8,10.4-23.4,22.8-23.4h15.2  c13.6,0,23.3-10.7,23.3-24.3V256v-15.2C447.8,227.2,438.1,216.5,424.5,216.5z M336.8,256L336.8,256c0,44.1-35.7,80-80,80  c-44.3,0-80-35.9-80-80l0,0l0,0c0-44.1,35.7-80,80-80C301.1,176,336.8,211.9,336.8,256L336.8,256z\"/>\n    </svg>\n  );\n}\n\nexport function SubstackIcon(props: IIconProps) {\n  const theme = React.useContext(ThemeContext);\n  const { size = \"24px\", color = theme.global.palette.Grey } = props;\n\n  return (\n    <svg\n      role=\"img\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      fill={theme.global.colors[color] || color}\n    >\n      <title>Substack</title>\n      <path d=\"M22.539 8.242H1.46V5.406h21.08v2.836zM1.46 10.812V24L12 18.11 22.54 24V10.812H1.46zM22.54 0H1.46v2.836h21.08V0z\"/>\n    </svg>\n  );\n}\n","import {Box, Text, Tip} from \"grommet\";\nimport {LatencyIcon} from \"../ui/icons\";\nimport {TipContent} from \"../ui\";\nimport React from \"react\";\n\nexport default function BlockLatency(params: { latency: number; latencyPerBlock: number[] }) {\n    return (\n        <Box direction=\"row\" align=\"stretch\">\n            <Box\n                pad={{ left: \"xsmall\", right: \"small\" }}\n                justify=\"center\"\n                align=\"center\"\n            >\n                <LatencyIcon size=\"30px\" color=\"brand\" />\n            </Box>\n            <Box align=\"start\">\n                <Text size=\"small\" color=\"minorText\">\n                    {\"BLOCK LATENCY\"}\n                </Text>\n                <Tip\n                    // dropProps={{ align: { left: \"right\" }, margin: { left: \"small\" } }}\n                    content={\n                        <TipContent\n                            background={'background'}\n                            border={{ color: 'border' }}\n                            message={\n                                <Box direction={\"row\"}>\n                                    {params.latencyPerBlock.map((item, index) => (\n                                        <Box\n                                            key={`${index}`}\n                                            direction={\"column\"}\n                                            align={\"start\"}\n                                            justify={\"center\"}\n                                            margin={\"small\"}\n                                        >\n                                            <Text size={\"small\"} color={'text'}>Shard {index}</Text>\n                                            <Text size=\"small\" weight=\"bold\" color={'text'}>\n                                                {item.toFixed(2)}s\n                                            </Text>\n                                        </Box>\n                                    ))}\n                                </Box>\n                            }\n                        />\n                    }\n                >\n                    <Text size=\"small\" weight=\"bold\">\n                        {params.latency.toFixed(2)}s\n                    </Text>\n                </Tip>\n            </Box>\n        </Box>\n    );\n}","import React, {useEffect, useState} from \"react\";\nimport {config} from \"../../config\";\nimport {getCount} from \"../../api/client\";\nimport {Box, Text} from \"grommet\";\nimport {Transaction} from \"grommet-icons\";\nimport {formatNumber} from \"../ui\";\n\nexport default function TransactionsCount() {\n    const [count, setCount] = useState<string>(\"\");\n\n    useEffect(() => {\n        let tId = 0;\n        const getRes = async () => {\n            try {\n                let res = await Promise.all(\n                    config.availableShards.map((shardNumber) =>\n                        getCount([shardNumber, \"transactions\"])\n                    )\n                );\n                setCount(\n                    res\n                        .reduce((prev, cur) => {\n                            prev = prev + +cur.count;\n                            return prev;\n                        }, 0)\n                        .toString()\n                );\n            } catch (err) {\n                console.log(err);\n            }\n        };\n        getRes();\n        tId = window.setInterval(getRes, 30000);\n\n        return () => {\n            clearTimeout(tId);\n        };\n    }, []);\n\n    return (\n        <Box direction=\"row\" align=\"stretch\">\n            <Box\n                pad={{ left: \"xsmall\", right: \"small\" }}\n                justify=\"center\"\n                align=\"center\"\n            >\n                <Transaction size=\"32px\" color=\"brand\" />\n            </Box>\n            <Box align=\"start\">\n                <Text size=\"small\" color=\"minorText\">\n                    {\"TRANSACTION VOLUME\"}\n                </Text>\n                <Text size=\"small\" weight=\"bold\">\n                    {formatNumber(+count)}\n                </Text>\n            </Box>\n        </Box>\n    );\n}","import {useZPTExchangeRate} from \"../../hooks/useZPTExchangeRate\";\nimport {Box, Text} from \"grommet\";\nimport {LineChart} from \"grommet-icons\";\nimport {formatNumber} from \"../ui\";\nimport React from \"react\";\n\nexport default function ZPTPrice() {\n    const { lastPrice = 0, priceChangePercent = 0 } = useZPTExchangeRate();\n\n    return (\n        <Box direction=\"row\" align=\"stretch\">\n            <Box\n                pad={{ left: \"xsmall\", right: \"small\" }}\n                justify=\"center\"\n                align=\"center\"\n            >\n                <LineChart size=\"32px\" color=\"brand\" />\n            </Box>\n            <Box align=\"start\">\n                <Text size=\"small\" color=\"minorText\">\n                    {\"ZPT PRICE\"}\n                </Text>\n                <Box direction=\"row\" gap=\"xsmall\" align=\"baseline\">\n                    <Text size=\"small\" weight=\"bold\">TO THE MOON!</Text>\n                    {/* <Text size=\"small\" weight=\"bold\">\n                        $ {(+lastPrice).toFixed(4)}\n                    </Text> */}\n                    {/* <Text\n                        size=\"11px\"\n                        weight=\"bold\"\n                        color={priceChangePercent > 0 ? \"status-ok\" : \"#d23540\"}\n                    >\n                        ({priceChangePercent > 0 ? \"+\" : \"\"}\n                        {formatNumber(priceChangePercent)}%)\n                    </Text> */}\n                </Box>\n            </Box>\n        </Box>\n    );\n}","import {config} from \"../../config\";\nimport {Box, Text} from \"grommet\";\nimport {Cubes} from \"grommet-icons\";\nimport {formatNumber} from \"../ui\";\nimport React from \"react\";\n\nexport default function ShardCount() {\n    const { availableShards } = config\n    const count = availableShards.length || 0;\n\n    return (\n        <Box direction=\"row\" align=\"stretch\">\n            <Box\n                pad={{ left: \"xsmall\", right: \"small\" }}\n                justify=\"center\"\n                align=\"center\"\n            >\n                <Cubes size=\"32px\" color=\"brand\" />\n            </Box>\n            <Box align=\"start\">\n                <Text size=\"small\" color=\"minorText\">\n                    {\"SHARD COUNT\"}\n                </Text>\n                <Text size=\"small\" weight=\"bold\">\n                    {formatNumber(count)}\n                </Text>\n            </Box>\n        </Box>\n    );\n}","export const palette = {\n  WhiteGrey: \"#F4F7F9\",\n  LightGrey: \"#e7ecf7\",\n  Grey: \"#b1b1b1\",\n  CoolGray: \"#758796\",\n  DarkGray: '#55626d',\n  WhiteBlue: '#EFF8FF',\n  DarkBlue: '#375873',\n  Purple: \"#00AEE9\",\n  ElectricBlue: \"#00AEE9\",\n  ElectricBlueLight: \"#e8f3ff\",\n  WhiteGreen: '#dafef4',\n  MintGreen: \"#69FABD\",\n  DarkGreen: '#019267',\n  MidnightBlue: \"#1B295E\",\n  WhiteBrown: '#f7eacc',\n  GoldenBrown: '#b47d00'\n};\n\nexport const theme = {\n  global: {\n    focus: {\n      border: {\n        color: \"transparent\",\n      },\n    },\n    colors: {\n      text: palette.DarkGray,\n      brand: palette.Purple,\n      background: \"white\",\n      backgroundBack: \"#f3f3f3\",\n      backgroundEmptyIcon: \"#e8e6e6\",\n      backgroundDropdownItem: \"#fdf9f9\",\n      backgroundBackEmpty: \"#f3f3f3\",\n      border: palette.LightGrey,\n      headerText: \"#ffffff\",\n      majorText: palette.MidnightBlue,\n      minorText: palette.CoolGray,\n      iconMain: palette.ElectricBlue,\n      tableRow: palette.ElectricBlueLight,\n      tableRowHover: palette.WhiteGrey,\n      mintGreen: palette.MintGreen,\n      errorText: \"#ff0000\",\n      successText: \"#14a266\",\n      backgroundError: \"rgba(230, 0, 0, 0.4)\",\n      backgroundSuccess: \"rgb(106 250 188 / 44%)\",\n      backgroundToaster: \"rgba(0, 174, 233, 0.7)\",\n      backgroundTip: '#005ca7',\n      backgroundMark: palette.WhiteBlue,\n      warning: palette.GoldenBrown,\n      warningBackground: palette.WhiteBrown,\n      success: palette.DarkGreen,\n      successBackground: palette.WhiteGreen,\n    },\n    palette,\n    select: {\n      clear: {\n        color: \"brand\",\n      },\n    },\n    font: {\n      family: \"Nunito\",\n      // family: \"Fira Sans\",\n      size: \"14px\",\n      height: \"20px\",\n    },\n  },\n  anchor: {\n    textDecoration: \"none\",\n    hover: {\n      textDecoration: \"none\",\n    },\n  },\n  button: {\n    // backgroundColor: \"transparent\",\n    primary: {\n      color: 'backgroundDropdownItem', // Bug in grommet library, it should be background-color\n    },\n    color: \"text\",\n    borderColor: \"border\",\n    border: {\n      radius: '4px',\n      width: '1px',\n      color: 'border'\n    }\n  },\n  dataTable: {\n    border: {\n      header: {\n        color: 'border'\n      }\n    },\n    body: {\n      extend: (props: any) => `\n        \n        tr {\n          th, td {\n            padding: 16px 8px;\n          }\n          td:last-child {\n            text-align: right;\n          }\n        }\n\n        tr:hover {\n          background-color: ${props.theme.global.colors.tableRowHover};\n        }\n      `\n    },\n  },\n};\n\nexport const darkTheme = {\n  ...theme,\n  select: {\n    container: {\n      extend: () => [{ color: \"#ffffff\", background: palette.MidnightBlue }],\n    },\n  },\n  global: {\n    focus: {\n      border: {\n        color: \"transparent\",\n      },\n    },\n    hover: {\n      background: \"#111f4e\",\n    },\n    colors: {\n      brand: palette.MintGreen,\n      background: palette.MidnightBlue,\n      backgroundBack: \"#030921\",\n      backgroundDropdownItem: \"#111f4e\",\n      backgroundEmptyIcon: \"#324a92\",\n      border: palette.DarkBlue,\n      headerText: \"#ffffff\",\n      majorText: palette.MidnightBlue,\n      minorText: \"#5f98c7\",\n      iconMain: palette.ElectricBlue,\n      tableRow: \"#122852\",\n      tableRowHover: '#1b3e7f',\n      mintGreen: palette.MintGreen,\n      errorText: \"#ff5858\",\n      successText: \"#00d67b\",\n      backgroundError: \"rgba(230, 0, 0, 0.4)\",\n      backgroundSuccess: \"rgb(106 250 188 / 23%)\",\n      backgroundToaster: \"rgb(93 111 181 / 70%)\",\n      selected: \"#3c53a2\",\n      backgroundTip: '#22577E',\n      backgroundMark: '#3660ad',\n      warning: palette.GoldenBrown,\n      warningBackground: palette.WhiteBrown,\n      success: palette.DarkGreen,\n      successBackground: palette.WhiteGreen,\n    },\n    palette,\n    font: {\n      family: \"Nunito\",\n      // family: \"Fira Sans\",\n      size: \"14px\",\n      height: \"20px\",\n    },\n  },\n};\n","import dayjs from \"dayjs\";\nimport {palette} from \"../../theme\";\n\nexport const getChartOptions = (themeMode: 'light' | 'dark', points: any) => {\n    const [minPoint] = [...points]\n        .sort((a: { count: number; }, b: { count: number; }) => a.count - b.count)\n    let minY = minPoint ? minPoint.count : 0\n    const minPointLog = Math.floor(Math.log10(minY))\n    minY = minY - (minY % Math.pow(10, minPointLog))\n\n    const ticksColor = themeMode === 'light' ? palette.DarkGray : palette.WhiteGrey\n    const tooltipColor = themeMode === 'light' ? '#3f4850' : palette.WhiteGrey\n    const tooltipBorderColor = themeMode === 'light' ? '#3f4850' : palette.DarkBlue\n    const tooltipBackground = themeMode === 'light' ? 'rgba(244, 247, 249, 0.85)' : 'rgba(27, 41, 94, 0.95)'\n\n    return {\n        responsive: true,\n        animation: false,\n        animations: {\n            colors: false,\n            x: false,\n        },\n        tooltips: {\n            mode: 'index',\n            intersect: false\n        },\n        hover: {\n            intersect: false\n        },\n        plugins: {\n            legend: {\n                display: false,\n            },\n            title: {\n                display: false,\n            },\n            // https://www.chartjs.org/docs/latest/configuration/tooltip.html\n            tooltip: {\n                intersect: false,\n                displayColors: false, // Removes colored square icon\n                caretPadding: 8,\n                caretSize: 8,\n                cornerRadius: 4,\n                titleSpacing: 4,\n                titleFont: { weight: 400, size: 10 },\n                bodyFont: { weight: 'bold' },\n                backgroundColor: tooltipBackground,\n                borderColor: tooltipBorderColor,\n                borderWidth: 1,\n                titleColor: tooltipColor,\n                bodyColor: tooltipColor\n            }\n        },\n        scales: {\n            x: {\n                grid: {\n                    display: false,\n                    drawBorder: false,\n                },\n                ticks: {\n                    color: ticksColor,\n                    maxRotation: 0,\n                    minRotation: 0,\n                    align: 'start',\n                    callback: function(value: string, index: any, ticks: any) {\n                        const item = points[index]\n                        if (index === 0 || index === Math.floor((ticks.length - 1) / 2)) {\n                            return dayjs(item.timestamp).format(\"MMM D\")\n                        }\n                        // TODO: chartJs cannot render last item - it does not fit the container\n                        // Render pre-last item and set text of last item\n                        if(index === ticks.length - 2) {\n                            return dayjs(points[index + 1].timestamp).format(\"MMM D\")\n                        }\n                        return '';\n                    }\n                },\n            },\n            y: {\n                min: minY,\n                grid: {\n                    display: false,\n                    drawBorder: false,\n                },\n                ticks: {\n                    color: ticksColor,\n                    callback: function(value: string, index: any, ticks: any) {\n                        if (index === 0 || index === ticks.length - 1) {\n                            return Intl.NumberFormat('en-US', {\n                                notation: \"compact\",\n                                maximumFractionDigits: 1\n                            }).format(+value);\n                        }\n                        return '';\n                    }\n                }\n            }\n        },\n        tension: 0.4, // Curve line\n        borderWidth: 1,\n    };\n}","import dayjs from \"dayjs\";\nimport {useThemeMode} from \"../../hooks/themeSwitcherHook\";\nimport React, {useEffect, useState} from \"react\";\nimport {getTransactionCountLast14Days} from \"../../api/client\";\nimport {Box, Spinner, Text} from \"grommet\";\nimport {Line as LineChartJs} from \"react-chartjs-2\";\nimport {\n    BarElement,\n    CategoryScale,\n    Chart as ChartJS,\n    Legend,\n    LinearScale,\n    LineElement,\n    PointElement,\n    Title,\n    Tooltip\n} from \"chart.js\";\nimport {getChartOptions} from \"./common\";\nimport {palette} from \"../../theme\";\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n    PointElement,\n    LineElement\n);\n\ninterface TxHitoryItem {\n    timestamp: string;\n    count: string;\n}\n\nexport default function BlockTransactionsHistory() {\n    const themeMode = useThemeMode();\n    const [result, setResult] = useState<TxHitoryItem[]>([]);\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n\n    useEffect(() => {\n        const getElements = async () => {\n            setIsLoading(true);\n            const res = await getTransactionCountLast14Days();\n            setResult(res);\n            setIsLoading(false);\n        };\n\n        getElements();\n    }, []);\n\n    const dataTest = {\n        labels: result.map((i) => dayjs(i.timestamp).format(\"dddd, MMMM DD YYYY\")),\n        datasets: [\n            {\n                label: 'Transactions',\n                data: result.map((i) => +i.count),\n                borderColor: themeMode === 'light' ? palette.DarkGray : palette.MintGreen,\n                borderWidth: 1,\n                backgroundColor: 'white',\n                pointRadius: 0,\n                pointHoverRadius: 8,\n                pointBorderWidth: 0,\n                pointBorderColor: 'transparent',\n                pointHoverBackgroundColor: themeMode === 'light' ? 'rgba(85, 98, 109, 0.4)' : 'rgba(105, 250, 189, 0.4)',\n            }\n        ],\n    };\n\n    return (\n        <Box>\n            <Text size=\"small\" color=\"minorText\" style={{ flex: \"1 0 auto\" }}>\n                {\"TRANSACTION HISTORY\"}\n            </Text>\n            <Box style={{ flex: \"1 1 100%\", marginTop: \"10px\" }}>\n                {isLoading && (\n                    <Box justify=\"center\" align=\"center\" height=\"110px\">\n                        <Spinner />\n                    </Box>\n                )}\n                {!isLoading && (\n                    // @ts-ignore\n                    <LineChartJs options={getChartOptions(themeMode, result)} data={dataTest} height=\"110px\" />\n                )}\n            </Box>\n        </Box>\n    );\n}","import {useThemeMode} from \"../../hooks/themeSwitcherHook\";\nimport React, {useEffect, useState} from \"react\";\nimport {getWalletsCountLast14Days} from \"../../api/client\";\nimport dayjs from \"dayjs\";\nimport {useMediaQuery} from \"react-responsive\";\nimport {Box, Spinner, Text} from \"grommet\";\n\nimport {Line as LineChartJs} from \"react-chartjs-2\";\nimport {\n    BarElement,\n    CategoryScale,\n    Chart as ChartJS,\n    Legend,\n    LinearScale,\n    LineElement,\n    PointElement,\n    Title,\n    Tooltip\n} from \"chart.js\";\nimport {getChartOptions} from \"./common\";\nimport {palette} from \"../../theme\";\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n    PointElement,\n    LineElement\n);\n\ninterface WalletHitoryItem {\n    date: string;\n    count: string;\n}\n\nexport default function WalletsHistory() {\n    const themeMode = useThemeMode();\n    const [result, setResult] = useState<WalletHitoryItem[]>([]);\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n\n    useEffect(() => {\n        const getElements = async () => {\n            setIsLoading(true);\n            const res = await getWalletsCountLast14Days();\n            setResult(res);\n            setIsLoading(false);\n        };\n\n        getElements();\n    }, []);\n\n    const data = {\n        labels: result.map((i) => dayjs(i.date).format(\"dddd, MMMM DD YYYY\")),\n        datasets: [{\n            label: \"Active wallets\",\n            data: result.map((i) => +i.count),\n            borderColor: themeMode === 'light' ? palette.DarkGray : palette.MintGreen,\n            borderWidth: 1,\n            backgroundColor: 'white',\n            pointRadius: 0,\n            pointHoverRadius: 8,\n            pointBorderWidth: 0,\n            pointBorderColor: 'transparent',\n            pointHoverBackgroundColor: themeMode === 'light' ? 'rgba(85, 98, 109, 0.4)' : 'rgba(105, 250, 189, 0.4)',\n        }]\n    }\n\n    let min = Number.MAX_SAFE_INTEGER;\n    result.forEach(e=>{\n        if (min > +e.count) {\n            min = +e.count;\n        }\n    });\n\n    const isTabletOrMobile = useMediaQuery({ query: '(max-width: 960px)' })\n    const items = result.map((item) => {\n        return {\n            ...item,\n            timestamp: item.date\n        }\n    })\n\n    return (\n        <Box>\n            <Box direction={'row'}>\n                <Text size=\"small\" color=\"minorText\" style={{ flex: \"1 0 auto\" }}>\n                    {\"ACTIVE WALLETS\"}\n                </Text>\n                {/*{!isTabletOrMobile &&*/}\n                {/*    <Box direction={'row'}>*/}\n                {/*        By&nbsp;*/}\n                {/*        <a href={`https://harmony-transactions.vercel.app/`} target={'_blank'}>*/}\n                {/*            <Text color={'brand'} size={'small'}>Metrics DAO</Text>*/}\n                {/*        </a>*/}\n                {/*    </Box>*/}\n                {/*}*/}\n            </Box>\n            <Box style={{ flex: \"1 1 100%\", marginTop: \"10px\" }}>\n                {isLoading && (\n                    <Box justify=\"center\" align=\"center\" height=\"110px\">\n                        <Spinner />\n                    </Box>\n                )}\n                {!isLoading && (\n                // @ts-ignore\n                  <LineChartJs options={getChartOptions(themeMode, items)} data={data} height=\"110px\" />\n                )}\n            </Box>\n        </Box>\n    );\n}\n","import React from \"react\";\nimport { Box } from \"grommet\";\nimport { BasePage } from \"src/components/ui\";\nimport styled from \"styled-components\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { breakpoints } from \"src/responsive/breakpoints\";\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  PointElement,\n    LineElement\n} from 'chart.js';\nimport { useThemeMode } from \"../../hooks/themeSwitcherHook\";\nimport BlockLatency from \"./BlockLatency\";\nimport TransactionsCount from \"./TransactionsCount\";\nimport ZPTPrice from \"./ZPTPrice\";\nimport ShardCount from \"./ShardsCount\";\nimport BlockTransactionsHistory from \"./TransactionsHistory\";\nimport WalletsHistory from \"./WalletsHistory\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  PointElement,\n    LineElement\n);\n\nexport const Metrics = (params: {\n  latency: number;\n  latencyPerBlock: number[];\n}) => {\n  const isLessLaptop = useMediaQuery({ query: '(max-width: 852px)' });\n  const isLessTablet = useMediaQuery({ query: `(max-width: ${breakpoints.tablet})` });\n  const isLessMobileM = useMediaQuery({ query: '(max-width: 468px)' });\n\n  return (\n    <BasePage\n      direction=\"row\"\n      justify=\"between\"\n      wrap={isLessLaptop}\n      margin={{ bottom: \"medium\" }}\n      style={{ width: '100%' }}\n    >\n      <Box\n        direction={'row'}\n        style={{ flexWrap: 'wrap', flexBasis: isLessLaptop ? '100%' : '50%'}}\n      >\n        <Box\n          justify=\"between\"\n          pad={{ right: isLessMobileM ? \"0\" : \"medium\" }}\n          border={{\n            size: isLessMobileM ? \"0\" : \"xsmall\",\n            side: \"right\",\n            color: \"border\",\n          }}\n          style={{\n            height: isLessMobileM ? \"auto\" : \"140px\",\n            flex: 1\n          }}\n          gap={isLessMobileM ? \"small\" : \"0\"}\n        >\n          <ZPTPrice />\n          {!isLessMobileM && <Line horizontal />}\n          <TransactionsCount />\n        </Box>\n        <Box\n          justify=\"between\"\n          pad={{ left: \"medium\", right: isLessLaptop ? \"0\" : \"medium\" }}\n          border={{\n            size: isLessLaptop ? \"0\" : \"xsmall\",\n            side: \"right\",\n            color: \"border\",\n          }}\n          style={{\n            height: isLessMobileM ? \"auto\" : \"140px\",\n            flex: 1\n          }}\n        >\n          <ShardCount />\n          {!isLessMobileM && <Line horizontal />}\n          <BlockLatency\n            latency={params.latency}\n            latencyPerBlock={params.latencyPerBlock}\n          />\n        </Box>\n        {isLessLaptop && (\n          <Line\n            horizontal\n            style={{ marginTop: isLessTablet ? \"16px\" : \"24px\" }}\n          />\n        )}\n      </Box>\n      <Box\n        direction={'row'}\n        justify={'between'}\n        wrap={isLessLaptop}\n        pad={{ left: 'medium', top: isLessLaptop ? 'medium' : 'none' }}\n        gap={'large'}\n        style={{ flexWrap: 'wrap', flexBasis: isLessLaptop ? '100%' : '50%' }}\n      >\n        <Box style={{flex: isLessMobileM ? 'unset' : 1}}>\n          <BlockTransactionsHistory />\n        </Box>\n        <Box style={{flex: isLessMobileM ? 'unset' : 1}}>\n          <WalletsHistory />\n        </Box>\n      </Box>\n    </BasePage>\n  );\n};\n\nconst Line = styled.div<{ horizontal?: boolean; vertical?: boolean }>`\n  display: flex;\n  width: ${(props) => (props.horizontal ? \"100%\" : \"1px\")};\n  height: ${(props) => (props.vertical && !props.horizontal ? \"100%\" : \"1px\")};\n  background-color: ${(props) => props.theme.global.colors.border};\n`;\n","import React from \"react\";\nimport { Box, DataTable, Spinner, Text } from \"grommet\";\nimport { Block } from \"src/types\";\nimport { useHistory } from \"react-router-dom\";\nimport { formatNumber } from \"src/components/ui\";\nimport { DateTime } from \"../../components/ui/DateTime\";\n\nfunction getColumns(props: any) {\n  const { history } = props;\n  return [\n    {\n      property: \"shard\",\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Shard\n        </Text>\n      ),\n      render: (data: Block) => (\n        <Text\n          size=\"small\"\n          onClick={() => history.push(`/blocks/shard/${data.shardNumber}`)}\n          style={{ cursor: \"pointer\" }}\n          color={\"brand\"}\n        >\n          {data.shardNumber}\n        </Text>\n      ),\n    },\n    {\n      property: \"number\",\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Height\n        </Text>\n      ),\n      render: (data: Block) => (\n        <Text\n          size=\"small\"\n          style={{ cursor: \"pointer\" }}\n          onClick={() => {\n            history.push(`/block/${data.hash}`);\n          }}\n          color=\"brand\"\n        >\n          {formatNumber(+data.number)}\n        </Text>\n      ),\n    },\n    {\n      property: \"transactions\",\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Transactions\n        </Text>\n      ),\n      render: (data: Block) => (\n        <Text size=\"small\">\n          {data.transactions.length + data.stakingTransactions.length}\n        </Text>\n      ),\n    },\n    {\n      property: \"timestamp\",\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Timestamp\n        </Text>\n      ),\n      render: (data: Block) => (\n        <Box direction=\"row\" justify=\"end\" gap=\"xsmall\">\n          <DateTime\n            date={data.timestamp}\n          />\n        </Box>\n      ),\n    },\n  ];\n}\n\nexport const LatestBlocksTable = (params: { blocks: Block[] }) => {\n  const history = useHistory();\n\n  if (!params.blocks.length) {\n    return (\n      <Box style={{ height: \"700px\" }} justify=\"center\" align=\"center\">\n        <Spinner />\n      </Box>\n    );\n  }\n\n  return (\n    <Box style={{ overflow: \"auto\" }}>\n      <DataTable\n        className={\"g-table-header\"}\n        style={{ width: \"100%\", minWidth: \"620px\" }}\n        columns={getColumns({ history })}\n        data={params.blocks}\n        step={10}\n        border={{\n          header: false,\n          body: {\n            color: \"border\",\n            side: \"bottom\",\n            size: \"1px\",\n          },\n        }}\n        background={{header: 'unset'}}\n      />\n    </Box>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport { Box, DataTable, Spinner, Text } from \"grommet\";\nimport { RPCTransactionHarmony } from \"src/types\";\nimport { useHistory } from \"react-router-dom\";\nimport { Address } from \"src/components/ui\";\nimport { getTransactions } from \"src/api/client\";\nimport { FormNextLink } from \"grommet-icons\";\nimport { DateTime } from \"../../components/ui\";\nimport { getTabHidden, useWindowFocused } from \"src/hooks/useWindowFocusHook\";\nimport { config } from \"../../config\";\n\nfunction getColumns(props: any) {\n  const { history } = props;\n  return [\n    {\n      property: \"shard\",\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Shard\n        </Text>\n      ),\n      render: (data: RPCTransactionHarmony) => (\n        <Box direction=\"row\" gap=\"3px\" align=\"center\">\n          <Text size=\"small\">{data.shardID}</Text>\n          <FormNextLink\n            size=\"small\"\n            color=\"brand\"\n            style={{ marginBottom: \"2px\" }}\n          />\n          <Text size=\"small\">{data.toShardID}</Text>\n        </Box>\n      ),\n    },\n    {\n      property: \"hash\",\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Hash\n        </Text>\n      ),\n      render: (data: RPCTransactionHarmony) => (\n        <Text size=\"small\" style={{ cursor: \"pointer\" }} color=\"brand\">\n          <Address\n            type={\"tx\"}\n            address={data.hash}\n            isShort\n            noHistoryPush\n            hideCopyBtn\n          />\n        </Text>\n      ),\n    },\n    {\n      property: \"from\",\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          From\n        </Text>\n      ),\n      render: (data: RPCTransactionHarmony) => (\n        <Address address={data.from} isShort hideCopyBtn />\n      ),\n    },\n    {\n      property: \"to\",\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          To\n        </Text>\n      ),\n      render: (data: RPCTransactionHarmony) => (\n        <Address address={data.to} isShort hideCopyBtn />\n      ),\n    },\n    {\n      property: \"age\",\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Timestamp\n        </Text>\n      ),\n      render: (data: RPCTransactionHarmony) => (\n        <DateTime\n          date={new Date(data.timestamp)}\n        />\n      ),\n    },\n  ];\n}\n\nconst filter = {\n  offset: 0,\n  limit: 10,\n  orderBy: \"block_number\",\n  orderDirection: \"desc\",\n  value: 0,\n  filters: [],\n};\n\nexport function LatestTransactionsTable() {\n  const hidden = useWindowFocused();\n\n  const history = useHistory();\n  const [transactions, setTransactions] = useState<RPCTransactionHarmony[]>([]);\n  const { availableShards } = config\n\n  useEffect(() => {\n    let tId = 0 as any;\n    const exec = async () => {\n      try {\n        const hidden = getTabHidden();\n        if (hidden) {\n          // tab is not focused \n          return;\n        }\n        let trxs = await Promise.all(\n          availableShards.map((shardNumber) =>\n            getTransactions([shardNumber, filter])\n          )\n        );\n\n        const trxsList = trxs.reduce((prev, cur) => {\n          prev = [...prev, ...cur];\n          return prev;\n        }, []);\n\n        setTransactions(\n          trxsList\n            .sort((a, b) => (a.timestamp < b.timestamp ? 1 : -1))\n            .slice(0, 10) as RPCTransactionHarmony[]\n        );\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    exec();\n    tId = window.setInterval(exec, 3000);\n\n    return () => {\n      clearTimeout(tId);\n    };\n  }, []);\n\n  if (!transactions.length) {\n    return (\n      <Box style={{ height: \"700px\" }} justify=\"center\" align=\"center\">\n        <Spinner />\n      </Box>\n    );\n  }\n\n  return (\n    <Box style={{ overflow: \"auto\" }}>\n      <DataTable\n        className={\"g-table-header g-table-header-plain\"}\n        style={{ width: \"100%\", minWidth: \"620px\" }}\n        columns={getColumns({ history })}\n        data={transactions}\n        step={10}\n        border={{\n          header: false,\n          body: {\n            color: \"border\",\n            side: \"bottom\",\n            size: \"1px\",\n          },\n        }}\n        background={{header: 'unset'}}\n      />\n    </Box>\n  );\n}\n","import { Block } from \"src/types\";\n\nconst getLatency = (blocks: Block[]) => {\n  const blocksTimestamp = blocks\n    .map((b) => new Date(b.timestamp).getTime())\n    .sort((a, b) => (a < b ? -1 : 1));\n\n  const diffs = [];\n\n  for (let i = blocksTimestamp.length - 1; i > 0; i--) {\n    diffs.push(blocksTimestamp[i] - blocksTimestamp[i - 1]);\n  }\n\n  return diffs.reduce((acc, t) => acc + t, 0) / diffs.length / 1000;\n};\n\nexport const calculateSecondPerBlocks = (\n  all_blocks: Array<Block[]>\n): number => {\n  return (\n    all_blocks.map(getLatency).reduce((acc, t) => acc + t, 0) /\n    all_blocks.length\n  );\n};\n\nexport const calculateSecondsPerBlock = (\n  all_blocks: Array<Block[]>\n): number[] => {\n  return all_blocks.map(getLatency);\n};\n","import { Box, BoxProps, TextInput } from \"grommet\";\nimport { CaretDownFill, CaretUpFill, Search } from \"grommet-icons\";\nimport React, { Fragment } from \"react\";\nimport styled, { css } from \"styled-components\";\n\nexport interface IDropdownProps<T = {}> {\n  defaultValue?: T;\n  value?: T;\n  className?: string;\n  padDataList?: BoxProps[\"pad\"];\n  keyField: keyof T;\n  renderValue: (dataItem: T) => JSX.Element;\n  renderItem: (dataItem: T) => JSX.Element;\n  items: T[];\n  isOpen?: boolean;\n  searchable?: boolean | ((dataItem: T, searchText: string) => boolean);\n  group?: {\n    groupBy: keyof T;\n    renderGroupItem: () => JSX.Element;\n  }[];\n  onToggle?: (isOpen: boolean) => void;\n  onClickItem?: (dataItem: T) => void;\n  themeMode: \"dark\" | \"light\";\n  itemHeight?: string;\n  itemStyles: React.CSSProperties;\n}\n\nconst DropdownWrapper = styled(Box)`\n  width: 100%;\n  height: 37px;\n  padding: 5px;\n  border-radius: 8px;\n  margin: 5px;\n  position: relative;\n`;\n\nconst Value = styled(Box)`\n  width: 100%;\n`;\n\nconst DataList = styled(Box)`\n  position: absolute;\n  max-height: 300px;\n  overflow: auto;\n  width: 100%;\n  top: 38px;\n  border-radius: 8px;\n  left: 0px;\n  z-index: 1;\n`;\n\nconst DataItem = styled(Box)<{\n  itemHeight?: string;\n}>`\n\n  ${(props) => {\n    return css`\n      min-height: ${props.itemHeight || 'unset'};\n    `;\n  }}\n`;\n\nexport class Dropdown<T = {}> extends React.Component<\n  IDropdownProps<T>,\n  { isOpen: boolean; searchText: string }\n> {\n  public element: React.RefObject<HTMLDivElement>;\n\n  public initValue: T = this.props.defaultValue || this.props.items[0];\n\n  private get selectedValue() {\n    return this.props.value || this.initValue;\n  }\n\n  public state = {\n    isOpen: this.props.isOpen || false,\n    searchText: \"\",\n  };\n\n  constructor(props: any) {\n    super(props);\n\n    this.element = React.createRef();\n  }\n\n  componentDidMount() {\n    document.body.addEventListener(\"click\", this.handleClickBody as any);\n  }\n\n  componentWillUnmount() {\n    document.body.removeEventListener(\"click\", this.handleClickBody as any);\n  }\n\n  setOpened = (isOpen: boolean) => {\n    this.setState({ ...this.state, isOpen });\n    if (this.props.onToggle) {\n      this.props.onToggle(isOpen)\n    }\n  }\n\n  handleClickBody = (e: React.MouseEvent<HTMLElement>) => {\n    if (!(this.element && this.element.current && this.element.current.contains(e.target as Node))) {\n      this.setOpened(false)\n    }\n  };\n\n  onClickItem = (item: T, evt: React.MouseEvent<HTMLDivElement>) => {\n    this.initValue = item;\n\n    if (this.props.onClickItem) {\n      this.props.onClickItem(item);\n    }\n\n    // this.setOpened(false)\n  };\n\n  renderGroupItems() {\n    const {\n      group = [],\n      searchable,\n      // itemHeight = \"47px\",\n      itemStyles = {},\n    } = this.props;\n\n    return group.map((groupItem) => {\n      const items = this.props.items\n        .filter((item) => item[groupItem.groupBy])\n        .filter((item) =>\n          searchable\n            ? typeof searchable === \"function\"\n              ? searchable(item, this.state.searchText)\n              : true // TODO hardcode\n            : true\n        );\n\n      return items.length ? (\n        <Fragment key={String(groupItem.groupBy)}>\n          <Fragment>{groupItem.renderGroupItem()}</Fragment>\n          {items.map((item, index) => (\n            <DataItem\n              key={`${item[this.props.keyField] || index}`}\n              background={\"backgroundDropdownItem\"}\n              onClick={(evt) => this.onClickItem(item, evt)}\n              itemHeight={this.props.itemHeight}\n              style={{ ...itemStyles }}\n            >\n              {this.props.renderItem(item)}\n            </DataItem>\n          ))}\n        </Fragment>\n      ) : null;\n    });\n  }\n\n  render() {\n    const {\n      group = [],\n      searchable,\n      themeMode,\n      // itemHeight = \"47px\",\n      itemStyles = {},\n      padDataList = \"small\",\n    } = this.props;\n\n    return (\n      <DropdownWrapper\n        className={this.props.className}\n        ref={this.element}\n        border={{ size: \"xsmall\", color: \"border\" }}\n      >\n        <Value\n          onClick={() => {\n            this.setOpened(!this.state.isOpen)\n          }}\n          direction={\"row\"}\n          flex\n        >\n          <Box flex>{this.props.renderValue(this.selectedValue)}</Box>\n          {this.state.isOpen ? (\n            <CaretUpFill\n              onClick={(e) => {\n                console.log(\"CLICK\");\n                e.stopPropagation();\n                this.setOpened(false)\n              }}\n            />\n          ) : (\n            <CaretDownFill\n              onClick={(e) => {\n                e.stopPropagation();\n                this.setOpened(true)\n              }}\n            />\n          )}\n        </Value>\n        {this.state.isOpen ? (\n          <DataList\n            background=\"background\"\n            border={{ size: \"xsmall\", color: \"border\" }}\n            pad={padDataList}\n          >\n            {searchable ? (\n              <TextInput\n                value={this.state.searchText}\n                onChange={(evt: React.ChangeEvent<HTMLInputElement>) => {\n                  this.setState({\n                    ...this.state,\n                    searchText: evt.currentTarget.value,\n                  });\n                }}\n                color=\"red\"\n                icon={<Search color=\"brand\" />}\n                style={{\n                  backgroundColor:\n                    themeMode === \"light\" ? \"white\" : \"transparent\",\n                  fontWeight: 500,\n                }}\n                placeholder=\"Search by symbol, token address\"\n              />\n            ) : null}\n            {group.length\n              ? this.renderGroupItems()\n              : this.props.items.map((item, index) => (\n                  <DataItem\n                    key={`${item[this.props.keyField] || index}`}\n                    onClick={(evt) => this.onClickItem(item, evt)}\n                    itemHeight={this.props.itemHeight}\n                    style={{ ...itemStyles }}\n                  >\n                    {this.props.renderItem(item)}\n                  </DataItem>\n                ))}\n          </DataList>\n        ) : null}\n      </DropdownWrapper>\n    );\n  }\n}\n","import { Box } from \"grommet\";\nimport React from \"react\";\nimport { useThemeMode } from \"src/hooks/themeSwitcherHook\";\nimport { Dropdown } from \"../dropdown/Dropdown\";\nimport { config } from \"../../config\";\n\nexport function ShardDropdown(props: {\n  allShardsAvailable?: boolean;\n  selected: string;\n  onClick: (selected: string) => void;\n}) {\n  const themeMode = useThemeMode();\n  const { availableShards } = config\n\n  return (\n    <Dropdown\n      themeMode={themeMode}\n      itemHeight={\"0px\"}\n      padDataList={\"none\"}\n      items={\n        [props.allShardsAvailable\n          ? { value: \"All Shards\" }\n          : undefined,\n          ...(availableShards.map((item) => ({ value: item, })) || []),\n        ].filter((_) => _) as { value: string }[]\n      }\n      renderValue={(dataItem) => (\n        <Box justify={\"center\"} style={{ paddingTop: \"2px\", paddingLeft: '4px' }}>\n          {dataItem.value === \"All Shards\"\n            ? dataItem.value\n            : `Shard ${dataItem.value}`}\n        </Box>\n      )}\n      renderItem={(dataItem) => (\n        <Box\n          direction={\"row\"}\n          align={\"baseline\"}\n          style={{ \n            paddingLeft: \"8px\",\n            marginBottom: \"5px\",\n            marginTop: dataItem.value === \"All Shards\" ? \"5px\" : \"0px\",\n          }}\n        >\n          {dataItem.value === \"All Shards\"\n\n            ? dataItem.value\n            : `Shard ${dataItem.value}`}\n        </Box>\n      )}\n      onClickItem={(item) => props.onClick(item.value)}\n      value={{ value: props.selected }}\n      itemStyles={{}}\n      keyField={\"value\"}\n    />\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Box, Text } from \"grommet\";\nimport { Button } from \"src/components/ui\";\nimport { useHistory } from \"react-router-dom\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { breakpoints } from \"src/responsive/breakpoints\";\nimport { BaseContainer, BasePage } from \"src/components/ui\";\nimport { Metrics } from \"src/components/metrics\";\nimport { LatestBlocksTable } from \"./LatestBlocksTable\";\nimport { LatestTransactionsTable } from \"./LatestTransactionsTable\";\nimport { Block } from \"src/types\";\nimport { getBlocks } from \"src/api/client\";\nimport { calculateSecondPerBlocks, calculateSecondsPerBlock } from \"./helpers\";\nimport { ShardDropdown } from \"src/components/ui/ShardDropdown\";\nimport { getTabHidden, useWindowFocused } from \"src/hooks/useWindowFocusHook\";\nimport { config } from \"../../config\";\n\nconst filter = {\n  offset: 0,\n  limit: 10,\n  orderBy: \"number\",\n  orderDirection: \"desc\",\n  value: 0,\n  filters: [],\n};\n\nconst ColumnHeader = (props: { children: JSX.Element }) => {\n  return <Box\n    height={'62px'}\n    justify={\"center\"}\n    pad={'16px'}\n    border={{ size: \"xsmall\", side: \"bottom\" }}\n  >\n    {props.children}\n  </Box>\n}\n\nexport function MainPage() {\n  const focus = useWindowFocused();\n\n  const history = useHistory();\n  const isLessDesktop = useMediaQuery({ maxDeviceWidth: breakpoints.desktop });\n\n  const [selectedShard, setSelectedShard] = useState<string>(\"0\");\n  const [blocks, setBlocks] = useState<Block[]>([]);\n  const [blockLatency, setBlockLatency] = useState<number>(2.01);\n\n  const [blockLatencyMap, setBlockLatencyMap] = useState<number[]>([2.01]);\n  const { availableShards } = config\n\n  useEffect(() => {\n    let tId = 0 as any;\n    const exec = async () => {\n      try {\n        if (getTabHidden()) {\n          // ignore if not focused, we don't load blocks ...\n          return;\n        }; \n        let allBlocks = [];\n        let blocks = await Promise.all(\n          selectedShard === \"All Shards\"\n            ? availableShards.map((shardNumber) =>\n                getBlocks([+shardNumber, filter])\n              )\n            : [getBlocks([+selectedShard, filter])]\n        );\n\n        if (selectedShard === \"All Shards\") {\n          allBlocks = blocks;\n        } else {\n          allBlocks = await Promise.all(\n            availableShards.map((shardNumber) =>\n              getBlocks([+shardNumber, filter])\n            )\n          );\n        }\n\n        const blocksList = blocks.reduce((prev, cur, index) => {\n          prev = [\n            ...prev,\n            ...cur.map((item) => ({\n              ...item,\n              shardNumber:\n                selectedShard === \"All Shards\"\n                  ? +availableShards[index]\n                  : +selectedShard,\n            })),\n          ];\n          return prev;\n        }, []);\n\n        setBlocks(\n          blocksList\n            .sort((a, b) => (a.timestamp < b.timestamp ? 1 : -1))\n            .slice(0, 10)\n        );\n\n        setBlockLatency(calculateSecondPerBlocks(allBlocks));\n        setBlockLatencyMap(calculateSecondsPerBlock(allBlocks));\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    exec();\n    tId = window.setInterval(exec, 3000);\n\n    return () => {\n      clearTimeout(tId);\n    };\n  }, [selectedShard]);\n\n  return (\n    <BaseContainer pad=\"0\">\n      <Metrics latency={blockLatency} latencyPerBlock={blockLatencyMap} />\n      <Box direction={isLessDesktop ? \"column\" : \"row\"} gap=\"medium\">\n        <BasePage style={{ flex: \"1 1 100%\" }} pad={'0'}>\n          <ColumnHeader>\n            <Box direction={\"row\"} align={\"center\"} justify={\"between\"}>\n              <Text size=\"medium\" weight=\"bold\">Latest Blocks</Text>\n              <Box style={{ maxWidth: \"120px\", minWidth: \"120px\" }} align={\"start\"}>\n                <ShardDropdown\n                  allShardsAvailable={true}\n                  selected={selectedShard}\n                  onClick={(shardNumber) => setSelectedShard(shardNumber)}\n                />\n              </Box>\n            </Box>\n          </ColumnHeader>\n          <Box pad={'medium'}>\n            <LatestBlocksTable blocks={blocks} />\n            <Button\n              margin={{ top: \"medium\" }}\n              onClick={() => history.push(\"/blocks\")}\n            >\n              VIEW ALL BLOCKS\n            </Button>\n          </Box>\n        </BasePage>\n        <BasePage style={{ flex: \"1 1 100%\" }} pad={'0'}>\n          <ColumnHeader>\n            <Box>\n              <Text size=\"medium\" weight=\"bold\">Latest Transactions</Text>\n            </Box>\n          </ColumnHeader>\n          <Box pad={'medium'}>\n            <LatestTransactionsTable />\n            <Button\n              margin={{ top: \"medium\" }}\n              onClick={() => history.push(\"/transactions\")}\n            >\n              VIEW ALL TRANSACTIONS\n            </Button>\n          </Box>\n        </BasePage>\n      </Box>\n    </BaseContainer>\n  );\n}\n","import Web3 from \"web3\";\nimport { Text } from \"grommet\";\nimport React from \"react\";\nimport { Address } from \"../components/ui\";\nimport { ByteCode, IHexSignature } from \"../types\";\n\nconst web3 = new Web3();\n\nexport const parseSuggestedMethod = (textSignature: string, data: string) => {\n  if (!textSignature) {\n    return;\n  }\n\n  const method = parseTextSignature(textSignature);\n\n  if (!method) {\n    return;\n  }\n\n  const abi = createABI(method.name, method.params, \"function\");\n  try {\n    const parsed = web3.eth.abi.decodeParameters(\n      abi.inputs,\n      \"0x\" + data.slice(10)\n    );\n    return {\n      event: method,\n      abi,\n      parsed,\n    };\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n};\n\nexport const parseSuggestedEvent = (\n  textSignature: string,\n  data: string,\n  topics: string[]\n): any => {\n  if (!textSignature) {\n    return;\n  }\n\n  const event = parseTextSignature(textSignature);\n\n  if (!event) {\n    return;\n  }\n\n  const abi = createABI(event.name, event.params, \"event\");\n  if (abi.inputs.length) {\n    try {\n      const [topic0, ...restTopics] = topics;\n      const parsed = web3.eth.abi.decodeLog(abi.inputs, data, restTopics);\n\n      return {\n        event,\n        abi,\n        parsed,\n      };\n    } catch (err) {\n      console.error(err);\n      return null;\n    }\n  }\n};\n\nconst createABI = (\n  name: string,\n  params: string[],\n  type: \"event\" | \"function\"\n) => {\n  const inputs = params.map((type, i) => ({\n    name: `$${i}`,\n    type,\n    // todo ?\n    indexed: type === \"address\",\n  }));\n  return {\n    inputs,\n    type,\n    name,\n  };\n};\n\nconst parseTextSignature = (sig: string) => {\n  try {\n    const [name, ...rest] = sig.split(\"(\");\n    const params = rest.join(\"\").split(\")\")[0].split(\",\");\n\n    return {\n      name,\n      params,\n    };\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n};\n\nexport interface IDisplaySignatureProps {\n  input?: string;\n  signatures?: IHexSignature[];\n}\n\nexport const DisplaySignatureMethod = (props: IDisplaySignatureProps) => {\n  const { input, signatures } = props;\n  if (!input || input.length < 3) {\n    return <>No input</>;\n  }\n  const signature = signatures && signatures[0] && signatures[0].signature;\n  if (!signature) {\n    return <>—</>;\n  }\n\n  const { parsed, event, abi } =\n    parseSuggestedMethod(signature, input) || {};\n\n  return <DisplaySignature parsed={parsed} event={event} abi={abi} />;\n};\n\n// event\nexport const DisplaySignature = (props: any = {}) => {\n  const { parsed, event, abi } = props;\n\n  if (!parsed || !event || !abi) {\n    return <>—</>;\n  }\n \n\n  return (\n    <Text size={\"small\"}>\n      {event.name}(\n      <>\n        {abi.inputs.map((input: any, i: number) => {\n          return (\n            <div style={{ alignItems: \"center\", display: \"inline-flex\" }}>\n              <Text size=\"small\" color=\"minorText\">\n                {input.type}\n              </Text>\n              :&nbsp;\n              {input.type === \"address\" || input.type === \"address[]\" ? (\n                Array.isArray(parsed[input.name]) ? (\n                  parsed[input.name].map((a: any, i: number) => {\n                    return (\n                      <>\n                        <Address key={a} address={a?.toLowerCase()} />\n                        {i < parsed[input.name].length - 1 && \", \"}\n                      </>\n                    );\n                  })\n                ) : parsed[input?.name?.toString()] ? (\n                  <Address\n                    address={parsed[input?.name?.toString()]?.toLowerCase()}\n                  />\n                ) : null\n              ) : Array.isArray(parsed[input.name]) ? (\n                parsed[input.name].join(\", \")\n              ) : parsed[input.name] ? (\n                parsed[input.name]?.toString()\n              ) : null}\n              {i < abi.inputs.length - 1 ? \", \" : null}\n            </div>\n          );\n        })}\n      </>\n      )\n    </Text>\n  );\n};\n\nexport const revertErrorMessage = (error: ByteCode) => {\n  if (!error) {\n    return null;\n  }\n  if (!error.startsWith(\"0x08c379a0\")) {\n    return null;\n  }\n\n  const s = error.slice(10);\n  return web3.eth.abi.decodeParameter(\"string\", s);\n};\n","import { useState } from \"react\";\nimport { singletonHook } from \"react-singleton-hook\";\n\nexport const BinancePairs: Erc20Price[] = JSON.parse(\n  '[\\n    {\\n        \"symbol\": \"BUSD\",\\n        \"hrc20Address\": \"0xe176ebe47d621b984a73036b9da5d834411ef734\"\\n    },\\n    {\\n        \"symbol\": \"ETH\",\\n        \"hrc20Address\": \"0x6983D1E6DEf3690C4d616b13597A09e6193EA013\"\\n    },\\n    {\\n        \"symbol\": \"LINK\",\\n        \"hrc20Address\": \"0x218532a12a389a4a92fc0c5fb22901d1c19198aa\"\\n    },\\n    {\\n        \"symbol\": \"MAGGOT\",\\n        \"hrc20Address\": \"0xBfD4F1699b83eDBa1106B6E224b7aC599A40be1F\"\\n    },\\n    {\\n        \"symbol\": \"USDT\",\\n        \"hrc20Address\": \"0x3C2B8Be99c50593081EAA2A724F0B8285F5aba8f\"\\n    },\\n    {\\n        \"symbol\": \"UNI\",\\n        \"hrc20Address\": \"0x90D81749da8867962c760414C1C25ec926E889b6\"\\n    },\\n    {\\n        \"symbol\": \"YFI\",\\n        \"hrc20Address\": \"0xa0dc05F84A27FcCBD341305839019aB86576bc07\"\\n    },\\n    {\\n        \"symbol\": \"MEME\",\\n        \"hrc20Address\": \"0x43ba3c1eb73FfECFbF22c44C21b26CdE1012353a\"\\n    },\\n    {\\n        \"symbol\": \"DAI\",\\n        \"hrc20Address\": \"0xEf977d2f931C1978Db5F6747666fa1eACB0d0339\"\\n    },\\n    {\\n        \"symbol\": \"USDC\",\\n        \"hrc20Address\": \"0x985458E523dB3d53125813eD68c274899e9DfAb4\"\\n    },\\n    {\\n        \"symbol\": \"KEEP\",\\n        \"hrc20Address\": \"0x43bF77db5e784b263a459141BdCDf5Cf6987936d\"\\n    },\\n    {\\n        \"symbol\": \"SUSHI\",\\n        \"hrc20Address\": \"0xBEC775Cb42AbFa4288dE81F387a9b1A3c4Bc552A\"\\n    },\\n    {\\n        \"symbol\": \"ROT\",\\n        \"hrc20Address\": \"0xFd2a8F8cF7CFFeA4a613F1DFf39b22881D4a1f92\"\\n    },\\n    {\\n        \"symbol\": \"EMN\",\\n        \"hrc20Address\": \"0xaB318f90bDBC755bCbBC3db66428f457a5f9bC59\"\\n    },\\n    {\\n        \"symbol\": \"YAM\",\\n        \"hrc20Address\": \"0x7202ADF025CbD1cC9411fd56E3Cc8EF2E9dFFA9D\"\\n    },\\n    {\\n        \"symbol\": \"BAT\",\\n        \"hrc20Address\": \"0x2875B4CfAb0A4cc4bdc7fBDf94b6E376826A4332\"\\n    },\\n    {\\n        \"symbol\": \"COMP\",\\n        \"hrc20Address\": \"0x32137b9275EA35162812883582623cd6f6950958\"\\n    },\\n    {\\n        \"symbol\": \"WBTC\",\\n        \"hrc20Address\": \"0x3095c7557bCb296ccc6e363DE01b760bA031F2d9\"\\n    },\\n    {\\n        \"symbol\": \"KNC\",\\n        \"hrc20Address\": \"0x0a47D2dC4B7Ee3D4D7FD471d993b0821621e1769\"\\n    },\\n    {\\n        \"symbol\": \"ZRX\",\\n        \"hrc20Address\": \"0x8143E2A1085939cAA9cEf6665c2Ff32f7bc08435\"\\n    },\\n    {\\n        \"symbol\": \"CRO\",\\n        \"hrc20Address\": \"0x2672B791D23879995AaBdf51Bc7d3DF54BB4e266\"\\n    },\\n    {\\n        \"symbol\": \"AAVE\",\\n        \"hrc20Address\": \"0xcF323Aad9E522B93F11c352CaA519Ad0E14eB40F\"\\n    },\\n    {\\n        \"symbol\": \"REN\",\\n        \"hrc20Address\": \"0x451E129b6045b6E4F48E7247388f21163f7743B7\"\\n    },\\n    {\\n        \"symbol\": \"GST2\",\\n        \"hrc20Address\": \"0x8e34D1351ef8DB0AcAC008761075F33D072Cd753\"\\n    },\\n    {\\n        \"symbol\": \"HGT\",\\n        \"hrc20Address\": \"0x006f5E4c3d97d6d2652CF10BC08Fd779d680B00B\"\\n    },\\n    {\\n        \"symbol\": \"MATIC\",\\n        \"hrc20Address\": \"0x301259f392B551CA8c592C9f676FCD2f9A0A84C5\"\\n    },\\n    {\\n        \"symbol\": \"SWAG\",\\n        \"hrc20Address\": \"0xC63F45B5F6D63D8c424E408ACFB4B5823955F12A\"\\n    },\\n    {\\n        \"symbol\": \"BAL\",\\n        \"hrc20Address\": \"0xDc5f76104D0B8D2bF2c2Bbe06CDFE17004E9010f\"\\n    },\\n    {\\n        \"symbol\": \"LAYER\",\\n        \"hrc20Address\": \"0xE88699AD32d5A610987a3BA8519C06289549cCa7\"\\n    },\\n    {\\n        \"symbol\": \"ABYSS\",\\n        \"hrc20Address\": \"0xA52D0c7943cc1020A926B23dd1c64Fc60b4fadDe\"\\n    },\\n    {\\n        \"symbol\": \"AMPL\",\\n        \"hrc20Address\": \"0xF2f5BF00cd952f3f980a02f5dce278CbFf4daE05\"\\n    },\\n    {\\n        \"symbol\": \"WETH\",\\n        \"hrc20Address\": \"0xF720b7910C6b2FF5bd167171aDa211E226740bfe\"\\n    },\\n    {\\n        \"symbol\": \"KICK\",\\n        \"hrc20Address\": \"0xC63Fd3e9C9527cCdF1d331bbADFE21E77E357B5E\"\\n    },\\n    {\\n        \"symbol\": \"FRONT\",\\n        \"hrc20Address\": \"0x1eE5839950Fd7a227f91CF679b1931dd6F5798B3\"\\n    },\\n    {\\n        \"symbol\": \"SAND\",\\n        \"hrc20Address\": \"0x35de8649e1e4Fd1A7Bd3B14F7e24e5e7887174Ed\"\\n    },\\n    {\\n        \"symbol\": \"IDRT\",\\n        \"hrc20Address\": \"0xCEFbeA899CfcCdc653b171d063481b622086Be3F\"\\n    },\\n    {\\n        \"symbol\": \"CEL\",\\n        \"hrc20Address\": \"0xd562c88E0f8E7dAe43076018Bb1ea3115617984D\"\\n    },\\n    {\\n        \"symbol\": \"PAXG\",\\n        \"hrc20Address\": \"0x7aFB0E2ebA6Dc938945FE0f42484d3b8F442D0AC\"\\n    },\\n    {\\n        \"symbol\": \"UNFI\",\\n        \"hrc20Address\": \"0xa1c05343Ecc902568248DdF837B7735a800aDA23\"\\n    },\\n    {\\n        \"symbol\": \"UP\",\\n        \"hrc20Address\": \"0xBF33E24DceC9C884e286e3ad1D5C7C7f1f4D7afD\"\\n    },\\n    {\\n        \"symbol\": \"HEX\",\\n        \"hrc20Address\": \"0xf26D8c787e66254eE8B7A500073da8fb1ab1992D\"\\n    },\\n    {\\n        \"symbol\": \"STORJ\",\\n        \"hrc20Address\": \"0x266F341E33aa61c30c6a9af89314811A5b097cb4\"\\n    },\\n    {\\n        \"symbol\": \"SMC\",\\n        \"hrc20Address\": \"0x3A3ebAA3EdCd7e6f7C8139A60D4009aB7DcDeDFe\"\\n    },\\n    {\\n        \"symbol\": \"VI\",\\n        \"hrc20Address\": \"0xF3f8089362dD4C0FD56f12B7D34eDBddc7a12D6F\"\\n    },\\n    {\\n        \"symbol\": \"YFL\",\\n        \"hrc20Address\": \"0x421b372389f89E2Abbf2C91f006Fc04a1f424B2D\"\\n    },\\n    {\\n        \"symbol\": \"1ZPT\",\\n        \"hrc20Address\": \"0x674B0e93D596F4025848D3fa907c839e42850dc7\"\\n    },\\n    {\\n        \"symbol\": \"ARCD\",\\n        \"hrc20Address\": \"0x90edb740e0F02C532Fa90B7ED69Cbd4601F54A5c\"\\n    },\\n    {\\n        \"symbol\": \"UNISTAKE\",\\n        \"hrc20Address\": \"0x1Ec56F91d61F2c2CB1af0a2B9BB8d7984F0A6626\"\\n    },\\n    {\\n        \"symbol\": \"COMBO\",\\n        \"hrc20Address\": \"0x5693FE17Ad04F0D8F768cEeB863e62B522901440\"\\n    },\\n    {\\n        \"symbol\": \"HOT\",\\n        \"hrc20Address\": \"0x5dfEaDCDD2d4eB29aC5Ae876dAA07FfD07Bf6483\"\\n    },\\n    {\\n        \"symbol\": \"HT\",\\n        \"hrc20Address\": \"0xBAA0974354680B0e8146d64bB27Fb92C03C4A2f2\"\\n    },\\n    {\\n        \"symbol\": \"TAO$\",\\n        \"hrc20Address\": \"0x0A5bd477184989ecCFb345a1d3ce3CC6a80bF29b\"\\n    },\\n    {\\n        \"symbol\": \"DSLA\",\\n        \"hrc20Address\": \"0x34704c70e9eC9fB9A921da6DAAD7D3e19f43c734\"\\n    },\\n    {\\n        \"symbol\": \"LOTTO\",\\n        \"hrc20Address\": \"0x1f7178D868ED7da31f8E8a15d9f499bCBdaEFFf2\"\\n    },\\n    {\\n        \"symbol\": \"MARK\",\\n        \"hrc20Address\": \"0xE52c7144fEd0aeCa882dD93Bc76c9135f5598DDD\"\\n    },\\n    {\\n        \"symbol\": \"SRK\",\\n        \"hrc20Address\": \"0x9500A1FbEF7014dbD384633fD20bb1e6916d6Fca\"\\n    },\\n    {\\n        \"symbol\": \"LINA\",\\n        \"hrc20Address\": \"0x946c8286bd9B52B81F681903210E1a57872fdD85\"\\n    },\\n    {\\n        \"symbol\": \"DEXE\",\\n        \"hrc20Address\": \"0xEaB6222a2823339e6952562eB75e56c6c8eeA36B\"\\n    },\\n    {\\n        \"symbol\": \"ZPT\",\\n        \"hrc20Address\": \"0x3AC01098415C0CCf479729022D07d5aC3B048b73\"\\n    },\\n    {\\n        \"symbol\": \"BADGER\",\\n        \"hrc20Address\": \"0x06b19a0ce12dC71f1C7a6DD39E8983E089C40E0d\"\\n    },\\n    {\\n        \"symbol\": \"SXP\",\\n        \"hrc20Address\": \"0x77d046614710fdDf5CA3E3cE85F4f09f7ABC283c\"\\n    },\\n    {\\n        \"symbol\": \"SNX\",\\n        \"hrc20Address\": \"0x7b9c523d59AeFd362247Bd5601A89722e3774dD2\"\\n    },\\n    {\\n        \"symbol\": \"EBOX\",\\n        \"hrc20Address\": \"0x4328588AaE1108FBD36e5cdB57C8128dcF7a6D9A\"\\n    },\\n    {\\n        \"symbol\": \"FTM\",\\n        \"hrc20Address\": \"0x39aB439897380eD10558666C4377fACB0322Ad48\"\\n    },\\n    {\\n        \"symbol\": \"WISE\",\\n        \"hrc20Address\": \"0xE7e3C4D1cFc722b45A428736845B6AfF862842a1\"\\n    },\\n    {\\n        \"symbol\": \"AiDAO\",\\n        \"hrc20Address\": \"0x1b242b9f11764fCc99aad68721c439c7E3cb59aa\"\\n    },\\n    {\\n        \"symbol\": \"REEF\",\\n        \"hrc20Address\": \"0x9aB0DB833557d95AFf98C09B560145Ad34E681b8\"\\n    },\\n    {\\n        \"symbol\": \"dART\",\\n        \"hrc20Address\": \"0x89102770BB34393B30bEC0F82a6cD2587131552F\"\\n    },\\n    {\\n        \"symbol\": \"1INCH\",\\n        \"hrc20Address\": \"0x58f1b044d8308812881a1433d9Bbeff99975e70C\"\\n    },\\n    {\\n        \"symbol\": \"TUSD\",\\n        \"hrc20Address\": \"0x553A1151F3Df3620fC2B5A75A6edDa629e3dA350\"\\n    },\\n    {\\n        \"symbol\": \"ROOK\",\\n        \"hrc20Address\": \"0x08310baF9DeB5F13B885eDf5eeA6fD19DC21AF3A\"\\n    },\\n    {\\n        \"symbol\": \"BUNNY\",\\n        \"hrc20Address\": \"0x758765664769D82380c95CC3489d533FA21974fa\"\\n    },\\n    {\\n        \"symbol\": \"TVK\",\\n        \"hrc20Address\": \"0xced019c13AeC9dC2C641FC3Bb0B24C7231f0fFF1\"\\n    },\\n    {\\n        \"symbol\": \"GRT\",\\n        \"hrc20Address\": \"0x002FA662F2E09de7C306d2BaB0085EE9509488Ff\"\\n    },\\n    {\\n        \"symbol\": \"DOGEN\",\\n        \"hrc20Address\": \"0x93C10C4A4436c8F6e5A9d1325B570e84df7fcEDb\"\\n    },\\n    {\\n        \"symbol\": \"EASY\",\\n        \"hrc20Address\": \"0xB10E699aE2D80607147BCc617b6A3B64D3a434Bd\"\\n    },\\n    {\\n        \"symbol\": \"LYXe\",\\n        \"hrc20Address\": \"0x8A8ca151562a68ED3732Fd963Ec4e0E713B39BB3\"\\n    },\\n    {\\n        \"symbol\": \"LPT\",\\n        \"hrc20Address\": \"0xBD3E698b51D340Cc53B0CC549b598c13e0172B7c\"\\n    },\\n    {\\n        \"symbol\": \"ENJ\",\\n        \"hrc20Address\": \"0xadbd41bFb4389dE499535C14A8a3A12Fead8F66A\"\\n    },\\n    {\\n        \"symbol\": \"CHAIN\",\\n        \"hrc20Address\": \"0x84Ec08c887DD8c14D389abe56e609379B7C5262E\"\\n    },\\n    {\\n        \"symbol\": \"PETRON\",\\n        \"hrc20Address\": \"0xD8ecd9D2ef5dA0327c2D834B8D118febCce03F4c\"\\n    },\\n    {\\n        \"symbol\": \"ARC\",\\n        \"hrc20Address\": \"0x3DcA48E4707cb2f08EfbE836062AAa45cbB851cB\"\\n    },\\n    {\\n        \"symbol\": \"MCO\",\\n        \"hrc20Address\": \"0xbce4F76227D9b97bAabA1e1a4021d20979ED03ec\"\\n    },\\n    {\\n        \"symbol\": \"IMX\",\\n        \"hrc20Address\": \"0xBD8064CdB96C00A73540922504F989c64B7b8B96\"\\n    },\\n    {\\n        \"symbol\": \"DRC\",\\n        \"hrc20Address\": \"0xe74A0BA232a62Ddb80e53EA7ed9B799445F52876\"\\n    },\\n    {\\n        \"symbol\": \"FEG\",\\n        \"hrc20Address\": \"0x3042BB02E308431e1D8cD5785A60BbD7ED2E3f54\"\\n    },\\n    {\\n        \"symbol\": \"KISHU\",\\n        \"hrc20Address\": \"0x147E4Bc895Dc5995Be2C8523A3ED6FF708beAeC3\"\\n    },\\n    {\\n        \"symbol\": \"renBTC\",\\n        \"hrc20Address\": \"0x41CA97b94D5deE79195856034D196dDfa0D43EDD\"\\n    },\\n    {\\n        \"symbol\": \"JPYC\",\\n        \"hrc20Address\": \"0x951C343A392633c8CEfB0B7F855EAD9a8f8c72A1\"\\n    },\\n    {\\n        \"symbol\": \"BNB\",\\n        \"hrc20Address\": \"0xb1f6E61E1e113625593a22fa6aa94F8052bc39E0\"\\n    },\\n    {\\n        \"symbol\": \"BUSD\",\\n        \"hrc20Address\": \"0x0aB43550A6915F9f67d0c454C2E90385E6497EaA\"\\n    },\\n    {\\n        \"symbol\": \"ETH\",\\n        \"hrc20Address\": \"0x783EE3E955832a3D52CA4050c4C251731c156020\"\\n    },\\n    {\\n        \"symbol\": \"USDT\",\\n        \"hrc20Address\": \"0x9A89d0e1b051640C6704Dde4dF881f73ADFEf39a\"\\n    },\\n    {\\n        \"symbol\": \"MOCHI\",\\n        \"hrc20Address\": \"0xda73f5C25C0D644Afd20dA5535558956B192b262\"\\n    },\\n    {\\n        \"symbol\": \"ADA\",\\n        \"hrc20Address\": \"0x582617bD8Ca80d22D4432E63Fda52D74dcDCEe4c\"\\n    },\\n    {\\n        \"symbol\": \"SAFEMOON\",\\n        \"hrc20Address\": \"0x58c5E26fcc4d1d442396D33b58af31549C64d22F\"\\n    },\\n    {\\n        \"symbol\": \"JulD\",\\n        \"hrc20Address\": \"0x504D7d5bd2075FA782Fbd0bE9bEA4CDC7e25f5a1\"\\n    },\\n    {\\n        \"symbol\": \"REEF\",\\n        \"hrc20Address\": \"0xA2d18722e96B3622d28f4d1bd9631D4B75f4186C\"\\n    },\\n    {\\n        \"symbol\": \"BAKE\",\\n        \"hrc20Address\": \"0x4da9464DaF2b878e32E29115E2cFD786fE84692a\"\\n    },\\n    {\\n        \"symbol\": \"Cake\",\\n        \"hrc20Address\": \"0x3e9D32580B0BF3aE72AFCBEbC68710d2Fd9a18F0\"\\n    },\\n    {\\n        \"symbol\": \"APESOX\",\\n        \"hrc20Address\": \"0x53051d5545745F600232a885a65479cA832198fb\"\\n    },\\n    {\\n        \"symbol\": \"LINK\",\\n        \"hrc20Address\": \"0x88B0811DdeC7c94Cc48dE601BdAbd1AC37d6940B\"\\n    },\\n    {\\n        \"symbol\": \"FEG\",\\n        \"hrc20Address\": \"0xC7eaAa7FC41Fa4D814192979f267D80CB48fB760\"\\n    },\\n    {\\n        \"symbol\": \"APEDOGE\",\\n        \"hrc20Address\": \"0x6F6Fb59148a982F215c48852f7772a5664C695AD\"\\n    },\\n    {\\n        \"symbol\": \"APESAFE\",\\n        \"hrc20Address\": \"0x52Ac8c6e34CAE594af1F57b103Bb06328a23033C\"\\n    },\\n    {\\n        \"symbol\": \"USDC\",\\n        \"hrc20Address\": \"0x44cED87b9F1492Bf2DCf5c16004832569f7f6cBa\"\\n    },\\n    {\\n        \"symbol\": \"TWOK\",\\n        \"hrc20Address\": \"0xAe1b8C2A966666BFe8bB1C78860bA27f92d5B8eA\"\\n    },\\n    {\\n        \"symbol\": \"Mochi-LP\",\\n        \"hrc20Address\": \"0xe2707c50A928f5f2c9B09d6e9387c578dE9206B4\"\\n    },\\n    {\\n        \"symbol\": \"DAI\",\\n        \"hrc20Address\": \"0x1d374ED0700a0aD3cd4945D66a5B1e08e5db20A8\"\\n    },\\n    {\\n        \"symbol\": \"BELUGA\",\\n        \"hrc20Address\": \"0x2F20a4022Bf71daf47eC43972B6ecF56e0DB0609\"\\n    },\\n    {\\n        \"symbol\": \"PIG\",\\n        \"hrc20Address\": \"0x65B519d5fB8DaDaB9d9994D3A8aebfdf43910Aea\"\\n    },\\n    {\\n        \"symbol\": \"CHI\",\\n        \"hrc20Address\": \"0x2662eB1b5A4Cf2AbFB5fa2AFE75dA715e82b483f\"\\n    },\\n    {\\n        \"symbol\": \"SUSHI\",\\n        \"hrc20Address\": \"0x547B2D8b4165d2c5Ab75cdb6B6C2B313D9724a11\"\\n    },\\n    {\\n        \"symbol\": \"VIPER\",\\n        \"hrc20Address\": \"0x84e13630160868A3bAe7b7DE33eB730BFf311c64\"\\n    },\\n    {\\n        \"symbol\": \"ONX\",\\n        \"hrc20Address\": \"0x7Ca40b38EC544d75de186e826c1e2633c9988941\"\\n    },\\n    {\\n        \"symbol\": \"NVG\",\\n        \"hrc20Address\": \"0xF23b931BE00574129E4C3e055f9E5483839dc54a\"\\n    },\\n    {\\n        \"symbol\": \"WBNB\",\\n        \"hrc20Address\": \"0x673D2EC54E0a6580fc7E098295B70e3cE0350D03\"\\n    },\\n    {\\n        \"symbol\": \"ElonGate\",\\n        \"hrc20Address\": \"0x11FC804f435c601335b55189fE519fdb88f23A29\"\\n    },\\n    {\\n        \"symbol\": \"ZPT\",\\n        \"hrc20Address\": \"0xAD785c955625E4e82cdAE2F997cd6038A8ecd90E\"\\n    },\\n    {\\n        \"symbol\": \"AAVE\",\\n        \"hrc20Address\": \"0x6Fc97bA83085FCb9a60bac8151418d51b470647d\"\\n    },\\n    {\\n        \"symbol\": \"BUSD\",\\n        \"hrc20Address\": \"0x791fA343792F377369a0189Fc69aFa14ad12d3AC\"\\n    },\\n    {\\n        \"symbol\": \"YFI\",\\n        \"hrc20Address\": \"0xB74F84131d2A980375629e0c8589034F5330667D\"\\n    },\\n    {\\n        \"symbol\": \"1INCH\",\\n        \"hrc20Address\": \"0x8DdFF1C168fd099504B0d817837B10F58BE67d26\"\\n    },\\n    {\\n        \"symbol\": \"UNI\",\\n        \"hrc20Address\": \"0x775020Dd09A94414a8c1A89c5a3d3c9d1B22529d\"\\n    },\\n    {\\n        \"symbol\": \"SNX\",\\n        \"hrc20Address\": \"0x1D1bAef88c0Dcdf4d99f3df9dBB7DB90f30C2cFe\"\\n    },\\n    {\\n        \"symbol\": \"MATIC\",\\n        \"hrc20Address\": \"0x6E7bE5B9B4C9953434CD83950D61408f1cCc3bee\"\\n    },\\n    {\\n        \"symbol\": \"1bscBUSD\",\\n        \"hrc20Address\": \"0x332B4558A675E344b3CC5BE5D72d5Fa71Ab8dE32\"\\n    },\\n    {\\n        \"symbol\": \"1bscMATIC\",\\n        \"hrc20Address\": \"0x0000000000000000000000000000000000000000\"\\n    },\\n    {\\n        \"symbol\": \"bBEAR\",\\n        \"hrc20Address\": \"0x133F72321C1A8cd8300c6e67eA70074d8bfEbf82\"\\n    },\\n    {\\n        \"symbol\": \"bDOGEN\",\\n        \"hrc20Address\": \"0xf2D1Db1CD4E15C6448dEE43aB9Af9eE72a237Aea\"\\n    },\\n    {\\n        \"symbol\": \"1bscMOCHI\",\\n        \"hrc20Address\": \"0x3C2294d9e384E8d6584353348140253613b37920\"\\n    },\\n    {\\n        \"symbol\": \"TAD\",\\n        \"hrc20Address\": \"0x6a154903B23D6043D168D3d5374618c0187cC9ec\"\\n    },\\n    {\\n        \"symbol\": \"LAIKA\",\\n        \"hrc20Address\": \"0x6AE269cFD931180a00E4A1ec6461Ff587ad57647\"\\n    },\\n    {\\n        \"symbol\": \"DOGE\",\\n        \"hrc20Address\": \"0xF155E1a57DB0Ca820aE37Ab4050e0e4C7cFcEcd0\"\\n    },\\n    {\\n        \"symbol\": \"BTCB\",\\n        \"hrc20Address\": \"0x34224dCF981dA7488FdD01c7fdd64E74Cd55DcF7\"\\n    },\\n    {\\n        \"symbol\": \"WISB\",\\n        \"hrc20Address\": \"0x8F0D210bf0b8A3A3E4B1012B21e6974818a35B94\"\\n    },\\n    {\\n        \"symbol\": \"1bscUSDT\",\\n        \"hrc20Address\": \"0x6515d0427e5583CA085dF3879A18623A234d9790\"\\n    },\\n    {\\n        \"symbol\": \"BUNGA\",\\n        \"hrc20Address\": \"0x9406982C1c5d1007feb194a8a791c7F453160BAC\"\\n    },\\n    {\\n        \"symbol\": \"JPYC\",\\n        \"hrc20Address\": \"0xe112b5f917e882033084f64615fb9a3B37e617Bb\"\\n    },\\n    {\\n        \"symbol\": \"ATOM\",\\n        \"hrc20Address\": \"0xd6bAd903e550822d51073AFb79581BF5aAE9243F\"\\n    },\\n    {\\n        \"symbol\": \"UST\",\\n        \"hrc20Address\": \"0xb82307fF75F0CD2cFc253BA2621851fd9123a818\"\\n    },\\n    {\\n        \"symbol\": \"DogeBSC\",\\n        \"hrc20Address\": \"0xC9E149cF89A1700cd87a3Af2D6B00ec503A668c4\"\\n    },\\n    {\\n        \"symbol\": \"11YFI\",\\n        \"hrc20Address\": \"0xEe1158C381dCC13A0808555a93067e5E0a680838\"\\n    },\\n    {\\n        \"symbol\": \"1bsc11YFI\",\\n        \"hrc20Address\": \"0x1E973a70CDffb61b8d97ce084664A6aa2b6bC29d\"\\n    }\\n]'\n);\n\nlet globalSetMode = () => {\n  return {};\n};\n\nexport const useBinancePairHistoricalPrice = singletonHook(BinancePairs, () => {\n  const pool =\n    (JSON.parse(\n      window.localStorage.getItem(\"BinancePairHistoricalPrice\") || \"[]\"\n    ) as Erc20Price[]) || BinancePairs;\n\n  const [mode, setMode] = useState<Erc20Price[]>(pool);\n  //@ts-ignore\n  globalSetMode = setMode;\n  return mode;\n});\n\nexport const setBinancePairHistoricalPrice = (pool: Erc20Price[]) => {\n  //@ts-ignore\n  globalSetMode(pool);\n};\n\nexport interface Erc20Price {\n  symbol: string;\n  hrc20Address: string;\n}\n","import { Box, Text } from \"grommet\";\nimport React, { useEffect, useState } from \"react\";\nimport Big from \"big.js\";\nimport { formatNumber as _formatNumber } from \"src/components/ui/utils\";\n\nimport { useERC20Pool } from \"src/hooks/ERC20_Pool\";\nimport { useERC721Pool } from \"src/hooks/ERC721_Pool\";\nimport { BinancePairs } from \"src/hooks/BinancePairHistoricalPrice\";\nimport { getBinancePairPrice } from \"src/api/client\";\nimport { IPairPrice } from \"src/api/client.interface\";\nimport { AnchorLink } from \"./AnchorLink\";\nimport { useERC1155Pool } from \"src/hooks/ERC1155_Pool\";\n\ninterface ZPTValueProps {\n  value: string | number;\n  tokenAddress?: string;\n  style?: React.CSSProperties;\n  formatNumber?: boolean;\n  direction?: \"row\" | \"column\";\n}\n\nBig.DP = 40;\nBig.NE = -20;\nBig.PE = 20;\n\n// @ts-ignore\nexport const TokenValueBalanced = (props: ZPTValueProps) => {\n  const [dollar, setDollar] = useState<IPairPrice>({} as any);\n  const { value, tokenAddress = \"\", style, formatNumber } = props;\n  const erc20Map = useERC20Pool();\n  const erc721Map = useERC721Pool();\n  const erc1155Map = useERC1155Pool();\n  const { direction = \"column\" } = props;\n\n  let pairSymbol = BinancePairs.find(\n    (item) => item.hrc20Address === tokenAddress\n  );\n\n  useEffect(() => {\n    const getContracts = async () => {\n      try {\n        let contracts: any = await (pairSymbol?.symbol\n          ? getBinancePairPrice([`${pairSymbol?.symbol}USDT`])\n          : Promise.resolve({}));\n\n        setDollar(contracts);\n      } catch (err) {\n        setDollar({} as any);\n      }\n    };\n    getContracts();\n  }, [pairSymbol?.symbol]);\n\n  //TODO remove hardcode\n  const tokenInfo: any = erc20Map[tokenAddress] ||\n    erc721Map[tokenAddress] ||\n    erc1155Map[tokenAddress] || { decimals: 0, symbol: \"\" };\n\n  if (!(\"decimals\" in tokenInfo)) {\n    tokenInfo.decimals = 0;\n  }\n\n  if (!value) {\n    return null;\n  }\n\n  const dollarPrice =\n    dollar && dollar.lastPrice\n      ? Big(value)\n          .times(+dollar.lastPrice)\n          .div(10 ** tokenInfo.decimals)\n      : 0;\n\n  const bi = Big(value).div(10 ** tokenInfo.decimals);\n  const v = formatNumber ? _formatNumber(bi.toNumber()) : bi.toString();\n\n  return (\n    <Text size=\"small\" style={style}>\n      <b>\n        {dollar && dollar.lastPrice ? (\n          <Box direction={direction}>\n            <Text size={\"small\"}>\n              {`${v}`}\n              <AnchorLink to={\"/zrc20\"} label={`${tokenInfo.symbol}`} />\n            </Text>\n            <Text size={\"small\"} style={{ paddingLeft: \"0.3em\" }}>\n              {`($${dollarPrice.toFixed(2).toString()})`}\n            </Text>\n          </Box>\n        ) : (\n          <Text size={\"small\"}>\n            {`${v}`}{\" \"}\n            <AnchorLink\n              to={`/address/${tokenInfo.address}`}\n              label={`${tokenInfo.symbol}`}\n            />\n          </Text>\n        )}\n      </b>\n    </Text>\n  );\n};\n","import {Log} from \"../../../types\"\nimport {parseSuggestedEvent} from \"../../../web3/parseByteCode\"\nimport {Box, Text} from \"grommet\"\nimport {Address} from \"../../ui\"\nimport {TokenValueBalanced} from \"../../ui/TokenValueBalanced\"\nimport React from \"react\"\n\nconst erc20TransferTopic =\n    \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\";\nexport const tokenTransfersERC20 = (logs: Log[]) => {\n    const erc20Logs = logs.filter((l) => l.topics.includes(erc20TransferTopic));\n    const events = erc20Logs\n        .map((l) =>\n            parseSuggestedEvent(\"Transfer(address,address,uint256)\", l.data, l.topics)\n        )\n        .filter((e) => e && e.parsed);\n\n    if (!events.length) {\n        return <></>;\n    }\n\n    return (\n        <>\n            {events.map((e: any, index) => {\n                const val = e.parsed[\"$2\"];\n                const address = erc20Logs[index].address;\n\n                return (\n                    <Box\n                        direction={\"column\"}\n                        align={\"start\"}\n                        pad={\"xxsmall\"}\n                        style={{ borderRadius: \"6px\", marginBottom: \"3px\" }}\n                    >\n                        <Box direction={\"row\"}>\n                            <Text size=\"small\" color=\"minorText\">\n                                From :&nbsp;\n                            </Text>\n                            <Address address={e.parsed[\"$0\"].toLowerCase()} />\n                            &nbsp;\n                            <Text size=\"small\" color=\"minorText\">\n                                To :&nbsp;\n                            </Text>\n                            <Address address={e.parsed[\"$1\"].toLowerCase()} />\n                        </Box>\n                        <Box align={\"center\"} direction={\"row\"}>\n                            <Text size=\"small\" color=\"minorText\">\n                                Value : &nbsp;\n                            </Text>\n                            <TokenValueBalanced\n                                value={val}\n                                tokenAddress={address}\n                                direction={\"row\"}\n                            />\n                        </Box>\n                    </Box>\n                );\n            })}\n        </>\n    );\n};","import { Box, Spinner } from \"grommet\";\nimport { Image } from \"grommet-icons\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nexport interface IERC1155IconProps {\n  imageUrl?: string;\n}\n\nconst Loader = styled.div`\n  position: absolute;\n  width: 30px;\n  height: 30px;\n  background: ${(props) => props.theme.backgroundBack};\n`;\n\nconst InventImg = styled.img`\n  width: 30px;\n  height: 30px;\n  border-radius: 8px;\n`;\n\nconst ErrorPreview = styled(Box)`\n  width: 30px;\n  height: 30px;\n\n  border-radius: 8px;\n`;\n\nconst EmptyImage = styled(Box)`\n  width: 30px;\n  height: 30px;\n\n  border-radius: 8px;\n  background: ${props => props.theme.global.colors.backgroundEmptyIcon};\n`;\n\nexport function ERC1155Icon(props: IERC1155IconProps) {\n  const [isLoading, setIsLoading] = useState(!!props.imageUrl);\n  const [isErrorLoading, setIsErrorLoading] = useState(false);\n\n  const url = props.imageUrl\n    ? props.imageUrl.indexOf('http') === 0\n      ? props.imageUrl\n      : `${process.env.REACT_APP_INDEXER_IPFS_GATEWAY}${props.imageUrl}`\n    : \"\";\n\n  return (\n    <Box>\n      {isLoading ? (\n        <Loader>\n          <Box align={\"center\"} justify={\"center\"} flex height={\"100%\"}>\n            <Spinner />\n          </Box>\n        </Loader>\n      ) : null}\n      {isErrorLoading ? (\n        <ErrorPreview direction={\"column\"} justify={\"center\"} align={\"center\"}>\n          <Image\n            size={\"medium\"}\n            style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          />\n        </ErrorPreview>\n      ) : url ? (\n        <InventImg\n          src={url}\n          onLoad={() => setIsLoading(false)}\n          onError={() => {\n            setIsLoading(false);\n            setIsErrorLoading(true);\n          }}\n        />\n      ) : (\n        <EmptyImage\n          direction={\"column\"}\n          justify={\"center\"}\n          align={\"center\"}\n        ></EmptyImage>\n      )}\n    </Box>\n  );\n}\n","import {Log} from \"../../../types\"\nimport {parseSuggestedEvent} from \"../../../web3/parseByteCode\"\nimport {Box, Text} from \"grommet\"\nimport {Address} from \"../../ui\"\nimport {TokenValueBalanced} from \"../../ui/TokenValueBalanced\"\nimport React, {useEffect, useState} from \"react\"\nimport {AnchorLink} from \"src/components/ui/AnchorLink\";\nimport {getTokenERC1155AssetDetails} from \"src/api/client\";\nimport {ERC1155Icon} from \"src/components/ui/ERC1155Icon\";\n\nconst ercTransferTopic =\n    \"0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\";\nexport const TokenTransfersERC1155 = (logs: Log[]) => {\n    const ercLogs = logs.filter((l) => l.topics.includes(ercTransferTopic));\n    const events = ercLogs\n        .map((l) =>\n            parseSuggestedEvent(\"TransferSingle(address,address,address,uint256,uint256)\", l.data, l.topics)\n        )\n        .filter((e) => e && e.parsed);\n\n    const [tokenDetails, setTokenDetails] = useState({})\n\n    useEffect(() => {\n        if (Object.keys(tokenDetails).length || !events.length) {\n            return\n        }\n\n        const getTokenDetails = (address: string, tokenID: string) => {\n            return getTokenERC1155AssetDetails(address, tokenID)\n        }\n\n        Promise.all(\n            events.map((e, index) => getTokenDetails(ercLogs[index].address, e.parsed[\"$3\"])\n                .then((res) => ({[`${ercLogs[index].address}:${e.parsed[\"$3\"]}`]: res}))\n            )\n        ).then(res => {\n            console.log({res})\n            setTokenDetails(res.reduce((a, b) => ({...a, ...b}), {}))\n        })\n\n\n    }, [events])\n\n    if (!events.length) {\n        return <></>;\n    }\n\n    return (\n        <>\n            {events.map((e: any, index) => {\n                const operator = e.parsed[\"$0\"];\n                const from = e.parsed[\"$1\"].toLowerCase();\n                const to = e.parsed[\"$2\"].toLowerCase();\n                const id = e.parsed[\"$3\"];\n                const val = e.parsed[\"$4\"];\n                const address = ercLogs[index].address;\n\n                // @ts-ignore\n                const imageURL = tokenDetails[`${address}:${id}`]?.meta?.image\n\n                return (\n                    <>\n                        <Box\n                            direction={\"column\"}\n                            align={\"start\"}\n                            pad={\"xxsmall\"}\n                            style={{borderRadius: \"6px\", marginBottom: \"3px\"}}\n                        >\n                            <Box direction={\"row\"}>\n                                <Text size=\"small\" color=\"minorText\">\n                                    From :&nbsp;\n                                </Text>\n                                <Address address={from}/>\n                                &nbsp;\n                                <Text size=\"small\" color=\"minorText\">\n                                    To :&nbsp;\n                                </Text>\n                                <Address address={to}/>\n                            </Box>\n                            <Box align={\"center\"} direction={\"row\"}>\n                                <Text size=\"small\" color=\"minorText\">\n                                    ID : &nbsp;\n                                </Text>\n                                <AnchorLink to={`/inventory/erc1155/${address}/${BigInt(id)}`}>\n                                    {BigInt(id).toString()}\n                                </AnchorLink>\n                                &nbsp;\n                                Value : &nbsp;\n                                <TokenValueBalanced\n                                    value={val}\n                                    tokenAddress={address}\n                                    direction={\"row\"}\n                                />\n                                <ERC1155Icon imageUrl={imageURL}/>\n                            </Box>\n                        </Box>\n                    </>\n                );\n            })}\n        </>\n    );\n};","import Web3 from \"web3\";\n\nconst web3 = new Web3()\n\nexport const parseHexToText = (hex: string) => {\n  try {\n    const text = web3.utils.hexToUtf8(hex)\n    // Allow only english letters and some symbols\n    if (text && /^[A-Za-z0-9,.;\\- ]*$/.test(text)) {\n      return text\n    }\n  } catch (e) {}\n  return ''\n}\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Down } from 'grommet-icons';\nimport { Box, DropButton, Text, Button, TextArea } from \"grommet\";\nimport { IHexSignature } from \"../../types\";\nimport { DisplaySignatureMethod } from \"../../web3/parseByteCode\";\nimport { CopyBtn } from \"../ui/CopyBtn\";\nimport { parseHexToText } from \"../../web3/parseHex\";\n\nenum ViewType {\n  hex = 'hex',\n  decoded = 'decoded',\n  utf8 = 'utf8'\n}\n\nconst defaultViewType = ViewType.hex\n\nconst ViewTypeName = {\n  [ViewType.decoded]: 'Default view',\n  [ViewType.hex]: 'Original',\n  [ViewType.utf8]: 'UTF-8',\n}\n\ninterface IDropContentProps {\n  currentOption: ViewType;\n  options: ViewType[];\n  onSelectOption: (option: ViewType) => void;\n}\n\nconst OptionItem = styled(Text)<{ isSelected: boolean }>`\n  cursor: pointer;\n  color: ${(props) => props.isSelected\n          ? props.theme.global.colors.brand\n          : props.theme.global.colors.text};\n  font-size: 14px;\n  \n  &:hover {\n    color: ${(props) => props.theme.global.colors.brand};\n  }\n  &:not(:first-child) {\n    margin-top: 8px;\n  }\n`\n\nconst DropContentContainer = styled(Box)`\n  padding: 12px;\n`\n\nconst DropContent = (props: IDropContentProps) => {\n  const { options, currentOption, onSelectOption } = props\n  return <DropContentContainer>\n    {options.map(option => <OptionItem\n      key={option}\n      isSelected={currentOption === option}\n      onClick={() => onSelectOption(option)}>\n      {ViewTypeName[option]}\n    </OptionItem>)}\n  </DropContentContainer>\n}\n\nconst RawInput = (props: { value: string }) => {\n  let displayValue = props.value\n  if (displayValue && displayValue.length && displayValue.length > 66) {\n    displayValue = displayValue.slice(0, 63) + \"...\";\n  }\n  return <Box direction=\"row\" align=\"baseline\">\n    <CopyBtn value={props.value} showNotification={true} /> &nbsp;\n    <span title={props.value}>{displayValue}</span>\n  </Box>\n}\n\nconst ReadableText = (props: { value: string }) => {\n  return <TextArea style={{ minHeight: \"40px\" }} rows={2} value={props.value}/>\n}\n\nexport const TxInput = (props: { input: string, inputSignature?: IHexSignature}) => {\n  const { inputSignature } = props\n  const [viewType, setViewType] = useState(ViewType.hex)\n  const [dropdownOptions, setDropdownOptions] = useState([defaultViewType])\n  const [inputUTF8Text, setInputUTF8Text] = useState('')\n  const [isOpened, setOpened] = useState(false)\n\n  useEffect(() => {\n    if (props.inputSignature) {\n      setViewType(ViewType.decoded)\n      setDropdownOptions([ViewType.hex, ViewType.decoded])\n      setInputUTF8Text('')\n    } else {\n      try {\n        const text = parseHexToText(props.input)\n        if (text) {\n          setInputUTF8Text(text)\n          setViewType(ViewType.utf8)\n          setDropdownOptions([ViewType.hex, ViewType.utf8])\n        }\n      } catch (e) {\n        console.log('Tx input hex is not an UTF8 string:', (e as Error).message)\n        setViewType(defaultViewType)\n        setInputUTF8Text('')\n        setDropdownOptions([defaultViewType])\n      }\n    }\n  }, [props.input, props.inputSignature])\n\n  const onSelectOption = (option: ViewType) => {\n    setOpened(false)\n    setViewType(option)\n  }\n\n  const dropContent = <DropContent\n    options={dropdownOptions}\n    currentOption={viewType}\n    onSelectOption={onSelectOption}\n  />\n\n  return <div style={{ width: '100%' }}>\n    <div>\n      {(viewType === ViewType.decoded && inputSignature) &&\n        <DisplaySignatureMethod\n          input={props.input}\n          signatures={[inputSignature]}\n        />\n      }\n      {viewType === ViewType.hex &&\n        <RawInput value={'' + props.input} />\n      }\n      {(viewType === ViewType.utf8 && inputUTF8Text) &&\n        <ReadableText value={inputUTF8Text} />\n      }\n    </div>\n    {dropdownOptions.length > 1 &&\n      <div>\n        <DropButton\n          style={{ borderRadius: '4px' }}\n          open={isOpened}\n          onClose={() => setOpened(false)}\n          onOpen={() => setOpened(true)}\n          dropContent={dropContent}\n          dropProps={{ align: { top: 'bottom' }, margin: { left: 'xsmall' }, round: '6px' }}\n        >\n          <Box\n            direction=\"row\"\n            gap=\"medium\"\n            align=\"start\"\n            pad=\"xsmall\">\n            <Button\n              size=\"small\"\n              label=\"View input as\"\n              icon={<Down size={'small'} />}\n              reverse\n              style={{ borderRadius: '6px', padding: '3px 8px' }}\n            />\n          </Box>\n        </DropButton>\n      </div>\n    }\n  </div>\n}\n","import { IHexSignature, RPCTransactionHarmony } from \"../../types\";\nimport {\n    FormNextLink\n} from \"grommet-icons\";\nimport React from \"react\";\nimport {\n    Address,\n    BlockHash,\n    BlockNumber,\n    Timestamp,\n    TransactionHash,\n    ZPTValue,\n    StakingTransactionTypeValue,\n    DateTime\n} from \"../ui\";\nimport {Box} from \"grommet\";\nimport {CopyBtn} from \"../ui/CopyBtn\";\nimport { TxInput } from \"./TransactionInput\";\n\nexport const todo = {};\n\nexport type TransactionSubType =\n    | \"__staking\"\n    | \"__delegated\"\n    | \"__undelegated\"\n    | \"\";\n\nexport const transactionPropertyDisplayNames: Record<string, string> = {\n  shardID: \"Shard ID\",\n  hash: \"Ethereum Hash\",\n  hash__staking: \"Hash\",\n  hash_harmony: \"Hash\",\n  value: \"Value\",\n  blockNumber: \"Block Number\",\n  from: \"From\",\n  txnFee: \"Txn fee\",\n  gasUsed: \"Gas Limit & Usage by Txn\",\n  gasPrice: \"Gas Price\",\n  transactionFee: \"Transaction Fee\",\n  input: \"Input\",\n  nonce: \"Nonce\",\n  r: \"r\",\n  s: \"s\",\n  timestamp: \"Timestamp\",\n  to: \"To\",\n  toShardID: \"To Shard ID\",\n  transactionIndex: \"Transaction Index\",\n  v: \"v\",\n  type: \"Type\",\n  amount: \"Amount\",\n  tokenTransfers: \"Token Transfers\",\n  name: \"Name\",\n  commissionRate: \"Commission Rate\",\n  maxCommissionRate: \"Max Commission Rate\",\n  maxChangeRate: \"Max Change Rate\",\n  minSelfDelegation: \"Min Self Delegation\",\n  maxTotalDelegation: \"Max Total Delegation\",\n  website: \"Website\",\n  identity: \"Identity\",\n  securityContract: \"Security Contract\",\n  details: \"Details\",\n  slotPubKeys: \"Details\",\n  slotPubKeyToAdd: \"Slot Pub Key To Add\",\n  slotPubKeyToRemove: \"Slot Pub Key To Remove\",\n  delegatorAddress: \"Delegator Address\",\n  validatorAddress: \"Validator Address\"\n};\n\nexport const transactionPropertySort: Record<string, number> = {\n    shardID: 1000,\n    hash: 900,\n    hash_harmony: 950,\n    value: 600,\n    tokenTransfers: 599,\n    blockNumber: 800,\n    blockHash: 799,\n    from: 700,\n    to: 650,\n    txnFee: 560,\n    transactionFee: 550,\n    gasUsed: 540,\n    gasPrice: 500,\n    input: 300,\n    nonce: 350,\n    r: 0,\n    s: 0,\n    timestamp: 750,\n    toShardID: 1,\n    transactionIndex: 350,\n    v: 0\n};\n\nexport const transactionPropertyDescriptions: Record<string, string> = {\n    Status: \"The status of the transaction\",\n    shardID: \"The shard number where the transaction belongs.\",\n    blockNumber: \"The number of the block in which the transaction was recorded.\",\n    hash: \"A TxHash or transaction hash is a unique 66 characters identifier that is generated whenever a transaction is executed.\",\n    hash_harmony:\n        \"A TxHash or transaction hash is a unique 66 characters identifier that is generated whenever a transaction is executed. Shard ID is also involved in calculation of Zippy Hash.\",\n    from: \"The sending party of the transaction (could be from a contract address).\",\n    to: \"The receiving party of the transaction (could be a contract address).\",\n    value: \"The value being transacted in ZPT and fiat value.\",\n    txnFee: \"Transaction fee\",\n    transactionFee: \"Transaction fee\",\n    // gas: \"The exact units of gas that was used for the transaction.\",\n    transactionIndex: \"Transaction's number in the block\",\n    gasUsed: \"The exact units of gas that was used for the transaction.\",\n    gasPrice:\n        \"Cost per unit of gas specified for the transaction, in ZPT. The higher the gas price the higher chance of getting included in a block.\",\n    input: \"Additional information that is required for the transaction.\",\n    gasLimit: \"Total gas limit provided by all transactions in the block.\",\n    timestamp: \"The date and time at which a transaction is mined.\",\n    difficulty:\n        \"The amount of effort required to mine a new block. The difficulty algorithm may adjust according to time.\",\n    nonce:\n        \"Sequential running number for an address, beginning with 0 for the first transaction. For example, if the nonce of a transaction is 10, it would be the 11th transaction sent from the sender's address\",\n    size: \"The block size is actually determined by the block's gas limit.\",\n    v: \"Value for the transaction's signature\",\n    r: \"Value for the transaction's signature\",\n    s: \"Value for the transaction's signature\",\n    validatorAddress: \"Validator address\",\n    validatorAddress__delegated: \"Delegation validator address\",\n    validatorAddress__undelegated: \"Delegation delegator address\",\n    delegatorAddress: \"Delegator address\",\n    delegatorAddress__delegated: \"Delegator address\",\n    delegatorAddress__undelegated: \"Undelegation delegator address\",\n    amount: \"Stake amount for validator\",\n    amount__delegated: \"Amount for delegation to validator\",\n    amount__undelegated: \"Amount for undelegation to delegator\",\n    name: \"Validator name\",\n    commissionRate: \"Validator commission rate\",\n    maxCommissionRate: \"Validator commission rate\",\n    maxChangeRate: \"validator max commission rate change\",\n    minSelfDelegation: \"Min how much validator self delegates\",\n    maxTotalDelegation: \"Max total delegation to validator\",\n    website: \"Validator website\",\n    identity: \"Validator kyc identity\",\n    securityContact: \"Validator security contact\",\n    details: \"Additional validator info\",\n    slotPubKeys: \"Validator bls pub keys\",\n    slotPubKeyToAdd: \"Validator bls pub key to add\",\n    slotPubKeyToRemove: \"Validator bls pub key to remove\",\n    tokenTransfers: \"Token Transfers\"\n};\n\nexport const transactionPropertyDisplayValues: any = {\n    // @ts-ignore\n    blockNumber: (value: any, data: any) => (\n        <BlockNumber number={value} hash={data[\"blockHash\"]}/>\n    ),\n    from: (value: any) => <Address address={value}/>,\n    value: (value: any, tx: any, internalTxs: any[]) => {\n        const filteredInternalTxs = internalTxs.filter(t => {\n            return (t.value !== value || internalTxs.length > 1)\n        })\n\n        const values = [{value}, ...filteredInternalTxs]\n            .filter((internalTx, i) => +internalTx.value || i === 0)\n            .map((internalTx, i) => {\n                const v = internalTx.value\n                const bi = BigInt(v) / BigInt(10 ** 14);\n                const copyValue = parseInt(bi.toString()) / 10000;\n                return (\n                    <div style={{display: 'flex', flexDirection: 'row'}}>\n                        <CopyBtn value={'' + copyValue} showNotification={true} />\n                        &nbsp;&nbsp;<ZPTValue value={v} timestamp={tx.timestamp}/>\n                        {i > 0 && <>\n                          &nbsp;\n                          <Address\n                              isShort={true}\n                              address={internalTx.from}/>\n                          <div>\n                            <FormNextLink size=\"small\" color=\"brand\"/>\n                          </div>\n                          <Address\n                              isShort={true}\n                              address={internalTx.to}/>\n                          &nbsp;Internal\n                        </>}\n                    </div>\n                )\n            })\n\n        return (<span>\n            {values.length ? values : <ZPTValue value={value} timestamp={tx.timestamp}/>}\n        </span>)\n    },\n    to: (value: any) => <Address address={value}/>,\n    hash: (value: any) => <TransactionHash hash={value}/>,\n    hash__staking: (value: any) => (\n        <TransactionHash hash={value} link=\"staking-tx\"/>\n    ),\n    hash_harmony: (value: any) => <TransactionHash hash={value}/>,\n    blockHash: (value: any) => <BlockHash hash={value}/>,\n    timestamp: (value: any) => <DateTime date={value}/>,\n    gasUsed: (value: any, tx: RPCTransactionHarmony) => (\n        <span>\n      {value}\n            {/* {value} ({+value / +tx.gas}%){\" \"} */}\n    </span>\n    ),\n    shardID: (value: any, tx: RPCTransactionHarmony) => (\n        <span>\n      {value}\n            <FormNextLink size=\"small\" color=\"brand\"/>\n            {tx.toShardID}\n    </span>\n    ),\n    type: (value: any) => <StakingTransactionTypeValue type={value}/>,\n    amount: (value: any, tx: any, internalTxs: any[]) => {\n        return (\n            <ZPTValue value={value} timestamp={tx.timestamp}/>\n        )\n    },\n\n    name: (value: any) => <span>{value}</span>,\n    delegatorAddress: (value: any) => <Address address={value}/>,\n    validatorAddress: (value: any) => <Address address={value}/>,\n    commissionRate: (value: any) => <span>{value}</span>,\n    maxCommissionRate: (value: any) => <span>{value}</span>,\n    maxChangeRate: (value: any) => <span>{value}</span>,\n    minSelfDelegation: (value: any) => <span>{value}</span>,\n    maxTotalDelegation: (value: any) => <span>{value}</span>,\n    website: (value: any) => <a href={value}>{value}</a>,\n    identity: (value: any) => <span>{value}</span>,\n    securityContact: (value: any) => <span>{value}</span>,\n    details: (value: any) => <span>{value}</span>,\n    slotPubKeys: (value: any) => <span>{value}</span>,\n    slotPubKeyToAdd: (value: any) => <span>{value}</span>,\n    slotPubKeyToRemove: (value: any) => <span>{value}</span>,\n    tokenTransfers: (value: any) => <span>{value}</span>,\n    transactionFee: (value: any, tx: any) => {\n        return <>{value}</>;\n    },\n    input: (value: any, tx: RPCTransactionHarmony, _: any, inputSignature: IHexSignature) => <TxInput\n      input={tx.input}\n      inputSignature={inputSignature}\n    />\n};\n\nexport const transactionDisplayValues = (\n    transaction: RPCTransactionHarmony,\n    key: string,\n    value: any,\n    type: string,\n    internalTxs: any[] = [],\n    inputSignature: IHexSignature\n) => {\n    if ([\"blockHash\", \"toShardID\", \"msg\"].includes(key)) {\n        return;\n    }\n\n    const f: null | Function =\n        transactionPropertyDisplayValues[key + type] ||\n        transactionPropertyDisplayValues[key];\n\n    let displayValue = value;\n\n    if (f) {\n        displayValue = f(value, transaction, internalTxs, inputSignature);\n    } else {\n        if (Array.isArray(value)) {\n            displayValue = value.join(\", \");\n        }\n\n        if (value && value.length && value.length > 66) {\n            displayValue = value.slice(0, 63) + \"...\";\n        }\n\n        if (displayValue === \"0x\") {\n            displayValue = null;\n        }\n    }\n\n    if (displayValue === null || displayValue === undefined) {\n        if ([\"success\", \"error\"].find((nameKey) => nameKey === key)) {\n            return;\n        }\n        displayValue = \"—\";\n    }\n\n    const text = typeof value === \"string\" ? value : <>{value}</>;\n    const copyText =\n        typeof text === \"string\" &&\n        ![\"from\", \"to\", \"type\", \"delegatorAddress\", \"validatorAddress\", \"value\", \"input\"]\n          .find((item) => item === key)\n            ? text\n            : \"\";\n\n    return (\n        <Box direction=\"row\" align=\"baseline\" style={{ maxWidth: '700px' }}>\n            {![\"shardID\"].includes(key) && ![0, \"0\", \"—\"].includes(displayValue) && (\n                <>\n                    {copyText\n                      ? <CopyBtn value={copyText} showNotification={true} />\n                      : null\n                    }\n                    &nbsp;\n                </>\n            )}\n            {displayValue}\n        </Box>\n    );\n};\n","import React from \"react\";\nimport { Box, Text } from \"grommet\";\nimport { CircleAlert, StatusGood } from \"grommet-icons\";\n\nexport function TxStatusComponent(props: { msg?: string }) {\n  const { msg } = props;\n  return msg ? (\n    <Box direction={\"row\"} align={\"center\"}>\n      <Box\n        align={\"center\"}\n        direction={\"row\"}\n        background=\"backgroundError\"\n        style={{ borderRadius: \"6px\", marginRight: \"10px\", padding: \"3px 8px\" }}\n      >\n        <CircleAlert color={\"errorText\"} size={\"small\"} />\n        <Text color={\"errorText\"} size={\"small\"} style={{ marginLeft: \"5px\" }}>\n          Error\n        </Text>\n      </Box>\n      <Text color={\"errorText\"} size={\"xsmall\"}>\n        {msg}\n      </Text>\n    </Box>\n  ) : (\n    <Box\n      direction={\"row\"}\n      align={\"center\"}\n      background={\"backgroundSuccess\"}\n      style={{ borderRadius: \"6px\", marginRight: \"10px\", padding: \"3px 8px\" }}\n    >\n      <StatusGood color={\"successText\"} size={\"small\"} />\n      <Text color={\"successText\"} size={\"small\"} style={{ marginLeft: \"5px\" }}>\n        Success\n      </Text>\n    </Box>\n  );\n}\n","import React, { FunctionComponent, useState } from \"react\";\nimport { IHexSignature, Log, RPCStakingTransactionHarmony, RPCTransactionHarmony } from \"src/types\";\nimport {tokenTransfersERC20} from './tokenTransfer/tokenTransfersERC20'\n// import {tokenTransfersERC721} from './tokenTransfer/tokenTransfersERC721'\nimport {TokenTransfersERC1155} from './tokenTransfer/tokenTransfersERC1155'\n\nimport {\n  transactionPropertyDisplayNames,\n  transactionDisplayValues,\n  transactionPropertySort,\n  transactionPropertyDescriptions,\n} from \"./helpers\";\nimport {\n  Address,\n  CalculateFee,\n  CalculateTransactionFee, formatNumber,\n  TipContent\n} from \"src/components/ui\";\nimport { Anchor, Box, DataTable, Text, Tip } from \"grommet\";\nimport { TransactionSubType } from \"src/components/transaction/helpers\";\nimport { parseSuggestedEvent, DisplaySignature } from \"src/web3/parseByteCode\";\n\nimport { CaretDownFill, CaretUpFill, CircleQuestion } from \"grommet-icons\";\nimport { TxStatusComponent } from \"../ui/TxStatusComponent\";\n\nconst getColumns = ({ type = \"\" }) => [\n  {\n    property: \"key\",\n    render: (e: any) => (\n      <div>\n        <Tip\n          dropProps={{ align: { left: \"right\" } }}\n          content={\n            <TipContent\n              message={\n                <Text size={'small'}>\n                  {transactionPropertyDescriptions[e.key + type] ||\n                    transactionPropertyDescriptions[e.key]}\n                </Text>\n              }\n            />\n          }\n        >\n          <span>\n            <CircleQuestion size=\"small\" />\n          </span>\n        </Tip>\n        &nbsp;\n        {transactionPropertyDisplayNames[e.key + type] ||\n          transactionPropertyDisplayNames[e.key] ||\n          e.key}\n      </div>\n    ),\n    size: \"1/3\",\n  },\n  {\n    property: \"value\",\n    size: \"2/3\",\n    render: (e: any) => e.value,\n  },\n];\n\ntype TransactionDetailsProps = {\n  internalTxs?: any[];\n  transaction: RPCTransactionHarmony | RPCStakingTransactionHarmony;\n  inputSignature?: IHexSignature;\n  type?: TransactionSubType;\n  stakingData?: boolean;\n  logs?: Log[];\n  errorMsg: string | undefined;\n  hideShowMore?: boolean;\n};\n\ntype tableEntry = {\n  key: string;\n  value: any;\n};\n\n// todo move out to a service to support any custom ABI\n\nconst tokenTransfers = (logs: Log[]) => {\n  return (\n  <>\n    {tokenTransfersERC20(logs)}\n    {TokenTransfersERC1155(logs)}\n  </>\n  )\n}\n\nconst GasUsed = (props: { tx: RPCTransactionHarmony | RPCStakingTransactionHarmony }) => {\n  const { tx: { gas, gasLimit } } = props\n  if (gas && gasLimit) {\n    const percent = ((+gas / +gasLimit) * 100).toFixed(2)\n    return <Box direction={'row'} gap={'12px'}>\n      <Text size={'small'}>{formatNumber(+gasLimit)}</Text>\n      <Text size={'small'} color={'grey'}>|</Text>\n      <Text size={'small'}>{formatNumber(+gas)} ({percent}%)</Text>\n    </Box>\n  }\n  return <>\n    {gas}\n  </>\n}\n\n\nexport const TransactionDetails: FunctionComponent<TransactionDetailsProps> = ({\n  transaction,\n  type,\n  logs = [],\n  errorMsg,\n  hideShowMore,\n  stakingData,\n  internalTxs = [],\n  inputSignature\n}) => {\n  const [showDetails, setShowDetails] = useState(false);\n\n  const newTransaction = {\n    Status:\n      errorMsg === undefined ? (\n        +transaction.shardID > 0 ? (\n          <TxStatusComponent msg={\"\"} />\n        ) : (\n          <> </>\n        )\n      ) : (\n        <TxStatusComponent msg={errorMsg} />\n      ),\n    ...transaction,\n    tokenTransfers: tokenTransfers(logs),\n    transactionFee: (\n      <Box justify=\"center\">{CalculateTransactionFee(transaction)}</Box>\n    ),\n    gasUsed: (\n      <Box justify=\"center\">\n        <GasUsed tx={transaction} />\n      </Box>\n    ),\n    gasPrice: <Box justify=\"center\">{CalculateFee(transaction)}</Box>,\n  };\n\n  const keys = Object.keys(newTransaction).filter((key) => {\n    if (stakingData) {\n      return (\n        [\"tokenTransfers\", \"transactionFee\", \"gasPrice\", \"Status\"].indexOf(\n          key\n        ) === -1\n      );\n    } else {\n      return key !== \"gas\" && key !== 'extraMark';\n    }\n  });\n  const sortedKeys = keys\n    .sort((a, b) => transactionPropertySort[b] - transactionPropertySort[a])\n    .filter((k) => showDetails || [\"r\", \"s\", \"v\", \"gasLimit\"].indexOf(k) === -1);\n\n  const txData = sortedKeys.reduce((arr, key) => {\n    // @ts-ignore\n    const value = transactionDisplayValues(\n      // @ts-ignore\n      newTransaction,\n      key,\n      // @ts-ignore\n      newTransaction[key],\n      type,\n      internalTxs,\n      inputSignature\n    );\n\n    if (value === undefined) {\n      return arr;\n    }\n\n    arr.push({ key, value } as tableEntry);\n    return arr;\n  }, [] as tableEntry[]);\n\n\n  const value = internalTxs\n\n  return (\n    <>\n      <Box flex align=\"start\" justify=\"start\" style={{ overflow: \"auto\" }}>\n        <DataTable\n          className={\"g-table-body-last-col-right g-table-no-header\"}\n          style={{ width: \"100%\", minWidth: \"698px\" }}\n          columns={getColumns({ type })}\n          data={txData}\n          step={10}\n          border={{\n            header: false,\n            body: {\n              color: \"border\",\n              side: \"bottom\",\n              size: \"1px\",\n            },\n          }}\n        />\n      </Box>\n      {hideShowMore ? null : (\n        <Box align=\"center\" justify=\"center\" style={{ userSelect: \"none\" }}>\n          <Anchor\n            onClick={() => setShowDetails(!showDetails)}\n            margin={{ top: \"medium\" }}\n          >\n            {showDetails ? (\n              <>\n                Show less&nbsp;\n                <CaretUpFill size=\"small\" />\n              </>\n            ) : (\n              <>\n                Show more&nbsp;\n                <CaretDownFill size=\"small\" />\n              </>\n            )}\n          </Anchor>\n        </Box>\n      )}\n    </>\n  );\n};\n","import { DataTable, DataTableExtendedProps } from \"grommet\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nexport interface ITableComponentProps {\n  tableProps: DataTableExtendedProps<any>;\n  className?: string;\n  alwaysOpenedRowDetails?: boolean;\n}\n\nconst Flex = styled.div`\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  box-sizing: border-box;\n  max-width: 100%;\n  min-width: 0;\n  min-height: 0;\n  -webkit-flex-direction: column;\n  -ms-flex-direction: column;\n  flex-direction: column;\n`;\n\nexport class TableComponent extends React.Component<ITableComponentProps> {\n  private element!: HTMLDivElement;\n\n  componentDidUpdate() {\n    this.clickExpandButtons();\n  }\n\n  clickExpandButtons = () => {\n    if (this.props.alwaysOpenedRowDetails) {\n      const headerTd = Array.from(\n        this.element.querySelectorAll(\"table thead tr td:first-child\")\n      ) as HTMLButtonElement[];\n\n      headerTd.forEach((td) => (td.style.display = \"none\"));\n\n      const bodyTd = Array.from(\n        this.element.querySelectorAll(\"table tbody tr td:first-child\")\n      ) as HTMLButtonElement[];\n\n      bodyTd.forEach((td) => (td.style.display = \"none\"));\n\n      const expandButtons = Array.from(\n        this.element.querySelectorAll(\"table tr td:first-child button\")\n      ) as HTMLButtonElement[];\n\n      expandButtons.forEach((expandButton) => {\n        const svg = expandButton.querySelector(\"svg\") as SVGElement;\n        (svg.parentNode as HTMLDivElement).style.display = \"none\";\n        expandButton.style.width = \"1px\";\n        expandButton.style.height = \"1px\";\n      });\n\n      setTimeout(() => {\n        expandButtons.forEach((item) => item.click());\n      }, 10);\n    }\n  };\n\n  render() {\n    return (\n      <Flex\n        ref={(element: any) => (this.element = element)}\n        className={this.props.className}\n      >\n        <DataTable\n          {...(this.props.tableProps as any)}\n          onMore={\n            this.props.alwaysOpenedRowDetails\n              ? () => {\n                  if (this.props.tableProps.onMore) {\n                    this.props.tableProps.onMore();\n                  }\n                  this.clickExpandButtons();\n                }\n              : undefined\n          }\n        />\n      </Flex>\n    );\n  }\n}\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport { Box, DataTable, Text, Spinner, ColumnConfig } from \"grommet\";\nimport { Filter, RPCTransactionHarmony } from \"src/types\";\nimport { useHistory } from \"react-router-dom\";\nimport { FormNextLink } from \"grommet-icons\";\nimport {\n  Address,\n  formatNumber,\n  DateTime,\n  PaginationNavigator,\n  PaginationRecordsPerPage,\n  ZPTValue,\n} from \"src/components/ui\";\nimport { TableComponent } from \"./TableComponents\";\n\nfunction getColumns(props: any) {\n  const { history } = props;\n  return [\n    {\n      property: \"shard\",\n      size: \"xxsmall\",\n      resizeable: false,\n      header: (\n        <Text color=\"minorText\" size=\"small\">\n          Shard\n        </Text>\n      ),\n      render: (data: RPCTransactionHarmony) => (\n        <Box direction=\"row\" gap=\"3px\" align=\"center\">\n          <Text size=\"small\">{data.shardID}</Text>\n          <FormNextLink\n            size=\"small\"\n            color=\"brand\"\n            style={{ marginBottom: \"2px\" }}\n          />\n          <Text size=\"small\">{data.toShardID}</Text>\n        </Box>\n      ),\n    },\n    {\n      property: \"hash\",\n      size: \"xsmall\",\n      resizeable: false,\n      header: (\n        <Text color=\"minorText\" size=\"small\">\n          Hash\n        </Text>\n      ),\n      render: (data: RPCTransactionHarmony) => (\n        <Text\n          size=\"small\"\n          style={{ cursor: \"pointer\" }}\n          onClick={() => {\n            history.push(`/tx/${data.hash}`);\n          }}\n          color=\"brand\"\n        >\n          <Address address={data.hash} isShort />\n        </Text>\n      ),\n    },\n    {\n      property: \"block_number\",\n      size: \"260px\",\n      resizeable: false,\n      header: (\n        <Text color=\"minorText\" size=\"small\">\n          Block number\n        </Text>\n      ),\n      render: (data: RPCTransactionHarmony) => {\n        return (\n          <Text\n            size=\"small\"\n            style={{ cursor: \"pointer\" }}\n            onClick={() => {\n              history.push(`/block/${data.blockNumber}`);\n            }}\n            color=\"brand\"\n          >\n            {formatNumber(+data.blockNumber)}\n          </Text>\n        );\n      },\n    },\n    {\n      property: \"from\",\n      size: \"large\",\n      resizeable: false,\n      header: (\n        <Text color=\"minorText\" size=\"small\">\n          From\n        </Text>\n      ),\n      render: (data: RPCTransactionHarmony) => <Address address={data.from} />,\n    },\n    {\n      property: \"to\",\n      size: \"large\",\n      resizeable: false,\n      header: (\n        <Text color=\"minorText\" size=\"small\">\n          To\n        </Text>\n      ),\n      render: (data: RPCTransactionHarmony) => <Address address={data.to} />,\n    },\n    {\n      property: \"value\",\n      size: \"380px\",\n      resizeable: false,\n      header: (\n        <Text color=\"minorText\" size=\"small\">\n          ZPTValue\n        </Text>\n      ),\n      render: (data: RPCTransactionHarmony) => (\n        <Box justify=\"center\">\n          <ZPTValue value={data.value} timestamp={data.timestamp} />\n        </Box>\n      ),\n    },\n    {\n      property: \"timestamp\",\n      resizeable: false,\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ width: '180px' }}>\n          Timestamp\n        </Text>\n      ),\n      render: (data: RPCTransactionHarmony) => (\n        <Box direction=\"row\" gap=\"xsmall\" justify=\"end\">\n          <DateTime date={data.timestamp} />\n        </Box>\n      ),\n    },\n  ];\n}\n\ninterface TransactionTableProps {\n  rowDetails?: (row: any) => JSX.Element;\n  data: any[];\n  columns?: ColumnConfig<any>[];\n  totalElements: number;\n  limit: number;\n  filter: Filter;\n  setFilter: (filter: Filter) => void;\n  showIfEmpty?: boolean;\n  emptyText?: string;\n  hidePagination?: boolean;\n  isLoading?: boolean;\n  hideCounter?: boolean;\n  minWidth?: string;\n  noScrollTop?: boolean;\n  step?: number;\n  primaryKey?: string;\n  showPages?: boolean\n  textType?: string\n  paginationOptions?: string[]\n}\n\nexport function TransactionsTable(props: TransactionTableProps) {\n  const history = useHistory();\n  const {\n    data,\n    totalElements,\n    limit,\n    step = 10,\n    filter,\n    setFilter,\n    showIfEmpty,\n    emptyText = \"No data to display\",\n    columns,\n    hidePagination,\n    isLoading,\n    hideCounter,\n    noScrollTop,\n    minWidth = \"1310px\",\n    showPages = false,\n    textType = 'transaction',\n    paginationOptions,\n  } = props;\n\n  const _IsLoading = isLoading;\n\n  // useEffect(() => {\n  //   filter.offset = 0;\n  //   setFilter(filter);\n  // }, [filter.limit]);\n\n  return (\n    <>\n      <Box\n        direction=\"row\"\n        justify={hidePagination ? \"start\" : \"between\"}\n        pad={{ bottom: \"small\" }}\n        margin={{ bottom: \"0\" }}\n      >\n        {!hideCounter ? (\n          <Text style={{ flex: \"1 1 100%\" }}>\n            <b>{Math.min(limit, data.length)}</b> {textType}\n            {data.length !== 1 ? \"s\" : \"\"} shown\n          </Text>\n        ) : (\n          <Box />\n        )}\n        {!hidePagination && (\n          <PaginationNavigator\n            onChange={setFilter}\n            isLoading={isLoading}\n            filter={filter}\n            totalElements={totalElements}\n            elements={data}\n            noScrollTop={noScrollTop}\n            property=\"block_number\"\n            showPages={showPages}\n          />\n        )}\n      </Box>\n      <Box\n        style={{\n          overflow: \"auto\",\n          opacity: _IsLoading ? \"0.4\" : \"1\",\n          transition: \"0.1s all\",\n          minHeight: _IsLoading || data.length > 0 ? \"600px\" : 'unset',\n        }}\n      >\n        {_IsLoading ? (\n          <Box align={\"center\"} justify={\"center\"} flex>\n            <Spinner size={\"large\"} />\n          </Box>\n        ) : (\n          <TableComponent\n            alwaysOpenedRowDetails={!!props.rowDetails}\n            tableProps={{\n              className: \"g-table-transactions\",\n              style: { width: \"100%\", minWidth, tableLayout: 'auto' },\n              columns: columns ? columns : getColumns({ history }),\n              data: data,\n              step,\n              primaryKey: props.primaryKey ? props.primaryKey : undefined,\n              background: {\n                header: {\n                  color: 'tableRowHover'\n                }\n              },\n              border: {\n                header: {\n                  color: \"border\",\n                  side: 'top',\n                  size: '1px'\n                },\n                body: {\n                  color: \"border\",\n                  side: \"top\",\n                  size: \"1px\",\n                },\n              },\n              rowDetails: props.rowDetails\n                ? (row: any) => (\n                    <div style={{ textAlign: \"left\" }}>\n                      {props.rowDetails && props.rowDetails(row)}\n                    </div>\n                  )\n                : undefined,\n            }}\n          />\n        )}\n      </Box>\n      {!_IsLoading && data.length === 0 &&\n          <Box style={{ height: \"120px\" }} justify=\"center\" align=\"center\">\n            <Text size=\"small\">{emptyText}</Text>\n          </Box>\n      }\n      {!hidePagination && (\n        <Box\n          direction=\"row\"\n          justify=\"between\"\n          align=\"center\"\n          margin={{ top: \"medium\" }}\n        >\n          <PaginationRecordsPerPage filter={filter} options={paginationOptions} onChange={setFilter} />\n          <PaginationNavigator\n            onChange={setFilter}\n            isLoading={isLoading}\n            filter={filter}\n            totalElements={totalElements}\n            elements={data}\n            noScrollTop={noScrollTop}\n            property=\"block_number\"\n            showPages={showPages}\n          />\n        </Box>\n      )}\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Box, Text } from \"grommet\";\n\nimport { TransactionsTable } from \"src/components/tables/TransactionsTable\";\nimport { Filter, InternalTransaction } from \"src/types\";\nimport {\n  Address,\n  ZPTValue,\n  PaginationNavigator,\n  TransactionType,\n} from \"src/components/ui\";\nimport { DisplaySignatureMethod } from \"src/web3/parseByteCode\";\n\ninterface InternalTransactionListProps {\n  list: InternalTransaction[];\n  hash: string;\n  timestamp: string;\n}\n\nexport function InternalTransactionList(props: InternalTransactionListProps) {\n  const limitValue = localStorage.getItem(\"tableLimitValue\");\n\n  const initFilter: Filter = {\n    offset: 0,\n    limit: limitValue ? +limitValue : 100,\n    orderBy: \"block_number\",\n    orderDirection: \"desc\",\n    filters: [{ type: \"gte\", property: \"block_number\", value: 0 }],\n  };\n\n  const { list, hash, timestamp } = props;\n  const [filter, setFilter] = useState<Filter>(initFilter);\n\n  const { limit = 100, offset = 0 } = filter;\n  const pageSize = 10;\n  const curPage = +(+offset / limit).toFixed(0) + 1;\n\n  const data = list\n    .sort((a, b) => (a.index > b.index ? 1 : -1))\n    // no need in pagination\n    // .slice(pageSize * (curPage - 1), pageSize * curPage)\n    .map((item) => ({ ...item }));\n\n  return (\n    <Box margin={{ top: \"medium\" }}>\n      <TransactionsTable\n        columns={getColumns({ timestamp })}\n        data={data.sort((a, b) => (a.index > b.index ? 1 : -1))}\n        totalElements={data.length}\n        step={data.length}\n        showIfEmpty\n        emptyText={\"No Internal Transactions for this hash \" + hash}\n        limit={+limit}\n        filter={filter}\n        setFilter={(newFilter) => {\n          if (newFilter.limit !== initFilter.limit) {\n            localStorage.setItem(\"tableLimitValue\", \"100\");\n          }\n\n          setFilter(newFilter);\n        }}\n        minWidth=\"960px\"\n        primaryKey={\"index\"}\n        rowDetails={(row) => (\n          <DisplaySignatureMethod\n            key={`${row.from}_${row.to}`}\n            input={row && row.input ? row.input : null}\n            signatures={row && row.signatures ? row.signatures : null}\n          />\n        )}\n      />\n    </Box>\n  );\n}\n\nfunction getColumns(props?: any) {\n  const { timestamp } = props;\n\n  return [\n    {\n      property: \"type\",\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Type\n        </Text>\n      ),\n      render: (data: InternalTransaction) => (\n        <Text size=\"small\">\n          <TransactionType type={data.type} />\n        </Text>\n      ),\n    },\n    /*  {\n      property: \"method\",\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Suggested Method\n        </Text>\n      ),\n      render: (data: InternalTransaction) => {\n        let signature;\n        try {\n          // @ts-ignore\n          signature =\n            data.signatures &&\n            data.signatures.map((s) => s.signature)[0].split(\"(\")[0];\n        } catch (err) {}\n\n        return <Text size=\"small\">{signature || \"—\"}</Text>;\n      },\n    },*/\n    {\n      property: \"from\",\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          From\n        </Text>\n      ),\n      render: (data: InternalTransaction) => (\n        <Text size=\"small\">\n          <Address address={data.from} />\n        </Text>\n      ),\n    },\n    {\n      property: \"to\",\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          To\n        </Text>\n      ),\n      render: (data: InternalTransaction) => (\n        <Text size=\"small\">\n          <Address address={data.to} />\n        </Text>\n      ),\n    },\n    {\n      property: \"value\",\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          ZPTValue\n        </Text>\n      ),\n      render: (data: InternalTransaction) => (\n        <Box justify=\"center\" align=\"end\">\n          <ZPTValue value={data.value} timestamp={timestamp} />\n        </Box>\n      ),\n    },\n  ];\n}\n","import React from 'react'\nimport { Box, Text } from 'grommet'\n\nimport { Address } from 'src/components/ui'\nimport { parseSuggestedEvent, DisplaySignature } from 'src/web3/parseByteCode'\n\ninterface TransactionLogsProps {\n  logs: any[];\n  hash: string;\n}\n\nexport function TransactionLogs(props: TransactionLogsProps) {\n  const { logs, hash } = props\n\n  if (!logs.length) {\n    return (\n      <Box style={{ height: '120px' }} justify=\"center\" align=\"center\">\n        <Text size=\"small\">\n          No Logs for <b>{hash}</b>\n        </Text>\n      </Box>\n    )\n  }\n\n  return (\n    <Box margin={{ top: 'medium' }}>\n      {logs\n        .sort((a, b) => a.logIndex - b.logIndex)\n        .map((log, i) => (\n          <LogItem key={i} log={log} />\n        ))}\n    </Box>\n  )\n}\n\ninterface LogItemProps {\n  log: {\n    address: string;\n    topics: string[];\n    data: string;\n    signatures: any[] | null\n  };\n}\n\nconst LogItem = (props: LogItemProps) => {\n  const { address, topics, data, signatures } = props.log\n\n  let parsedEvents: any = null\n\n  try {\n    // @ts-ignore\n    parsedEvents = signatures.map(s => s.signature)\n      .map(s => parseSuggestedEvent(s, data, topics))\n  } catch (err) {\n  }\n\n  const displaySignature = parsedEvents && parsedEvents[0] && DisplaySignature(parsedEvents[0]) || null\n\n  return (\n    <Box\n      gap=\"small\"\n      border={{ size: 'xsmall', side: 'bottom', color: 'border' }}\n      pad={{ bottom: 'small' }}\n    >\n      <Box>\n        <Text color=\"minorText\" size=\"small\">\n          Address\n        </Text>\n        <Text size=\"small\" color=\"brand\">\n          <Address address={address} style={{ wordBreak: 'break-all' }} />\n        </Text>\n      </Box>\n\n      {signatures && signatures.length ?\n      <Box>\n        <Text color=\"minorText\" size=\"small\">\n          Suggested Event\n        </Text>\n        <Text size=\"small\">\n          {displaySignature || signatures[0].signature || ''}\n        </Text>\n      </Box>\n      : null}\n\n      <Box>\n        <Text color=\"minorText\" size=\"small\">\n          Topics\n        </Text>\n        <Box gap=\"xxsmall\">\n          {topics.map(((topic, i) => (\n            <Text size=\"small\" color=\"brand\" style={{ wordBreak: 'break-all' }}>\n              {topic}{i !== topics.length - 1 ? ', ' : ''}\n            </Text>\n          )))}\n        </Box>\n      </Box>\n      <Box>\n        <Text color=\"minorText\" size=\"small\">\n          Data\n        </Text>\n        <Text size=\"small\" color=\"brand\" style={{ wordBreak: 'break-all' }}>\n          {data}\n        </Text>\n      </Box>\n    </Box>\n  )\n}\n","import { HarmonyAddress } from \"./getAddress/GetAddress\";\nimport { ApprovalDetails, RPCTransactionHarmony, TokenType } from \"../types/blockchain\";\nimport Web3 from \"web3\";\nimport { AbiItem } from 'web3-utils';\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport { ERC1155_Pool } from \"src/hooks/ERC1155_Pool\";\nimport { ERC20_Pool } from \"src/hooks/ERC20_Pool\";\nimport { ERC721_Pool } from \"src/hooks/ERC721_Pool\";\n\nconst approvalERC20ABI: AbiItem[] = [\n    {\n        constant: false,\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"spender\",\n                type: \"address\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"tokens\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"approve\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"success\",\n                type: \"bool\"\n            }\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    }\n];\n\nconst approvalNonFungibleABI: AbiItem[] = [\n    { \"constant\": false, \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }], \"name\": \"approve\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" },\n    { \"constant\": false, \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" }], \"name\": \"setApprovalForAll\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }\n];\n\nexport const convertTxnToObj = (tx: any, type: TokenType): ApprovalDetails => {\n    const assetAddress = new HarmonyAddress(tx.to).basicHex;\n\n    const approvedObj: ApprovalDetails = {\n        hash: tx.hash,\n        lastUpdated: new Date(+tx.timestamp * 1000),\n        assetAddress: assetAddress,\n        spender: \"0x\" + tx.input.substring(34, 74),\n        allowance: allowanceAmount(tx),\n        action: \"action\",\n        account: new HarmonyAddress(tx.from).basicHex,\n        contract: tx.to,\n        type: type\n    };\n    const amount = tx.input.substring(74);\n\n    if (type === \"ERC1155\" || type === \"ERC721\") {\n        if (!matchesApproveAllNonFungible(tx)) {\n            approvedObj.tokenId = parseInt(amount, 16); // get the token id\n            approvedObj.isFullApproval = false;\n            approvedObj.action = \"approve\";\n        }\n        else {\n            approvedObj.tokenId = undefined; // this marks full approval\n            approvedObj.isFullApproval = true;\n            approvedObj.action = \"setApproveForAll\";\n        }\n        // else its full approval so this is null\n    }\n    else {\n        approvedObj.isFullApproval = approvedObj.allowance === \"Unlimited\";\n        approvedObj.action = \"approve\";\n\n        if (!approvedObj.isFullApproval) {\n            approvedObj.tokenAmount = parseInt(amount, 16);\n        }\n    }\n\n    return approvedObj;\n}\n\nconst approval20Hash = \"0x095ea7b3\";\nconst approval721Hash = \"0x095ea7b3\"; // address of approval and id\nconst approvalAll721Hash = \"0xa22cb465\"; // setApprovalForAll - but check if the approve is true/false for second arg\n\nconst approval1155Hash = \"0x095ea7b3\"; // address of approval and id, if address is 0 then remove from list\nconst approvalAll1155Hash = \"0xa22cb465\"; // setApprovalForAll - this allows full approval ...\nconst unlimitedAllowance = \"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\";\nconst EMPTY_ADDRESS = \"0x0000000000000000000000000000000000000000\";\n\n\nexport const matchesApproveAllNonFungible = (tx: RPCTransactionHarmony): boolean => {\n    return tx.input.includes(approvalAll1155Hash) || tx.input.includes(approvalAll721Hash);\n}\n\nexport const matchesApprovalMethod = (tx: RPCTransactionHarmony): boolean => {\n\n    return tx.input.includes(approval20Hash) ||\n        tx.input.includes(approval721Hash) ||\n        tx.input.includes(approval1155Hash) ||\n        tx.input.includes(approvalAll1155Hash) ||\n        tx.input.includes(approvalAll721Hash);\n}\n\nexport const filterTransactions = (tx: RPCTransactionHarmony,\n    txnHistory: ApprovalDetails[],\n    spender: string,\n    erc20: ERC20_Pool = {},\n    erc1155: ERC1155_Pool = {},\n    erc721: ERC721_Pool = {}): ApprovalDetails[] => {\n    // filter txn history. if erc20 then just remove\n    const to = new HarmonyAddress(tx.to).basicHex;\n    if (erc20[to]) {\n        // remove any other occurrence of the spender and the contract in the list of txn (current tx is latest)\n        txnHistory = txnHistory.filter(transaction => !(transaction.spender === spender && transaction.contract === tx.to));\n        return txnHistory;\n    }\n    else if (erc1155[to] || erc721[to]) {\n        if (matchesApproveAllNonFungible(tx)) {\n            // it is a match on the spend all\n            // we need to find the token id that is currently approved and remove it\n            // approve all matches on spender\n            return txnHistory.filter(transaction => !(transaction.spender === spender && transaction.contract === tx.to))\n        }\n        else {\n            // if it is spend on a specific target token then we need to find the previous target token txn\n            // erc115 token approval only allows a single address to have approved token access. therefore we need to find\n            // and remove the last token that was approved\n            const tokenId = parseInt(tx.input.substring(74), 16); // approve on a specific token id\n            return txnHistory.filter(transaction => !(transaction.tokenId === tokenId && transaction.contract === tx.to))\n\n        }\n\n    }\n    return txnHistory;\n}\n\n\nexport const hasAllowance = (tx: RPCTransactionHarmony, spender: string, type: TokenType): boolean => {\n    if (type === \"ERC20\" && tx.input.includes(approval20Hash)) {\n        const allowance = tx.input.substring(74);\n        return parseInt(allowance, 16) !== 0;\n    }\n    else if (tx.input.includes(approvalAll1155Hash) || tx.input.includes(approvalAll721Hash)) {\n        // depend on second argument of approvalAll\n        return parseInt(tx.input.substring(74)) !== 0; // bool argument, 0 means we revoke, 1 means we approve\n    }\n    else if (type === \"ERC721\" || type === \"ERC1155\") {\n        // check the address component, if it is 0x0... then there is no allowance \n        // \n        return !Web3.utils.toBN(spender).isZero();\n    }\n    return false;\n}\n\nexport const allowanceAmount = (tx: RPCTransactionHarmony): string => {\n    if (tx.input.includes(approval20Hash)) {\n        const allowance = tx.input.substring(74);\n        if (allowance.includes(unlimitedAllowance)) {\n            return \"Unlimited\";\n        }\n        return \"Limited\";\n    }\n    else if (tx.input.includes(approvalAll1155Hash) || tx.input.includes(approvalAll721Hash)) {\n        return \"Unlimited\";\n    }\n    return \"Limited\";\n}\n\nexport const revokePermission = async (tx: ApprovalDetails) => {\n    const account = tx.account;\n    const spender = tx.spender;\n    const contractAddress = tx.assetAddress;\n    const web3Provider: any = await detectEthereumProvider(); // can't be null; Wallet would fail first\n\n    // web3.eth.abi.encodeFunctionSignature\n\n    const hmyWeb3 = new Web3(web3Provider);\n\n    if (tx.type === \"ERC20\") {\n        const contract = new hmyWeb3.eth.Contract(approvalERC20ABI, contractAddress);\n        await contract.methods.approve(spender, 0).send({ from: account });\n    }\n    else if (tx.type === \"ERC1155\" || tx.type === \"ERC721\") {\n        if (tx.isFullApproval) {\n            const contract = new hmyWeb3.eth.Contract(approvalNonFungibleABI, contractAddress);\n            await contract.methods.setApprovalForAll(spender, false).send({ from: account }); // clear approvals for all\n        }\n        else {\n            const contract = new hmyWeb3.eth.Contract(approvalNonFungibleABI, contractAddress);\n            await contract.methods.approve(EMPTY_ADDRESS, tx.tokenId).send({ from: account }); // clear approval for tokenId\n        }\n    }\n}\n\n","import JSONBig from 'json-bigint'\nimport { ERC1155_Pool } from \"src/hooks/ERC1155_Pool\";\nimport { ERC20_Pool } from \"src/hooks/ERC20_Pool\";\nimport { ERC721_Pool } from \"src/hooks/ERC721_Pool\";\nimport { HarmonyAddress } from \"src/utils\";\nimport { convertTxnToObj, filterTransactions, hasAllowance, matchesApprovalMethod } from \"src/utils/approvals\";\nimport {\n  ApprovalDetails,\n  IGetTxsHistoryParams,\n  RequestOrder,\n  RequestTxType,\n  RPCTransactionHarmony,\n  StakingDelegationResponse,\n  TokenType,\n  TxReceipt\n} from \"../types\";\nimport { config } from \"../config\";\n\nexport type TRPCResponse<T> = { id: number; jsonrpc: \"2.0\"; result: T, error?: { code: number, message: string } };\n\nconst API_URL = process.env.REACT_APP_RPC_URL_SHARD0 || '';\n\nexport const rpcAdapter = <T = any>(...args: Parameters<typeof fetch>) => {\n  /**\n   * wrapper for fetch. for some middleware in future requests\n   */\n\n  return fetch\n    .apply(window, args)\n    .then((res) => res.json()) as unknown as Promise<T>;\n};\n\n/**\n * BigInt values will be stored as strings\n */\nexport const rpcBigIntAdapter = <T = any>(...args: Parameters<typeof fetch>) => {\n  return fetch\n    .apply(window, args)\n    .then((res) => res.text())\n    .then((res) => JSONBig({ storeAsString: true }).parse(res)) as unknown as Promise<T>;\n};\n\nexport const getBalance = (nodeUrl: string, params: [string, \"latest\"]) => {\n  return rpcAdapter<TRPCResponse<string>>(nodeUrl, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      jsonrpc: \"2.0\",\n      method: \"eth_getBalance\",\n      id: 1,\n      params,\n    }),\n  });\n};\n\n\nexport const hmyv2_getTransactionReceipt = (\n  params: [string],\n  shardNumber: number\n) => {\n  return rpcAdapter<TRPCResponse<TxReceipt>>(\n    process.env[`REACT_APP_RPC_URL_SHARD${shardNumber}`] as string,\n    {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        jsonrpc: \"2.0\",\n        method: \"hmyv2_getTransactionReceipt\",\n        id: 1,\n        params,\n      }),\n    }\n  );\n};\n\nexport const getAllBalance = (params: [string, \"latest\"]) => {\n  const getBalanceHandler = async (nodeUrl: string) => {\n    try {\n      const { result } = await getBalance(nodeUrl, params)\n      return result\n    } catch (e) {\n      return '0x0'\n    }\n  }\n  return Promise.all(config.shardUrls.map(shardUrl => getBalanceHandler(shardUrl)));\n};\n\nconst defaultGetHistoryParams = {\n  fullTx: true,\n  txType: RequestTxType.ALL,\n  order: RequestOrder.DESC\n}\n\nexport const eth_traceTransaction = (hash: string) => {\n  return rpcAdapter<any>(API_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      jsonrpc: \"2.0\",\n      method: \"trace_transaction\",\n      id: 1,\n      params: [hash],\n    }),\n  }).then(data => {\n    if (data.error) {\n      throw new Error(data.error.message)\n    }\n    return data.result\n  });\n}\n\nexport const hmyv2_getTransactionsHistory = (params: IGetTxsHistoryParams[]) => {\n  return rpcAdapter<TRPCResponse<{ transactions: RPCTransactionHarmony[] }>>(API_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      jsonrpc: \"2.0\",\n      method: \"hmyv2_getTransactionsHistory\",\n      id: 1,\n      params: [{ ...defaultGetHistoryParams, ...params[0] }],\n    }),\n  }).then(data => {\n    if (data.error) {\n      throw new Error(data.error.message)\n    }\n    return data.result.transactions\n  });\n};\n\nexport const hmyv2_getTransactionsCount = (address: string, txType: RequestTxType = RequestTxType.ALL) => {\n  return rpcAdapter<TRPCResponse<number>>(API_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      jsonrpc: \"2.0\",\n      method: \"hmyv2_getTransactionsCount\",\n      id: 1,\n      params: [address, txType],\n    }),\n  }).then(data => {\n    if (data.error) {\n      throw new Error(data.error.message)\n    }\n    return data.result\n  });\n};\n\nexport const hmyv2_getNodeMetadata = (shard: string) => {\n  return rpcAdapter<TRPCResponse<any>>(getApiUrl(shard), {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      jsonrpc: \"2.0\",\n      method: \"hmyv2_getNodeMetadata\",\n      id: 1,\n      params: [],\n    }),\n  }).then(data => {\n    if (data.error) {\n      throw new Error(data.error.message)\n    }\n    return data.result\n  });\n};\n\nexport const hmyv2_getStakingTransactionsHistory = (params: IGetTxsHistoryParams[]) => {\n  return rpcAdapter<TRPCResponse<{ staking_transactions: RPCTransactionHarmony[] }>>(API_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      jsonrpc: \"2.0\",\n      method: \"hmyv2_getStakingTransactionsHistory\",\n      id: 1,\n      params: [{ ...defaultGetHistoryParams, ...params[0] }],\n    }),\n  }).then(data => {\n    if (data.error) {\n      throw new Error(data.error.message)\n    }\n    return data.result.staking_transactions\n  });\n};\n\nexport const hmyv2_getStakingTransactionsCount = (address: string, txType: RequestTxType = RequestTxType.ALL) => {\n  return rpcAdapter<TRPCResponse<number>>(API_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      jsonrpc: \"2.0\",\n      method: \"hmyv2_getStakingTransactionsCount\",\n      id: 1,\n      params: [address, txType],\n    }),\n  }).then(data => {\n    if (data.error) {\n      throw new Error(data.error.message)\n    }\n    return data.result\n  });\n};\n\nexport interface StakingDelegation {\n  undelegations: Array<{amount: string, epoch: string}>,\n  amount: string,\n  delegatorAddress: string,\n  reward: string,\n  validatorAddress: string\n}\n\nconst mapStakingDelegation = (delegation: StakingDelegationResponse): StakingDelegation => {\n  return {\n    undelegations: delegation.Undelegations.map((undelegation) => {\n      return {\n        amount: undelegation.Amount,\n        epoch: undelegation.Epoch\n      }\n    }),\n    amount: delegation.amount,\n    delegatorAddress: delegation.delegator_address,\n    reward: delegation.reward,\n    validatorAddress: delegation.validator_address\n  }\n}\n\nexport const hmy_getDelegationsByDelegator = (address: string): Promise<StakingDelegation[]> => {\n  return rpcBigIntAdapter<TRPCResponse<StakingDelegationResponse[]>>(API_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      jsonrpc: \"2.0\",\n      method: \"hmy_getDelegationsByDelegator\",\n      id: 1,\n      params: [address],\n    }),\n  }).then(data => {\n    if (data.error) {\n      throw new Error(data.error.message)\n    }\n    return data.result.map(mapStakingDelegation)\n  });\n};\n\n/**\n * Given address get all the approvals made by this address for all types of ERC1155, ERC721, and ERC20 tokens.\n * Supply optional contractAddress argument to filter to only the specified token.\n *\n * Use pageIndex and pageSize to control how many events to load from the RPC, supply txnHistory to remove previous\n *\n * @param address\n * @param contractAddress\n * @param pageIndex\n * @param pageSize\n * @param txnHistory\n */\nexport const getAllApprovalsForTokens = async (address: string,\n  contractAddress: string = \"\",\n  pageIndex = 0,\n  pageSize = 100,\n  txnHistory: any[] = [],\n  erc20Pool: ERC20_Pool = {},\n  erc1155Pool: ERC1155_Pool = {},\n  erc721Pool: ERC721_Pool = {}\n): Promise<{ txnHistory: ApprovalDetails[], dataObj: RPCTransactionHarmony[] }> => {\n  const params: IGetTxsHistoryParams[] = [{\n    address,\n    pageIndex,\n    pageSize,\n    fullTx: true,\n    txType: RequestTxType.SENT,\n    order: RequestOrder.ASC\n  }];\n\n  // if null, return all approvals\n  const contractHarmonyAddr = contractAddress && contractAddress.length > 0 ? new HarmonyAddress(contractAddress) : null;\n\n  let dataObj: RPCTransactionHarmony[] = await hmyv2_getTransactionsHistory(params);\n\n  for (let tx of dataObj) {\n    if (matchesApprovalMethod(tx) && (tx.to === contractAddress || tx.to === contractHarmonyAddr?.bech32 || !contractHarmonyAddr)) {\n      const spender = \"0x\" + tx.input.substring(34, 74);\n      const to = new HarmonyAddress(tx.to).basicHex;\n      let type: TokenType = \"ERC20\";\n      if (erc1155Pool[to]) {\n        type = \"ERC1155\";\n      }\n      else if (erc721Pool[to]) {\n        type = \"ERC721\";\n      }\n      // remove from list\n      txnHistory = filterTransactions(tx, txnHistory, spender, erc20Pool, erc1155Pool, erc721Pool);\n      //txnHistory.filter(transaction => !(transaction.spender === spender && transaction.contract === tx.to)) // remove from list txn spender AND contract matches...\n      if (hasAllowance(tx, spender, type)) {\n        const approvedObj = convertTxnToObj(tx, type);\n        txnHistory.push(approvedObj);\n      }\n    }\n  }\n\n  return { txnHistory, dataObj };\n}\n\nconst getApiUrl = (shard: string) => {\n  switch (shard) {\n    case \"1\":\n      return process.env.REACT_APP_RPC_URL_SHARD1 || ''\n    case \"2\":\n      return process.env.REACT_APP_RPC_URL_SHARD2 || ''\n    case \"3\":\n      return process.env.REACT_APP_RPC_URL_SHARD3 || ''\n    default:\n      return process.env.REACT_APP_RPC_URL_SHARD0 || ''\n  }\n}","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function useQuery() {\n  const { search } = useLocation();\n\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n","import { TransactionDetails } from \"src/components/transaction/TransactionDetails\";\nimport { InternalTransactionList } from \"src/components/transaction/InternalTransactionList\";\nimport { TransactionLogs } from \"src/components/transaction/TransactionLogs\";\nimport {IHexSignature, InternalTransaction, RPCTransactionHarmony, TxReceipt} from \"src/types\";\nimport { BaseContainer, BasePage } from \"src/components/ui\";\n\nimport { useHistory, useParams } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport { Tabs, Tab, Text, Box, Spinner, Heading } from \"grommet\";\nimport {\n  getInternalTransactionsByField,\n  getTransactionByField,\n  getTransactionLogsByField,\n  getByteCodeSignatureByHash,\n} from \"src/api/client\";\nimport { revertErrorMessage } from \"src/web3/parseByteCode\";\nimport { hmyv2_getTransactionReceipt } from \"src/api/rpc\";\nimport useQuery from \"../../hooks/useQuery\";\nimport { config } from \"../../config\";\n\nconst extractError = (err: any) => {\n  const errorMessages = err!.split(\":\");\n  if (errorMessages[1]) {\n    const errorMessage = revertErrorMessage(errorMessages[1]);\n    return errorMessage || err;\n  }\n\n  const errorMessage = revertErrorMessage(err);\n  return errorMessage || err;\n};\n\nconst getTxInputSignature = async (trx: RPCTransactionHarmony) => {\n  let signature\n  try {\n    const signatures = await getByteCodeSignatureByHash([trx.input.slice(0, 10)])\n    if(signatures && signatures.length > 0) {\n      signature = signatures[0]\n    }\n  } catch (e) {\n    console.error('Cannot get tx input signature: ', (e as Error).message)\n  }\n  return signature\n}\n\nconst getTransactionErrorMessage = (txHash: string, tx: RPCTransactionHarmony) => {\n  if(txHash.length !== 66) {\n    return 'Invalid Txn hash'\n  }\n  if(!tx || !tx.hash) {\n    return 'Unable to locate this TxnHash'\n  }\n  return ''\n}\n\nexport const TransactionPage = () => {\n  const history = useHistory();\n  const { id } = useParams<{id: string}>();\n  const query = useQuery();\n  const activeTab = query.get('activeTab') || '0';\n\n  // hash or number\n  const [tx, setTx] = useState<RPCTransactionHarmony>({} as RPCTransactionHarmony);\n  const [txReceipt, setTxReceipt] = useState<TxReceipt>();\n  const [trxs, setTrxs] = useState<InternalTransaction[]>([]);\n  const [logs, setLogs] = useState<any[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(+activeTab);\n  const [inputSignature, setInputSignature] = useState<IHexSignature>()\n\n  const { availableShards } = config\n\n  useEffect(() => {\n    const getTx = async () => {\n      let trx;\n      let trxInputSignature;\n      let shard = 0;\n      if (id.length === 66) {\n        trx = await getTransactionByField([0, \"hash\", id]);\n      }\n\n      if (!trx && availableShards.find((i) => i === 1)) {\n        trx = await getTransactionByField([1, \"hash\", id]);\n        shard = 1;\n      }\n\n      if (!trx && availableShards.find((i) => i === 2)) {\n        trx = await getTransactionByField([2, \"hash\", id]);\n        shard = 2;\n      }\n\n      if (!trx && availableShards.find((i) => i === 3)) {\n        trx = await getTransactionByField([3, \"hash\", id]);\n        shard = 3;\n      }\n\n      if (trx) {\n        const txnReceipt = await hmyv2_getTransactionReceipt([id], shard);\n        if (txnReceipt && txnReceipt.result) {\n          setTxReceipt(txnReceipt.result)\n          if(txnReceipt.result.gasUsed) {\n            trx.gasLimit = trx.gas\n            trx.gas = parseInt(txnReceipt.result.gasUsed).toString();\n          }\n        }\n        if (trx.input && trx.input.length > 10) {\n          trxInputSignature = await getTxInputSignature(trx)\n        }\n      }\n\n      const txData = trx || {}\n      setTx(txData as RPCTransactionHarmony);\n      setInputSignature(trxInputSignature)\n      return txData\n    };\n\n    const getInternalTxs = async () => {\n      if (tx.hash && tx.shardID === 0) {\n        //@ts-ignore\n        const txs = await getInternalTransactionsByField([\n            0,\n            \"transaction_hash\",\n            tx.hash,\n          ],\n          // need to track fallback\n          tx.blockNumber\n        );\n        const methodSignatures = await Promise.all(\n          txs.map((tx) => {\n            return tx.input && tx.input.length > 10\n              ? getByteCodeSignatureByHash([tx.input.slice(0, 10)])\n              : Promise.resolve([]);\n          })\n        );\n\n        const txsWithSignatures = txs.map((l, i) => ({\n          ...l,\n          signatures: methodSignatures[i],\n        }));\n\n        setTrxs(txsWithSignatures as InternalTransaction[]);\n      } else {\n        setTrxs([]);\n      }\n    };\n\n    const getLogs = async () => {\n      const contractShardID = process.env.REACT_APP_CONTRACT_SHARD ? (process.env.REACT_APP_CONTRACT_SHARD || 0) : 0\n      if (tx.hash && [0, contractShardID].includes(tx.shardID)) {\n        //@ts-ignore\n        const logs: any[] = await getTransactionLogsByField([\n          0,\n          \"transaction_hash\",\n          tx.hash,\n        ]);\n\n        const logsSignatures = await Promise.all(\n          logs.map((l) => getByteCodeSignatureByHash([l.topics[0]]))\n        );\n\n        const logsWithSignatures = logs.map((l, i) => ({\n          ...l,\n          signatures: logsSignatures[i],\n        }));\n\n        setLogs(logsWithSignatures as any);\n      } else {\n        setLogs([]);\n      }\n    };\n\n    const loadTxData = async () => {\n      let tx = {}\n      try {\n        setIsLoading(true)\n        tx = await getTx()\n      } catch (e) {\n        console.log('Cannot load tx data:', e)\n      } finally {\n        setIsLoading(false)\n      }\n      if(tx) {\n        try {\n          await Promise.allSettled([getLogs(), getInternalTxs()])\n        } catch (e) {\n          console.log('Cannot load transaction logs:', e)\n        }\n      }\n    }\n    loadTxData()\n  }, [tx.hash]);\n\n  if (isLoading) {\n    return (\n      <Box style={{ height: \"700px\" }} justify=\"center\" align=\"center\">\n        <Spinner />\n      </Box>\n    );\n  }\n\n  const txErrorMsg = isLoading ? '' : getTransactionErrorMessage(id, tx)\n\n  const internalErrorMsg = trxs\n    .map((t) => t.error)\n    .filter((_) => _)\n    .map(extractError)\n    .join(\",\")\n\n  const txReceiptErrorMsg = txReceipt && txReceipt.status === 0\n    ? 'Failed (from receipt)'\n    : ''\n\n  return (\n    <BaseContainer pad={{ horizontal: \"0\" }}>\n      <Heading size=\"small\" margin={{ bottom: \"medium\", top: \"0\" }}>\n        Transaction\n      </Heading>\n      <BasePage>\n        <Tabs\n          alignControls=\"start\"\n          justify=\"start\"\n          activeIndex={activeIndex}\n          onActive={(newActive) => {\n            if (newActive !== activeIndex) {\n              history.replace(\n                `${history.location.pathname}?activeTab=${newActive}`\n              );\n              setActiveIndex(newActive);\n            }\n          }}\n        >\n          <Tab title={<Text size=\"small\">Transaction Details</Text>}>\n            <TransactionDetails\n              transaction={tx}\n              logs={logs}\n              internalTxs={trxs}\n              inputSignature={inputSignature}\n              errorMsg={txErrorMsg || internalErrorMsg || txReceiptErrorMsg}\n              hideShowMore={isLoading || Boolean(txErrorMsg)}\n            />\n          </Tab>\n          {trxs.length ? (\n            <Tab\n              title={\n                <Text size=\"small\">Internal Transactions ({trxs.length})</Text>\n              }\n            >\n              <InternalTransactionList\n                list={trxs}\n                hash={tx.hash}\n                timestamp={tx.timestamp}\n              />\n            </Tab>\n          ) : null}\n          {logs.length ? (\n            <Tab title={<Text size=\"small\">Logs ({logs.length})</Text>}>\n              <TransactionLogs logs={logs} hash={tx.hash} />\n            </Tab>\n          ) : null}\n        </Tabs>\n      </BasePage>\n    </BaseContainer>\n  );\n};\n","import { RPCStakingTransactionHarmony } from \"src/types\";\nimport { BasePage } from \"src/components/ui\";\n\nimport { useParams } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Text } from \"grommet\";\nimport { getStakingTransactionByField } from \"src/api/client\";\nimport { TransactionDetails } from \"src/components/transaction/TransactionDetails\";\nimport { StakingTransactionType } from \"src/types\";\nimport { TransactionSubType } from \"src/components/transaction/helpers\";\nimport { hmyv2_getTransactionReceipt } from \"src/api/rpc\";\nimport { config } from \"../../config\";\n\nexport const StakingTransactionPage = () => {\n  // @ts-ignore\n  const { id } = useParams();\n  const [tx, setTx] = useState<RPCStakingTransactionHarmony | null>(null);\n\n  const { availableShards } = config\n\n  useEffect(() => {\n    const exec = async () => {\n      let tx;\n      let shardNumber = 0;\n      if (id.length === 66) {\n        tx = await getStakingTransactionByField([0, \"hash\", id]);\n\n        if (!tx && availableShards.find((i) => i === 1)) {\n          shardNumber = 1;\n          tx = await getStakingTransactionByField([1, \"hash\", id]);\n        }\n\n        if (!tx && availableShards.find((i) => i === 2)) {\n          shardNumber = 2;\n          tx = await getStakingTransactionByField([2, \"hash\", id]);\n        }\n\n        if (!tx && availableShards.find((i) => i === 3)) {\n          shardNumber = 3;\n          tx = await getStakingTransactionByField([3, \"hash\", id]);\n        }\n\n        try {\n          const txnReceipt = await hmyv2_getTransactionReceipt([id], shardNumber)\n          if (txnReceipt && txnReceipt.result) {\n            if (tx.type === \"CollectRewards\" && tx.amount === null) {\n              tx.amount = txnReceipt.result.logs[0].data\n            }\n\n            if (txnReceipt.result.gasUsed) {\n              tx.gasLimit = tx.gas\n              tx.gas = parseInt(txnReceipt.result.gasUsed).toString();\n            }\n          }\n        } catch {}\n      }\n      setTx(tx as RPCStakingTransactionHarmony);\n    };\n    exec();\n  }, [id]);\n\n  if (!tx) {\n    return null;\n  }\n\n  const { amount, ...restTx } = tx;\n\n  const { amount: amountMsg, ...restTxMsg } = tx.msg || {};\n\n  return (\n    <BasePage>\n      <Box border={{ size: \"xsmall\", side: \"bottom\", color: \"border\" }}>\n        <Text size=\"large\" weight=\"bold\" margin={{ bottom: \"small\" }}>\n          Staking Transaction\n        </Text>\n      </Box>\n\n      <TransactionDetails transaction={restTx} type=\"__staking\" errorMsg={\"\"} />\n      <Box\n        margin={{ top: \"medium\" }}\n        pad={{ bottom: \"small\" }}\n        border={{ size: \"xsmall\", side: \"bottom\", color: \"border\" }}\n      >\n        <Text size=\"large\">Staking Data</Text>\n      </Box>\n      <TransactionDetails\n        transaction={\n          tx.type === \"CollectRewards\"\n            ? {\n                ...tx.msg,\n                amount: amount,\n              }\n            : tx.type === \"EditValidator\"\n            ? restTxMsg\n            : tx.msg\n        }\n        type={subTypeMap[tx.type] || \"\"}\n        stakingData\n        errorMsg={\"\"}\n        hideShowMore={true}\n      />\n    </BasePage>\n  );\n};\n\nconst subTypeMap: Record<StakingTransactionType, TransactionSubType> = {\n  Delegate: \"__delegated\",\n  Undelegate: \"__undelegated\",\n  CollectRewards: \"\",\n  CreateValidator: \"\",\n  EditValidator: \"\",\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Box, DataTable, Text, Spinner } from \"grommet\";\nimport { Block, Filter } from \"src/types\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport {\n  Address,\n  formatNumber,\n  DateTime,\n  PaginationBlockNavigator,\n  PaginationRecordsPerPage,\n} from \"src/components/ui\";\nimport { getBlocks } from \"src/api/client\";\n\nfunction getColumns(props: any) {\n  const { history, shardNumber } = props;\n  return [\n    {\n      property: \"shard\",\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Shard\n        </Text>\n      ),\n      render: (data: Block) => <Text size=\"small\">{shardNumber}</Text>,\n    },\n    {\n      property: \"number\",\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Height\n        </Text>\n      ),\n      render: (data: Block) => (\n        <Text\n          size=\"small\"\n          style={{ cursor: \"pointer\" }}\n          onClick={() => {\n            history.push(`/block/${data.hash}`);\n          }}\n          color=\"brand\"\n        >\n          {formatNumber(+data.number)}\n        </Text>\n      ),\n    },\n    {\n      property: \"timestamp\",\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Timestamp\n        </Text>\n      ),\n      render: (data: Block) => (\n        <Box direction=\"row\" gap=\"xsmall\">\n          <DateTime date={data.timestamp} />\n        </Box>\n      ),\n    },\n    {\n      property: \"miner\",\n      primaryKey: true,\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Miner\n        </Text>\n      ),\n      render: (data: Block) => <Address address={data.miner} />,\n    },\n    {\n      property: \"transactions\",\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Transactions\n        </Text>\n      ),\n      render: (data: Block) => (\n        <Text size=\"small\">\n          {data.transactions.length + data.stakingTransactions.length}\n        </Text>\n      ),\n    },\n    {\n      property: \"gasUsed\",\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Gas Used / Gas Limit\n        </Text>\n      ),\n      render: (data: Block) => (\n        <Text size=\"small\">\n          {formatNumber(+data.gasUsed)} / {formatNumber(+data.gasLimit)}\n        </Text>\n      ),\n    },\n  ];\n}\n\nexport function AllBlocksTable() {\n  const limitValue = localStorage.getItem(\"tableLimitValue\");\n\n  const initFilter: Filter = {\n    offset: 0,\n    limit: limitValue ? +limitValue : 10,\n    orderBy: \"number\",\n    orderDirection: \"desc\",\n    filters: [{ type: \"gte\", property: \"number\", value: 0 }],\n  };\n\n  const [blocks, setBlocks] = useState<Block[]>([]);\n  const [filter, setFilter] = useState<Filter>(initFilter);\n\n  // @ts-ignore\n  const { shardNumber } = useParams();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const newFilter = JSON.parse(JSON.stringify(initFilter)) as Filter;\n\n    setFilter(newFilter);\n  }, [shardNumber]);\n\n  useEffect(() => {\n    const getElements = async () => {\n      try {\n        let blocks = await getBlocks([+shardNumber, filter]);\n        setBlocks(blocks as Block[]);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getElements();\n  }, [filter]);\n\n  if (!blocks.length) {\n    return (\n      <Box style={{ height: \"700px\" }} justify=\"center\" align=\"center\">\n        <Spinner />\n      </Box>\n    );\n  }\n\n  const beginValue = blocks[0].number;\n  const endValue = blocks.slice(-1)[0].number;\n\n  return (\n    <>\n      <Box\n        direction=\"row\"\n        justify=\"between\"\n        pad={{ bottom: \"small\" }}\n        margin={{ bottom: \"small\" }}\n        border={{ size: \"xsmall\", side: \"bottom\", color: \"border\" }}\n      >\n        <Text style={{ flex: \"1 1 auto\" }}>\n          <b>{filter.limit}</b> blocks shown, from{\" \"}\n          <b>#{formatNumber(+endValue)}</b> to{\" \"}\n          <b>#{formatNumber(+beginValue)}</b>\n        </Text>\n        <PaginationBlockNavigator\n          onChange={setFilter}\n          filter={filter}\n          totalElements={blocks.length}\n          blocks={blocks}\n          property=\"number\"\n        />\n      </Box>\n      <Box style={{ overflow: \"auto\" }}>\n        <DataTable\n          className={\"g-table-transactions\"}\n          style={{ width: \"100%\", minWidth: \"1110px\" }}\n          columns={getColumns({ history, shardNumber })}\n          data={blocks}\n          step={10}\n          background={{\n            header: {\n              color: 'tableRowHover'\n            }\n          }}\n          border={{\n            header: {\n              color: \"border\",\n              side: 'top',\n              size: '1px'\n            },\n            body: {\n              color: \"border\",\n              side: \"top\",\n              size: \"1px\",\n            },\n          }}\n        />\n      </Box>\n      <Box\n        direction=\"row\"\n        justify=\"between\"\n        align=\"center\"\n        margin={{ top: \"medium\" }}\n      >\n        <PaginationRecordsPerPage\n          filter={filter}\n          onChange={(newFilter) => {\n            if (newFilter.limit !== initFilter.limit) {\n              localStorage.setItem(\"tableLimitValue\", `${newFilter.limit}`);\n            }\n\n            setFilter(newFilter);\n          }}\n        />\n        <PaginationBlockNavigator\n          blocks={blocks}\n          onChange={setFilter}\n          filter={filter}\n          totalElements={blocks.length}\n          property=\"number\"\n        />\n      </Box>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Box, Heading, Text } from \"grommet\";\nimport { BasePage, BaseContainer } from \"src/components/ui\";\nimport { AllBlocksTable } from \"./AllBlocksTable\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { ShardDropdown } from \"src/components/ui/ShardDropdown\";\n\nexport function AllBlocksPage() {\n  // @ts-ignore\n  const { shardNumber } = useParams();\n\n  const history = useHistory();\n\n  return (\n    <BaseContainer pad={{ horizontal: \"0\" }}>\n      <Heading size=\"small\" margin={{ bottom: \"medium\", top: \"0\" }}>\n        <Box direction={\"row\"}>Blocks</Box>\n      </Heading>\n      <BasePage pad={\"small\"} style={{overflow: 'inherit'}}>\n        <Box style={{ width: \"200px\" }} direction={\"row\"} align={'center'}>\n          <Text>Filter: </Text>\n          <ShardDropdown\n            selected={shardNumber}\n            onClick={(shardNumber) =>\n              history.push(`/blocks/shard/${shardNumber}`)\n            }\n          />\n        </Box>\n      </BasePage>\n      <BasePage>\n        <AllBlocksTable />\n      </BasePage>\n    </BaseContainer>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Box, Heading, Text } from \"grommet\";\nimport { BasePage, BaseContainer } from \"src/components/ui\";\nimport { TransactionsTable } from \"../../components/tables/TransactionsTable\";\nimport { Filter, RPCTransactionHarmony } from \"../../types\";\nimport { useHistory } from \"react-router-dom\";\nimport { getTransactions, getCount } from \"src/api/client\";\nimport { ShardDropdown } from \"src/components/ui/ShardDropdown\";\nimport { useParams } from \"react-router-dom\";\n\nexport function AllTransactionsPage() {\n  const initFilter: Filter = {\n    offset: 0,\n    limit: localStorage.getItem(\"tableLimitValue\")\n      ? +(localStorage.getItem(\"tableLimitValue\") as string)\n      : 10,\n    orderBy: \"block_number\",\n    orderDirection: \"desc\",\n    filters: [{ type: \"gte\", property: \"block_number\", value: 0 }],\n  };\n\n  const [trxs, setTrxs] = useState<RPCTransactionHarmony[]>([]);\n  const [count, setCount] = useState<string>(\"\");\n  const [filter, setFilter] = useState<Filter>(initFilter);\n\n  // @ts-ignore\n  const { shardNumber } = useParams();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const getRes = async () => {\n      try {\n        let res = await getCount([+shardNumber, \"transactions\"]);\n        setCount(res.count);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getRes().then(() => {\n      const newFilter = JSON.parse(JSON.stringify(filter)) as Filter;\n      const innerFilter = newFilter.filters.find(\n        (i) => i.property === \"block_number\"\n      );\n      if (innerFilter && count) {\n        innerFilter.value = +count;\n      }\n\n      setFilter(newFilter);\n    });\n  }, [shardNumber]);\n\n  useEffect(() => {\n    const getElements = async () => {\n      try {\n        let trxs = await getTransactions([+shardNumber, filter]);\n\n        setTrxs(trxs as RPCTransactionHarmony[]);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getElements();\n  }, [filter, shardNumber]);\n\n  const { limit = 10 } = filter;\n\n  return (\n    <BaseContainer pad={{ horizontal: \"0\" }}>\n      <Heading size=\"small\" margin={{ bottom: \"medium\", top: \"0\" }}>\n        Transactions\n      </Heading>\n      <BasePage pad={\"small\"} style={{ overflow: \"inherit\" }}>\n        <Box style={{ width: \"200px\" }} direction={\"row\"} align={\"center\"}>\n          <Text>Filter: </Text>\n          <ShardDropdown\n            selected={shardNumber}\n            onClick={(shardNumber) =>\n              history.push(`/transactions/shard/${shardNumber}`)\n            }\n          />\n        </Box>\n      </BasePage>\n      <BasePage>\n        <TransactionsTable\n          data={trxs}\n          totalElements={+count}\n          limit={+limit}\n          filter={filter}\n          setFilter={(newFilter) => {\n            if (newFilter.limit !== initFilter.limit) {\n              localStorage.setItem(\"tableLimitValue\", `${newFilter.limit}`);\n            }\n\n            setFilter(newFilter);\n          }}\n          primaryKey={\"hash\"}\n        />\n      </BasePage>\n    </BaseContainer>\n  );\n}\n","import Web3 from \"web3\";\nimport ERC20ABI from './abi/ERC20ABI.json'\nimport { AbiItem } from \"web3-utils\";\n\nconst web3URL = process.env.REACT_APP_RPC_URL_SHARD0 as string\n\nconst web3 = new Web3(web3URL);\n\nexport function getERC20Balance(walletAddress: string, tokenAddress: string) {\n  let contract = new web3.eth.Contract(ERC20ABI as AbiItem[], tokenAddress);\n  return contract.methods.balanceOf(walletAddress).call();\n}\n\n","import React, { useEffect, useState } from \"react\";\nimport { Box, Text, Tip } from \"grommet\";\nimport {\n  Address,\n  formatNumber,\n  TipContent,\n  TokenValue,\n} from \"src/components/ui\";\nimport { Dropdown } from \"src/components/dropdown/Dropdown\";\nimport { BinancePairs } from \"src/hooks/BinancePairHistoricalPrice\";\nimport Big from \"big.js\";\nimport { useERC20Pool } from \"src/hooks/ERC20_Pool\";\nimport { useERC721Pool } from \"src/hooks/ERC721_Pool\";\nimport { TokenValueBalanced } from \"src/components/ui/TokenValueBalanced\";\nimport { useThemeMode } from \"src/hooks/themeSwitcherHook\";\nimport { useCurrency } from \"src/hooks/ZPT-ETH-SwitcherHook\";\nimport { getAddress } from \"src/utils/getAddress/GetAddress\";\nimport { useHistory } from \"react-router-dom\";\nimport { useERC1155Pool } from \"../../hooks/ERC1155_Pool\";\nimport { Alert } from \"grommet-icons\";\nimport { getERC20Balance } from \"../../web3/erc20Methods\";\n\ninterface Token {\n  balance: string;\n  tokenAddress: string;\n  ownerAddress: string;\n  isERC20?: boolean;\n  isERC721?: boolean;\n  isERC1155?: boolean;\n  symbol: string;\n  tokenID?: string;\n}\n\nexport function TokensInfo(props: { value: Token[] }) {\n  const erc20Map = useERC20Pool();\n  const erc721Map = useERC721Pool();\n  const erc1155Map = useERC1155Pool();\n  const themeMode = useThemeMode();\n  const currency = useCurrency();\n  const history = useHistory();\n\n  const [tokensList, setTokensList] = useState(props.value)\n  const [isDropdownVisible, setDropdownVisible] = useState(false)\n  const [isNodeBalancesLoaded, setNodeBalancesLoaded] = useState(false)\n\n  // Tokens list was updated from parent component\n  useEffect(() => {\n    setTokensList(props.value)\n    setNodeBalancesLoaded(false)\n  }, [props.value])\n\n  useEffect(() => {\n    const loadErc20BalancesFromNode = async () => {\n      try {\n        const balances = await Promise.all(tokensList.map(async token => {\n          const balance = await getERC20Balance(token.ownerAddress, token.tokenAddress)\n          return {\n            ...token,\n            balance\n          }\n        }))\n        setTokensList(balances)\n        setNodeBalancesLoaded(true)\n        console.log('ERC20 node balances updated')\n      } catch (e) {\n        console.error('Cannot update node balances', (e as Error).message)\n      }\n    }\n    if (isDropdownVisible && !isNodeBalancesLoaded) {\n      loadErc20BalancesFromNode()\n    }\n  }, [isDropdownVisible])\n\n  if (!tokensList.filter((i) => filterWithBalance(i.balance)).length) {\n    return <span>—</span>;\n  }\n\n  const erc20Tokens = tokensList\n    .filter((i) => filterWithBalance(i.balance))\n    .filter((i) => i.isERC20 && erc20Map[i.tokenAddress])\n    .map((item) => ({\n      ...item,\n      symbol: erc20Map[item.tokenAddress].symbol,\n      name: erc20Map[item.tokenAddress].name,\n    }))\n    .sort((a, b) => (a.name > b.name ? 1 : -1));\n\n  const erc721Tokens = tokensList\n    .filter((i) => filterWithBalance(i.balance))\n    .filter((i) => i.isERC721 && erc721Map[i.tokenAddress])\n    .map((item) => ({\n      ...item,\n      symbol: erc721Map[item.tokenAddress].symbol,\n      name: erc721Map[item.tokenAddress].name,\n    }));\n\n  const erc1155Tokens = tokensList\n    .filter((i) => filterWithBalance(i.balance))\n    .filter((i) => i.isERC1155 && erc1155Map[i.tokenAddress])\n    .map((item) => ({\n      ...item,\n      symbol: erc1155Map[item.tokenAddress].symbol,\n      name: erc1155Map[item.tokenAddress].name,\n    }));\n\n  const data = [...erc20Tokens, ...erc721Tokens, ...erc1155Tokens];\n\n  return (\n    <Box>\n      <Box style={{ width: \"550px\" }}>\n        <Dropdown<Token>\n          keyField={\"tokenID\"}\n          itemStyles={{ padding: \"4px\", borderBottom: '1px solid', borderColor: '#f3f3f3' }}\n          searchable={(item, searchText) => {\n            const outPutAddress =\n              currency === \"ZPT\"\n                ? getAddress(item.tokenAddress).bech32\n                : item.tokenAddress;\n\n            searchText = searchText.toLowerCase();\n\n            if (item.tokenAddress.toLowerCase().includes(searchText)) {\n              return true;\n            }\n\n            if (outPutAddress.toLowerCase().includes(searchText)) {\n              return true;\n            }\n\n            if (item.symbol.toLowerCase().includes(searchText)) {\n              return true;\n            }\n\n            return false;\n          }}\n          themeMode={themeMode}\n          items={data}\n          onClickItem={(item) => {\n            // history.push(`/address/${item.tokenAddress}`);\n          }}\n          renderItem={(item) => {\n            const symbol =\n              erc20Map[item.tokenAddress]?.symbol ||\n              erc721Map[item.tokenAddress]?.symbol ||\n              erc1155Map[item.tokenAddress]?.symbol;\n\n            return (\n              <Box\n                direction=\"column\"\n                style={{\n                  width: \"100%\",\n                  flex: \"0 0 auto\",\n                  justifyContent: \"space-between\",\n                  // marginBottom: \"10px\",\n                  padding: \"5px\",\n                }}\n              >\n                <Box direction={\"row\"}>\n                  <Box style={{ flex: \"1 1 50%\" }} direction={\"row\"}>\n                    <Address\n                      address={item.tokenAddress}\n                      style={{ flex: \"1 1 50%\" }}\n                    />\n                    <Text\n                      size={\"small\"}\n                      color={\"minorText\"}\n                      style={{ marginLeft: \"5px\" }}\n                    >\n                      ({symbol})\n                    </Text>\n                  </Box>\n                  <TokenValueBalanced\n                    value={item.balance}\n                    tokenAddress={item.tokenAddress}\n                    style={{ flex: \"1 1 50%\", wordBreak: \"break-word\" }}\n                  />\n                  {item.isERC1155 && (item as any).needUpdate ? (\n                    <Tip\n                      dropProps={{ align: { left: \"right\" } }}\n                      content={<TipContent message={\"Outdated\"} />}\n                    >\n                      <span>\n                        <Alert size=\"small\" />\n                      </span>\n                    </Tip>\n                  ) : null}\n                </Box>\n                {item.isERC1155 ? (\n                  <Text size={\"small\"} color={\"minorText\"}>\n                    <b>Token ID</b>: {item.tokenID}{\" \"}\n                  </Text>\n                ) : null}\n              </Box>\n            );\n          }}\n          renderValue={() => (\n            <Box direction={\"row\"} style={{ paddingTop: \"3px\" }}>\n              {erc20Tokens.length ? (\n                <Box direction={\"row\"}>\n                  ZRC20{\" \"}\n                  <Box\n                    background={\"backgroundBack\"}\n                    style={{\n                      minWidth: \"20px\",\n                      height: \"20px\",\n                      marginLeft: \"4px\",\n                      textAlign: \"center\",\n                      borderRadius: \"4px\",\n                    }}\n                  >\n                    {erc20Tokens.length}\n                  </Box>\n                </Box>\n              ) : null}\n              {erc721Tokens.length ? (\n                <Box direction={\"row\"} margin={{ left: '8px' }}>\n                  ZRC721{\" \"}\n                  <Box\n                    background={\"backgroundBack\"}\n                    style={{\n                      minWidth: \"20px\",\n                      height: \"20px\",\n                      marginLeft: \"4px\",\n                      textAlign: \"center\",\n                      borderRadius: \"4px\",\n                    }}\n                  >\n                    {erc721Tokens.length}\n                  </Box>\n                </Box>\n              ) : null}\n              {erc1155Tokens.length ? (\n                <Box direction={\"row\"} margin={{ left: '8px' }}>\n                  ZRC1155{\" \"}\n                  <Box\n                    background={\"backgroundBack\"}\n                    style={{\n                      minWidth: \"20px\",\n                      height: \"20px\",\n                      marginLeft: \"4px\",\n                      textAlign: \"center\",\n                      borderRadius: \"4px\",\n                    }}\n                  >\n                    {erc1155Tokens.length}\n                  </Box>\n                </Box>\n              ) : null}\n            </Box>\n          )}\n          group={[\n            {\n              groupBy: \"isERC20\",\n              renderGroupItem: () => (\n                <Box\n                  style={{\n                    minHeight: \"35px\",\n                    borderTopLeftRadius: '4px',\n                    borderTopRightRadius: '4px',\n                    // marginBottom: \"10px\",\n                    marginTop: \"10px\",\n                  }}\n                  pad={\"xsmall\"}\n                  background={\"backgroundBack\"}\n                >\n                  <Text>ZRC20 tokens</Text>\n                </Box>\n              ),\n            },\n            {\n              groupBy: \"isERC721\",\n              renderGroupItem: () => (\n                <Box\n                  style={{\n                    minHeight: \"35px\",\n                    borderTopLeftRadius: '4px',\n                    borderTopRightRadius: '4px',\n                    // marginBottom: \"10px\",\n                    marginTop: \"24px\",\n                  }}\n                  pad={\"xsmall\"}\n                  background={\"backgroundBack\"}\n                >\n                  <Text>ZRC721 tokens</Text>\n                </Box>\n              ),\n            },\n            {\n              groupBy: \"isERC1155\",\n              renderGroupItem: () => (\n                <Box\n                  style={{\n                    minHeight: \"35px\",\n                    borderTopLeftRadius: '4px',\n                    borderTopRightRadius: '4px',\n                    // marginBottom: \"10px\",\n                    marginTop: \"24px\",\n                  }}\n                  pad={\"xsmall\"}\n                  background={\"backgroundBack\"}\n                >\n                  <Text>ZRC1155 tokens</Text>\n                </Box>\n              ),\n            },\n          ]}\n          onToggle={(isVisible: boolean) => setDropdownVisible(isVisible)}\n        />\n      </Box>\n    </Box>\n  );\n}\n\nfunction TokenInfo(props: { value: Token }) {\n  const { value } = props;\n\n  return (\n    <Box\n      direction=\"row\"\n      style={{ minWidth: \"500px\", maxWidth: \"550px\", flex: \"0 0 auto\" }}\n      margin={{ bottom: \"3px\" }}\n      gap=\"medium\"\n    >\n      <Address address={value.tokenAddress} style={{ flex: \"1 1 50%\" }} />\n      <TokenValue\n        value={value.balance}\n        tokenAddress={value.tokenAddress}\n        style={{ flex: \"1 1 50%\", wordBreak: \"break-word\" }}\n      />\n    </Box>\n  );\n}\n\nfunction filterWithBalance(balance: string) {\n  return !!+balance;\n}\n","import {useZPTExchangeRate} from \"../../hooks/useZPTExchangeRate\";\nimport {getNearestPriceForTimestamp} from \"src/components/ZPT_USDT_Rate\";\nimport {Text, Box} from \"grommet\";\nimport React from \"react\";\nimport dayjs from \"dayjs\";\nimport {Dropdown} from \"../dropdown/Dropdown\";\nimport {useThemeMode} from \"src/hooks/themeSwitcherHook\";\nimport {CopyBtn} from \"./CopyBtn\"\nimport {toaster} from \"../../App\"\nimport {StatusGood} from \"grommet-icons\";\nimport styled from \"styled-components\"\n\nconst Icon = styled(StatusGood)`\n  margin-right: 5px;\n`;\n\ninterface ZPTValueProps {\n    value: (string | number)[];\n    timestamp?: string;\n    hideTip?: boolean;\n}\n\n// @ts-ignore\nexport const ZPTValueDropdown = (props: ZPTValueProps) => {\n    const {value, timestamp = \"\", hideTip = false} = props;\n    const {lastPrice} = useZPTExchangeRate();\n    const themeMode = useThemeMode();\n\n    if (!value.length) {\n        return null;\n    }\n\n    const isTodayTransaction =\n        dayjs(timestamp).format(\"YYYY-MM-DD\") === dayjs().format(\"YYYY-MM-DD\");\n    const price =\n        timestamp && !isTodayTransaction\n            ? getNearestPriceForTimestamp(timestamp)\n            : lastPrice;\n\n    const normalizedValue: {\n        value: string | number;\n        one: number;\n        usd: string | number;\n        index: number;\n        key: string;\n    }[] = value.map((hashValue, index) => {\n        const bi = BigInt(hashValue) / BigInt(10 ** 14);\n        const v = parseInt(bi.toString()) / 10000;\n        let USDValue = 0;\n        if (price && v > 0) {\n            USDValue = v * +price;\n        }\n\n        return {value: hashValue, one: v, usd: USDValue || 0, index, key: `${hashValue}_${index}`};\n    });\n\n    const hideCopyBtn = false\n\n    let valueCopy = ''\n\n    try {\n        valueCopy = normalizedValue[0].one.toString()\n    } catch (e) {\n    }\n\n    return (\n        <Dropdown\n            items={normalizedValue}\n            keyField={\"key\"}\n            themeMode={themeMode}\n            itemHeight={\"30px\"}\n            itemStyles={{justifyContent: \"center\"}}\n            renderValue={() => (\n                <Box direction={\"row\"} align={\"center\"} style={{paddingTop: \"2px\"}}>\n                    {hideCopyBtn ? null : (\n                        <CopyBtn\n                            value={valueCopy}\n                            onClick={(e) => {\n                                e.preventDefault();\n                                e.stopPropagation();\n                                toaster.show({\n                                    message: () => (\n                                        <Box direction={\"row\"} align={\"center\"} pad={\"small\"}>\n                                            {<Icon size={\"small\"} color={\"headerText\"}/>}\n                                            <Text size={\"small\"}>Copied to clipboard</Text>\n                                        </Box>\n                                    )\n                                });\n                            }}\n                        />\n                    )}\n                    <div style={{marginRight: '5px'}}></div>\n\n                    <Text size={\"small\"}>\n                        <b>\n                            {normalizedValue.reduce((prev, cur) => {\n                                prev += cur.one;\n                                return prev;\n                            }, 0)}{\" \"}\n                            ZPT\n                        </b>\n                    </Text>\n                    <Text size={\"small\"} style={{paddingLeft: \"4px\"}}>\n                        ($\n                        {normalizedValue\n                            .reduce((prev, cur) => {\n                                prev += +cur.usd;\n                                return prev;\n                            }, 0)\n                            .toLocaleString(\"en-US\", {\n                                minimumFractionDigits: 2,\n                                maximumFractionDigits: 2,\n                                currency: \"USD\"\n                            })}\n                        )\n                    </Text>\n                </Box>\n            )}\n            renderItem={(item) => (\n                <Box direction={\"row\"}>\n                    <Text size={\"small\"} style={{width: \"52.5px\"}}>\n                        Shard {item.index}:{\" \"}\n                    </Text>\n                    <Text size={\"small\"} style={{paddingLeft: \"4px\"}}>\n                        <b>{item.one} ZPT </b>\n                    </Text>\n                    {item.usd ? (\n                        <Text size={\"small\"} style={{paddingLeft: \"4px\"}}>\n                            ($\n                            {item.usd.toLocaleString(\"en-US\", {\n                                minimumFractionDigits: 2,\n                                maximumFractionDigits: 2,\n                                currency: \"USD\"\n                            })}\n                            )\n                        </Text>\n                    ) : null}\n                </Box>\n            )}\n        />\n    );\n};\n","import React from 'react'\nimport { StakingDelegation } from \"../../api/rpc\";\nimport Big from \"big.js\";\nimport { Box, Text } from \"grommet\";\nimport { Dropdown } from \"../../components/dropdown/Dropdown\";\nimport { useThemeMode } from \"../../hooks/themeSwitcherHook\";\nimport { Address, ZPTValue } from \"../../components/ui\";\n\nBig.PE = 30\n\nfunction DelegationsCount (props: { count: number }) {\n  return <Box style={{ marginRight: \"10px\" }} direction={\"row\"}>\n    <Box\n      background={\"backgroundBack\"}\n      style={{\n        minWidth: \"20px\",\n        height: \"20px\",\n        marginLeft: \"5px\",\n        textAlign: \"center\",\n        borderRadius: \"4px\",\n      }}\n    >\n      {props.count}\n    </Box>\n  </Box>\n}\n\nfunction StakingDelegations(props: { delegations: StakingDelegation[] }) {\n  const { delegations } = props\n\n  const themeMode = useThemeMode();\n\n  let totalAmountBig = Big(0)\n  let totalRewardsBig = Big(0)\n\n  delegations.forEach(delegation => {\n    totalAmountBig = totalAmountBig.plus(Big(delegation.amount))\n    totalRewardsBig = totalRewardsBig.plus(Big(delegation.reward))\n  })\n\n  const totalAmount = totalAmountBig.div(Big(10 ** 18)).round(2).toString()\n  const totalRewards = totalRewardsBig.div(Big(10 ** 18)).round(2).toString()\n\n  const items: StakingDelegation[] = delegations.filter(item => (+item.amount > 0 || +item.reward > 0))\n\n  const dropdownProps = {\n    keyField: 'validatorAddress',\n    itemHeight: '70px',\n    itemStyles: { marginBottom: \"0px\" },\n    themeMode,\n    items,\n    renderItem: (item: StakingDelegation) => {\n      return <Box\n        background={\"backgroundDropdownItem\"}\n        direction=\"column\"\n        pad={'4px'}\n        gap={'4px'}\n        margin={{bottom: '8px'}}\n      >\n        <Box>\n          <Address address={item.validatorAddress} />\n        </Box>\n        <Box direction={'row'} gap={'8px'}>\n          <Text size={'small'}>Stake</Text>\n          {+item.amount > 0 ? <ZPTValue value={item.amount} /> : '0 ZPT'}\n        </Box>\n        <Box direction={'row'} gap={'8px'}>\n          <Text size={'small'}>Reward</Text>\n          {+item.reward > 0 ? <ZPTValue value={item.reward} />: '0 ZPT'}\n        </Box>\n      </Box>\n    },\n    renderValue: () => {\n      return <Box direction={'row'} pad={{ top: '2px' }}>\n        <ZPTValue value={totalAmountBig.toString()} />\n        {items.length > 0 &&\n          <DelegationsCount count={items.length} />\n        }\n      </Box>\n    }\n  }\n\n  return <Box style={{ width: \"550px\" }}>\n    {(+totalAmount > 0 || +totalRewards > 0)\n      ? <Dropdown<any> {...dropdownProps} />\n      : <Text size={'small'}>0 ZPT</Text>\n    }\n  </Box>\n}\n\nexport default StakingDelegations\n","import React, { useEffect, useState } from \"react\";\nimport { Box, Text, Tip } from \"grommet\";\nimport {\n  Address,\n  ExpandString,\n  formatNumber,\n  ZPTValue,\n  TipContent,\n  TokenValue,\n} from \"src/components/ui\";\nimport { AddressDetails, ShardID } from \"src/types\";\nimport { TokensInfo } from \"./TokenInfo\";\nimport { Erc20, useERC20Pool } from \"src/hooks/ERC20_Pool\";\nimport { ZPTValueDropdown } from \"src/components/ui/ZPTValueDropdown\";\nimport { addressAliasMap } from \"src/config\";\nimport { useERC1155Pool } from \"src/hooks/ERC1155_Pool\";\nimport { CircleQuestion, Share } from \"grommet-icons\";\nimport styled from \"styled-components\";\nimport { useERC721Pool } from \"../../hooks/ERC721_Pool\";\nimport { StakingDelegation } from \"../../api/rpc\";\nimport StakingDelegations from \"./StakingDelegations\";\n\nexport const StyledBox = styled(Box)`\n  transition: all 0.2s linear;\n  border-radius: 2px;\n`;\n\nconst AddressDescription = styled(Box)`\n  font-weight: 700;\n  padding-left: 5px;\n`\n\ninterface AddressDetailsProps {\n  address: string;\n  addressDescription: string;\n  contracts: AddressDetails | null;\n  contractShardId: ShardID | null;\n  tokens: any[];\n  balance?: string;\n  delegations: StakingDelegation[]\n  holdersCount?: number\n}\n\nexport function AddressDetailsDisplay(props: AddressDetailsProps) {\n  const { address, addressDescription, contracts, contractShardId, tokens, balance, delegations, holdersCount } = props;\n  const erc20Map = useERC20Pool();\n  const erc721Map = useERC721Pool();\n  const erc1155Map = useERC1155Pool();\n  const [isNewAddress, setIsNewAddress] = useState<boolean>(false);\n\n  const erc20Token = erc20Map[address] || null;\n  const type = getType(contracts, erc20Token);\n  const erc721Token = erc721Map[address] || {};\n  const erc1151data = erc1155Map[address] || {};\n  const { meta = {}, ...restErc1151data } = erc1151data;\n\n  useEffect(() => {\n    let tId = 0;\n    const getActiveIndex = () => {\n      setIsNewAddress(true);\n      tId = window.setTimeout(() => setIsNewAddress(false), 1000);\n    };\n    getActiveIndex();\n\n    return () => clearTimeout(tId);\n  }, [address]);\n\n  const data = {\n    ...contracts,\n    ...erc20Token,\n    ...erc721Token,\n    token: tokens,\n    balance,\n    ...restErc1151data,\n    ...meta,\n    address,\n    addressDescription,\n    delegations,\n    contractShardId\n  };\n\n  if(holdersCount !== undefined) {\n    data.holders = holdersCount\n  }\n\n  if (!data) {\n    return null;\n  }\n\n  const items: string[] = Object.keys(data);\n\n  return (\n    <Box>\n      {items.sort(sortByOrder).map((i) => (\n        //@ts-ignore\n        <DetailItem\n          key={i}\n          name={i}\n          data={data}\n          type={type}\n          isNewAddress={isNewAddress}\n        />\n      ))}\n    </Box>\n  );\n}\n\nexport const Item = (props: { label: any; value: any }) => {\n  return (\n    <Box\n      direction=\"row\"\n      align={\"center\"}\n      margin={{ bottom: \"small\" }}\n      pad={{ bottom: \"small\" }}\n      border={{ size: \"xsmall\", side: \"bottom\", color: \"border\" }}\n    >\n      <Text\n        style={{ width: \"20%\" }}\n        color=\"minorText\"\n        size=\"small\"\n        margin={{ right: \"xsmall\" }}\n      >\n        {props.label}\n      </Text>\n      <Text style={{ width: \"80%\", wordBreak: \"break-all\" }} size=\"small\">\n        {props.value}\n      </Text>\n    </Box>\n  );\n};\n\nfunction DetailItem(props: {\n  data: any;\n  name: string;\n  type: TAddressType;\n  isNewAddress: boolean;\n}) {\n  const { data, name, type, isNewAddress } = props;\n\n  if (\n    !addressPropertyDisplayNames[name] ||\n    !addressPropertyDisplayValues[name] ||\n    data[name] === null\n  ) {\n    return null;\n  }\n\n  return (\n    <Item\n      label={addressPropertyDisplayNames[name](data, { type })}\n      value={addressPropertyDisplayValues[name](\n        data[name],\n        data,\n        { type },\n        isNewAddress\n      )}\n    />\n  );\n}\n\nconst addressPropertyDisplayNames: Record<\n  string,\n  (data: any, options: { type: TAddressType }) => React.ReactNode\n> = {\n  address: () => \"Address\",\n  value: () => \"Value\",\n  creatorAddress: () => \"Creator\",\n  // solidityVersion: () => \"Solidity version\",\n  meta: () => \"Meta\",\n  balance: () => \"Balance\",\n  delegations: () => \"Staked\",\n  // bytecode: () => \"Bytecode\",\n  token: () => \"Token\",\n  name: () => \"Name\",\n  symbol: () => \"Symbol\",\n  decimals: () => \"Decimals\",\n  totalSupply: () => \"Total Supply\",\n  holders: () => \"Holders\",\n  description: () => \"Description\",\n  transactionHash: () => \"Transaction Hash\",\n  circulatingSupply: () => \"Circulating Supply\",\n  contractShardId: () => \"Shard ID\",\n};\n\nconst AddressPostfix = (props: { value: string }) => {\n  const addressAlias = addressAliasMap[props.value]\n  if(!addressAlias) {\n    return null\n  }\n\n  const {name, link, description} = addressAlias\n\n  return <Box margin={{ left: 'xsmall' }} direction={'row'}>\n    (\n    {description &&\n      <Tip content={<TipContent message={description} />}>\n        {name}\n      </Tip>\n    }\n    {!description &&\n      name\n    }\n    {link &&\n      <Box margin={{ left: 'xsmall', right: 'xxsmall' }}>\n        <a href={link} target={'_blank'}>\n          <Share size={'small'} color={'brand'} style={{ cursor: 'pointer' }} />\n        </a>\n      </Box>\n    }\n    )\n  </Box>\n}\n\nconst addressPropertyDisplayValues: Record<\n  string,\n  (\n    value: any,\n    data: any,\n    options: { type: TAddressType },\n    isNewAddress: boolean\n  ) => React.ReactNode\n> = {\n  address: (value, data, options: { type: TAddressType }, isNewAddress) => {\n    return (\n      <>\n        <StyledBox\n          direction={\"row\"}\n          background={isNewAddress ? \"backgroundSuccess\" : \"\"}\n          style={{ maxWidth: \"600px\" }}\n        >\n          <Address address={value} displayHash />\n          <AddressPostfix value={value} />\n        </StyledBox>\n        {data.addressDescription &&\n          <AddressDescription margin={'12px 0 0'}>\n            {data.addressDescription}\n          </AddressDescription>}\n      </>\n    );\n  },\n  value: (value) => <TokenValue value={value} />,\n  creatorAddress: (value) => <Address address={value} />,\n  // solidityVersion: (value) => value,\n  IPFSHash: (value) => value,\n  meta: (value) => value,\n  // bytecode: (value) => <ExpandString value={value || \"\"} />,\n  balance: (value) => (\n    <Box width={\"550px\"}>\n      <ZPTValueDropdown value={value} />\n    </Box>\n  ),\n  delegations: (delegations: StakingDelegation[]) => {\n    return <Box>\n      <StakingDelegations delegations={delegations} />\n    </Box>\n  },\n  token: (value) => <TokensInfo value={value} />,\n  name: (value) => value,\n  symbol: (value) => value,\n  decimals: (value) => value,\n  totalSupply: (value, data) => (\n    <Box direction={\"row\"}>\n      <TokenValue\n        value={value}\n        tokenAddress={data.address}\n        hideSymbol\n        formatNumber\n      />\n      <Tip\n        dropProps={{ align: { bottom: \"top\" }}}\n        content={\n          <TipContent\n            showArrow={true}\n            message={`Last update block height: ${formatNumber(\n              +data.lastUpdateBlockNumber\n            )}`}\n          />\n        }\n      >\n        <span style={{ marginLeft: \"5px\" }}>\n          <CircleQuestion size=\"small\" />\n        </span>\n      </Tip>\n    </Box>\n  ),\n  holders: (value: string, data: any) => {\n    return (\n      <Box direction={\"row\"}>\n        <>{formatNumber(+value)}</>\n        <Tip\n          dropProps={{ align: { bottom: \"top\" }}}\n          content={\n            <TipContent\n              showArrow={true}\n              message={`Last update block height: ${formatNumber(\n                +data.lastUpdateBlockNumber\n              )}`}\n            />\n          }\n        >\n          <span style={{ marginLeft: \"5px\" }}>\n            <CircleQuestion size=\"small\" />\n          </span>\n        </Tip>\n      </Box>\n    );\n  },\n  description: (value) => <>{value}</>,\n  contractShardId: (value) => value,\n  transactionHash: (value) => <Address address={value} type={\"tx\"} />,\n  circulatingSupply: (value, data) => (\n    <Box direction={\"row\"}>\n      <TokenValue\n        value={value}\n        tokenAddress={data.address}\n        hideSymbol\n        formatNumber\n      />\n      <Tip\n        dropProps={{ align: { bottom: \"top\" }}}\n        content={\n          <TipContent\n            showArrow={true}\n            message={`Last update block height: ${formatNumber(\n              +data.lastUpdateBlockNumber\n            )}`}\n          />\n        }\n      >\n        <span style={{ marginLeft: \"5px\" }}>\n          <CircleQuestion size=\"small\" />\n        </span>\n      </Tip>\n    </Box>\n  ),\n};\n\nfunction sortByOrder(a: string, b: string) {\n  return addressPropertyOrder[a] - addressPropertyOrder[b];\n}\n\nconst addressPropertyOrder: Record<string, number> = {\n  address: 8,\n  contractShardId: 9,\n  transactionHash: 10,\n  value: 11,\n  balance: 12,\n  delegations: 13,\n  token: 14,\n  creatorAddress: 15,\n\n  name: 20,\n  symbol: 21,\n  decimals: 22,\n  totalSupply: 23,\n  circulatingSupply: 23,\n  holders: 24,\n\n  solidityVersion: 31,\n  IPFSHash: 32,\n  meta: 33,\n  bytecode: 34,\n  sourceCode: 34,\n};\n\ntype TAddressType = \"address\" | \"contract\" | \"erc20\" | \"erc721\" | \"erc1155\";\n\nexport function getType(\n  contracts: AddressDetails | null,\n  erc20Token: Erc20\n): TAddressType {\n  if (!!contracts && !!erc20Token) {\n    return \"erc20\";\n  }\n\n  if (!!contracts) {\n    return \"contract\";\n  }\n\n  return \"address\";\n}\n","import React from \"react\";\nimport { Box } from \"grommet\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {TRelatedTransaction} from \"../../api/client.interface\";\n\nexport interface IExportButtonProps {\n  address: string\n  type: TRelatedTransaction\n}\n\nconst LinkText = styled.div`\n  color: ${props => props.theme.global.colors.brand};\n  font-weight: 700;\n`\n\nconst TextContainer = styled.div`\n  color: ${props => props.theme.global.colors.minorText};\n  display: inline-block;\n  font-size: 12px;\n`\n\nexport const ExportToCsvButton = (props: IExportButtonProps) => {\n  const {address, type} = props\n  return <Box>\n    <TextContainer>\n      [ Download <Link to={`/exportData?address=${address}&type=${type}`} style={{ display: 'inline-block' }}>\n      <LinkText>CSV export</LinkText>\n    </Link> ]\n    </TextContainer>\n  </Box>\n}\n","import {ByteCode, Address} from 'src/types'\nimport Web3 from 'web3'\n\ntype ABIEntry = {\n  name: string\n  type: 'event' | 'function'\n  inputs: {name: string; type: 'string'; indexed: boolean}[]\n  outputs: {name: string; type: 'string'}[] | undefined\n}\n\nexport type IABI = ABIEntry[]\n\nconst web3 = new Web3()\n\nexport const ABIManager = (abi: IABI) => {\n  const entries = abi\n    .filter(({type}) => ['function', 'event'].includes(type))\n    .map((e) => {\n      let signature = ''\n      if (e.type === 'function') {\n        signature = web3.eth.abi.encodeFunctionSignature(e)\n      } else if (e.type === 'event') {\n        signature = web3.eth.abi.encodeEventSignature(e)\n      }\n\n      if (e.type === 'function' && !e.outputs) {\n        throw new Error(`ABI outputs definition expected for function \"${e.name}\"`)\n      }\n\n      return {\n        name: e.name,\n        type: e.type,\n        signature,\n        signatureWithout0x: signature.slice(2),\n        outputs: e.outputs ? e.outputs.map((e) => e.type) : [],\n        inputs: e.inputs,\n      }\n    })\n\n  const getEntryByName = (name: string) => entries.find((e) => e.name === name)\n\n  const hasAllSignatures = (names: string[], hexData: ByteCode) =>\n    names.reduce((acc, name) => {\n      const entry = getEntryByName(name)\n      if (!entry || !entry.signatureWithout0x) {\n        return false\n      }\n\n      return hexData.indexOf(entry.signatureWithout0x) !== -1 && acc\n    }, true)\n\n  const getMatchingSignatures = (names: string[], hexData: ByteCode) =>\n    names.filter((name) => {\n      const entry = getEntryByName(name)\n      if (!entry || !entry.signatureWithout0x) {\n        return false\n      }\n      return hexData.indexOf(entry.signatureWithout0x) !== -1\n    })\n\n  const decodeLog = (inputName: string, data: ByteCode, topics: string[]) => {\n    const event = abi.find((e) => e.name === inputName)\n    if (!event) {\n      throw new Error(`No input for event \"${inputName}\"`)\n    }\n\n    return web3.eth.abi.decodeLog(event.inputs, data, topics)\n  }\n\n  return {\n    abi: entries,\n    getEntryByName,\n    hasAllSignatures,\n    getMatchingSignatures,\n    decodeLog,\n  }\n}\n","import { Text, Tip } from \"grommet\";\nimport React from \"react\";\nimport {Address, TipContent} from \"src/components/ui\";\nimport { Log, RelatedTransaction, Topic } from \"src/types\";\nimport { parseSuggestedEvent } from \"src/web3/parseByteCode\";\nimport styled, { css } from \"styled-components\";\nimport { ABIManager, IABI } from \"src/web3/ABIManager\";\nimport ERC721ABI from \"src/web3/abi/ERC721ABI.json\";\nimport ERC1155ABI from \"src/web3/abi/ERC1155ABI.json\";\n\nconst erc721ABIManager = ABIManager(ERC721ABI as IABI)\nconst erc1155ABIManager = ABIManager(ERC1155ABI as IABI)\n\nexport const transferSignature = erc721ABIManager.getEntryByName('Transfer')!.signature\nexport const transferSingleSignature = erc1155ABIManager.getEntryByName('TransferSingle')!.signature\n\nexport const erc20TransferTopic =\n  '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef'\n\nexport type TxDirection = 'in' | 'out' | 'self'\n\nexport const Marker = styled.div<{ direction: TxDirection }>`\n  border-radius: 4px;\n  padding: 6px 3px;\n  width: 32px;\n\n  text-align: center;\n  font-weight: bold;\n  font-size: 90%;\n\n  ${(props) =>\n  props.direction === 'self'\n    ? css`\n            background: ${(props) => props.theme.global.colors.backgroundBack};\n    `\n    : props.direction === 'out'\n      ? css`\n            color: ${(props) => props.theme.global.colors.warning};\n            background: ${(props) => props.theme.global.colors.warningBackground};\n          `\n      : css`\n            color: ${(props) => props.theme.global.colors.success};\n            background: ${(props) => props.theme.global.colors.successBackground}\n        `};\n`\n\nexport const TxMethod = styled(Text)`\n  width: 100px;\n  display: block;\n  border-radius: 4px;\n  padding: 2px 4px;\n  text-align: center;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  background: ${(props) => props.theme.global.colors.backgroundMark};\n  font-size: 12px;\n`\n\nexport const TextEllipsis = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport const memo = (f: Function) => {\n  const cache = new Map()\n\n  return (data: any) => {\n    const hash: string = data.hash + (data.logs ? data.logs.length : '')\n    if (cache.has(hash)) {\n      return cache.get(hash)\n    }\n\n    const res = f(data)\n    const { parsed } = res\n    if (!parsed) {\n      return res\n    }\n\n    cache.set(hash, res)\n    return res\n  }\n}\n\n// take only first related at the moment\nexport const extractTransfer = memo((data: any) => {\n  const { relatedAddress } = data\n  const transferLogs = data.logs ? data.logs\n    .filter((d: any) => d.topics.includes(erc20TransferTopic)) : []\n\n  for (let i = 0; i < transferLogs.length; i++) {\n    const transferLog = transferLogs[i]\n    const event = parseSuggestedEvent('Transfer(address,address,uint256)', transferLog.data, transferLog.topics) || null\n\n    if (!event) {\n      continue\n    }\n\n    event.parsed['$0'] = event.parsed['$0'].toLowerCase()\n    event.parsed['$1'] = event.parsed['$1'].toLowerCase()\n\n    if (relatedAddress === event.parsed['$0'] || relatedAddress === event.parsed['$1']) {\n      return {\n        transferLog: transferLog || {},\n        parsed: event.parsed || {}\n      }\n    }\n  }\n\n  return {\n    transferLog: {},\n    parsed: {}\n  }\n})\n\nexport const extractTokenId = memo((data: any) => {\n  const { transactionType, logs = [] } = data\n  const eventType = transactionType === 'erc721' ? 'Transfer' : 'TransferSingle'\n  const signature = transactionType === 'erc721' ? transferSignature : transferSingleSignature\n  const abi = transactionType === 'erc721' ? erc721ABIManager : erc1155ABIManager\n  const transferLogs = logs.filter(({ topics }: { topics: Topic[] }) => topics.includes(signature))\n  if (transferLogs.length > 0) {\n    try {\n      const log = transferLogs[0]\n      const [topic0, ...topics] = log.topics\n      const {tokenId, id} = abi.decodeLog(eventType, log.data, topics)\n      if (tokenId || id) {\n        return tokenId || id\n      }\n    } catch (e) {\n      console.error('Cannot decode log', (e as Error).message)\n      return ''\n    }\n  }\n  return ''\n})\n\nexport const TransactionAddress = (props: { id: string, address: string, width?: string }) => {\n  const { id: rootAddress, address, width = '120px' } = props\n  const isRootAddress = rootAddress === address\n\n  const tipContent = <TipContent\n      showArrow={true}\n      message={<Address\n          address={address}\n          displayHash={true}\n          showLink={false}\n          hideCopyBtn={true}\n          color={'white'}\n          style={{ fontSize: 'small' }}\n      />}\n  />\n\n  return <Tip dropProps={{ align: { bottom: \"top\" }}} content={tipContent}>\n      <Text size=\"12px\">\n        <Address\n            isShortEllipsis={true}\n            address={address}\n            color={isRootAddress ? 'text' : 'brand'}\n            showLink={!isRootAddress}\n            style={{ width }}\n        />\n      </Text>\n    </Tip>\n}\n\nexport const TransferDirectionMarker = (props: { id: string, data: RelatedTransaction }) => {\n  const { id, data: { from, to } } = props\n\n  let direction: TxDirection = from === id ? 'out' : 'in'\n  if (from === to) {\n    direction = 'self'\n  }\n\n  return <Text size=\"12px\">\n    <Marker direction={direction}>{direction.toUpperCase()}</Marker>\n  </Text>\n}\n","import styled from \"styled-components\";\nimport {Box, Button, DropButton, Text, TextInput} from \"grommet\";\nimport React, {useState} from \"react\";\nimport {Filter as FilterIcon} from \"grommet-icons/icons\";\nimport {Close} from \"grommet-icons\";\n\ninterface ColumnFilterProps {\n    initialValue?: string\n    onApply: (value: string) => void\n}\n\nconst FilterDropButton = styled(DropButton)`\n  padding: 4px;\n  border-radius: 4px;\n  border: 1px solid #e7ecf7;\n  font-weight: normal;\n  \n  &:hover, &:active {\n    box-shadow: 0 2px 6px rgb(119 131 143 / 35%);\n  }\n`\n\nexport const ColumnFilter = (props: ColumnFilterProps) => {\n    const { initialValue = '', onApply } = props\n\n    const [value, setValue] = useState(initialValue)\n    const [isValueApplied, setValueApplied] = useState(!!initialValue)\n    const [errorMsg, setErrorMsg] = useState('')\n\n    const validateValue = (v: string) => {\n        if(v.length > 0) {\n            if(!v.startsWith('0x') && !v.startsWith('one1')) {\n                return 'Address should start with 0x or one1'\n            }\n            if(v.length != 42) {\n                return 'Address must be 42 characters long'\n            }\n        }\n        return ''\n    }\n\n    const onApplyClicked = () => {\n        const err = validateValue(value)\n        setErrorMsg(err)\n\n        if(!err) {\n            onApply(value)\n            setValueApplied(true)\n        }\n    }\n    const onClearClicked = () => {\n        if (isValueApplied) {\n            onApply('')\n        }\n        setValue('')\n        setValueApplied(false)\n    }\n\n    return <FilterDropButton\n        label={<Box direction={'row'} gap={'8px'}>\n            <FilterIcon size={'16px'} color={'text'} />\n            {value && isValueApplied &&\n                <Box direction={'row'} gap={'8px'} justify={'between'} align={'center'}>\n                    <Text size={'12px'} color={'text'}>{value.slice(0, 5)}...{value.slice(-3)}</Text>\n                    <Close size={'12px'} onClick={onClearClicked} />\n                </Box>\n            }\n        </Box>}\n        dropContent={\n            <Box pad=\"small\">\n                <TextInput\n                    placeholder={'Search by address e.g. 0x..'}\n                    value={value}\n                    size={'xsmall'}\n                    onChange={(e) => setValue(e.target.value)}\n                    onKeyPress={(e) => { if(e.charCode === 13) onApplyClicked() }}\n                    style={{ fontWeight: 'normal' }}\n                />\n                {errorMsg && <Box margin={{ top: 'xsmall' }}>\n                    <Text size={'xsmall'}>{errorMsg}</Text>\n                </Box>}\n                <Box direction={'row'} margin={{ top: 'small' }} gap={'8px'}>\n                    <Button primary label={<Box direction={'row'} justify={'between'} align={'center'}>\n                        <FilterIcon size={'12px'} color={'text'} />\n                        <Text color={'text'} size={'12px'}>Filter</Text>\n                    </Box>} onClick={onApplyClicked} />\n                    <Button label={'Clear'} onClick={onClearClicked} style={{ fontSize: '12px' }} />\n                </Box>\n            </Box>\n        }\n        dropProps={{ margin: { top: '32px' }, round: '4px', background: 'background' }}\n    />\n}\n","import { Box, ColumnConfig, Text } from \"grommet\";\nimport React from \"react\";\nimport { RelatedTransaction } from \"../../../../../types\";\nimport { Address, DateTime, ZPTValue } from \"../../../../../components/ui\";\nimport { TransactionAddress, TransferDirectionMarker } from \"./common\";\n\nexport const getStakingColumns = (id: string): ColumnConfig<any>[] => {\n  return [\n    {\n      property: \"hash\",\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ width: \"95px\" }}\n        >\n          Hash\n        </Text>\n      ),\n      render: (data: any) => (\n        <Address\n          address={data.transactionHash || data.hash}\n          type=\"staking-tx\"\n          isShortEllipsis={true}\n          style={{ width: \"170px\" }}\n        />\n      ),\n    },\n    {\n      property: \"type\",\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ width: \"140px\" }}\n        >\n          Type\n        </Text>\n      ),\n      render: (data: RelatedTransaction) => (\n        <Text size=\"small\" style={{ width: \"140px\" }}>\n          {data.type}\n        </Text>\n      ),\n    },\n    {\n      property: \"validator\",\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ width: \"170px\" }}\n        >\n          Validator\n        </Text>\n      ),\n      render: (data: RelatedTransaction) => data.msg?.validatorAddress\n        ? <TransactionAddress id={id} address={data.msg?.validatorAddress || data.from} width={'170px'} />\n        : '—'\n    },\n    {\n      property: \"marker\",\n      header: <></>,\n      render: (data: RelatedTransaction) => <TransferDirectionMarker id={id} data={data} />,\n    },\n    {\n      property: \"delegator\",\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ width: \"170px\" }}\n        >\n          Delegator\n        </Text>\n      ),\n      render: (data: RelatedTransaction) => data.msg?.delegatorAddress\n        ? <TransactionAddress id={id} address={data.msg?.delegatorAddress} width={'170px'} />\n        : '—',\n    },\n    {\n      property: \"value\",\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ width: \"220px\" }}\n        >\n          Value\n        </Text>\n      ),\n      render: (data: RelatedTransaction) => (\n        <Box justify=\"center\">\n          {data.msg?.amount ? (\n            <ZPTValue value={data.msg?.amount} timestamp={data.timestamp} />\n          ) : data.amount ? (\n            <ZPTValue value={data.amount} timestamp={data.timestamp} />\n          ) : (\n            \"—\"\n          )}\n        </Box>\n      ),\n    },\n    {\n      property: \"timestamp\",\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ width: \"140px\" }}\n        >\n          Timestamp\n        </Text>\n      ),\n      render: (data: RelatedTransaction) => (\n        <Box direction=\"row\" gap=\"xsmall\" justify=\"end\">\n          <DateTime date={data.timestamp} />\n        </Box>\n      ),\n    },\n  ];\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Box } from \"grommet\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport {\n  getByteCodeSignatureByHash,\n  getRelatedTransactionsByType,\n  getRelatedTransactionsCountByType\n} from \"src/api/client\";\nimport { TransactionsTable } from \"src/components/tables/TransactionsTable\";\nimport {\n  Filter, FilterProperty, FilterType,\n  RelatedTransaction,\n} from \"src/types\";\nimport { TRelatedTransaction } from \"src/api/client.interface\";\nimport {getAddress} from \"src/utils\";\nimport { ExportToCsvButton } from \"../../../../components/ui/ExportToCsvButton\";\nimport { getColumns, getERC20Columns, getNFTColumns, getStakingColumns } from \"./columns\";\nimport useQuery from \"../../../../hooks/useQuery\";\n\nconst internalTxsBlocksFrom = 23000000\nconst allowedLimits = [10, 25, 50, 100]\n\nconst prepareFilter = (type: TRelatedTransaction, filter: Filter) => {\n  if (type === 'internal_transaction') {\n    filter.filters = [...filter.filters, {\n      type: \"gte\", property: \"block_number\", value: internalTxsBlocksFrom\n    }]\n  }\n\n  return {\n    ...filter,\n    filters: filter.filters.map(item => {\n      if(item.property === 'to') {\n        const value = item.value as string\n        let address = value\n        if(value.startsWith('one1')) { // convert one1 to 0x before send request to backend\n          try {\n            address = getAddress(value as string).basicHex\n          } catch (e) {}\n        }\n        return {\n          ...item,\n          value: `'${address}'`\n        }\n      }\n      return item\n    })\n  }\n}\n\nconst usePrevious = (value: TRelatedTransaction) => {\n  const ref = useRef();\n  useEffect(() => {\n    // @ts-ignore\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nexport function Transactions(props: {\n  type: TRelatedTransaction;\n  rowDetails?: (row: any) => JSX.Element;\n  onTxsLoaded?: (txs: RelatedTransaction[]) => void;\n}) {\n  const history = useHistory()\n  const queryParams = useQuery();\n  let limitParam = +(queryParams.get('limit') || localStorage.getItem(\"tableLimitValue\") || allowedLimits[0]);\n  const offsetParam = +(queryParams.get('offset') || 0)\n  const toParam = queryParams.get('to') || ''\n\n  if (!allowedLimits.includes(limitParam)) {\n    limitParam = allowedLimits[0]\n  }\n\n  const initFilter: Filter = {\n    offset: offsetParam,\n    limit: limitParam,\n    orderBy: \"block_number\",\n    orderDirection: \"desc\",\n    filters: [],\n  };\n\n  const initFilterState = {\n    transaction: { ...initFilter },\n    staking_transaction: { ...initFilter },\n    internal_transaction: { ...initFilter },\n    erc20: { ...initFilter },\n    erc721: { ...initFilter },\n    erc1155: { ...initFilter },\n  }\n\n  const filterOnLoad = {...initFilterState}\n\n  if(toParam) {\n    filterOnLoad[props.type].filters.push({\n      type: 'eq' as FilterType,\n      property: 'to' as FilterProperty,\n      value: toParam.toLowerCase()\n    })\n  }\n\n  const initTotalElements = 100\n  const [cachedTxs, setCachedTxs] = useState<{ [name: string]: RelatedTransaction[]}>({})\n  const [relatedTrxs, setRelatedTrxs] = useState<RelatedTransaction[]>([]);\n  const [totalElements, setTotalElements] = useState<number>(initTotalElements)\n  const [cachedTotalElements, setCachedTotalElements] = useState<{ [name: string]: number}>({})\n  const [filter, setFilter] = useState<{ [name: string]: Filter }>(filterOnLoad);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const prevType = usePrevious(props.type);\n\n  // @ts-ignore\n  let { id } = useParams();\n  id = `${id}`.toLowerCase();\n  id = id.slice(0, 3) === \"one\" ? getAddress(id).basicHex : id;\n  const prevId = usePrevious(id);\n\n  const { limit = 10, offset = 0 } = filter[props.type];\n\n  const loadTransactions = async () => {\n    setIsLoading(true)\n    try {\n      let txs = []\n      const txsFilter = prepareFilter(props.type, filter[props.type])\n      txs = await getRelatedTransactionsByType([\n        0,\n        id,\n        props.type,\n        txsFilter,\n      ]);\n\n      // for transactions we display call method if any\n      if (props.type === \"transaction\") {\n        const methodSignatures = await Promise.all(\n          txs.map((tx: any) => {\n            return tx.input && tx.input.length > 10\n              ? getByteCodeSignatureByHash([tx.input.slice(0, 10)])\n              : Promise.resolve([]);\n          })\n        );\n\n        txs = txs.map((l, i) => ({\n          ...l,\n          signatures: methodSignatures[i],\n        }));\n      }\n\n      txs = txs.map((tx: any) => {\n        tx.relatedAddress = id;\n        return tx;\n      });\n\n      setRelatedTrxs(txs);\n      if (props.onTxsLoaded) {\n        props.onTxsLoaded(txs)\n      }\n    } catch (e) {\n      console.error('Cannot get or parse txs:', e);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  const loadTransactionsCount = async () => {\n    try {\n      const countFilter = prepareFilter(props.type, filter[props.type])\n      const txsCount = await getRelatedTransactionsCountByType([\n        0,\n        id,\n        props.type,\n        countFilter,\n      ])\n      setTotalElements(txsCount)\n      setCachedTotalElements({\n        ...cachedTotalElements,\n        [props.type]: txsCount\n      })\n    } catch (e) {\n      console.error('Cannot get txs count', (e as Error).message)\n      setTotalElements(initTotalElements)\n    }\n  }\n\n  useEffect(() => {\n    setCachedTxs({})\n    setCachedTotalElements({})\n    setFilter(initFilterState)\n  }, [id])\n\n  useEffect(() => {\n    const cachedValue = cachedTotalElements[props.type]\n    if (cachedValue && id === prevId) {\n      setTotalElements(cachedValue)\n    } else {\n      loadTransactionsCount()\n    }\n  }, [props.type, id, filter[props.type]])\n\n  // Change active tab\n  useEffect(() => {\n    // If tab changed (and not initially loaded), drop offset to zero\n    if (prevType) {\n      setFilter({\n        ...initFilterState,\n        [props.type]: {\n          ...initFilter,\n          offset: 0\n        }\n      })\n    }\n    if (cachedTxs[props.type]) {\n      setRelatedTrxs(cachedTxs[props.type]);\n    } else {\n      loadTransactions()\n    }\n  }, [props.type])\n\n  // Change params: offset, limit\n  useEffect(() => {\n    if (prevType === props.type) {\n      loadTransactions()\n    }\n  }, [filter[props.type], id]);\n\n  // change filter by \"to\" field\n  useEffect(() => {\n    if (prevType === props.type) {\n      loadTransactionsCount()\n    }\n  }, [filter[props.type].filters.length]);\n\n  let columns = [];\n  const filterTo = filter[props.type].filters.find(item => item.property === 'to')\n\n  switch (props.type) {\n    case \"staking_transaction\": {\n      columns = getStakingColumns(id);\n      break;\n    }\n    case \"erc20\": {\n      columns = getERC20Columns(id);\n      break;\n    }\n\n    case \"erc721\": {\n      columns = getNFTColumns(id)\n      break;\n    }\n\n    default: {\n      columns = getColumns(id, {\n        'to': {\n          value: filterTo ? filterTo.value.toString() : '',\n          onApply: (value = '') => {\n            const filters = filter[props.type].filters.filter(item => item.property !== 'to')\n            if (value) {\n              filters.push({\n                type: 'eq' as FilterType,\n                property: 'to' as FilterProperty,\n                value: value.toLowerCase()\n              })\n            }\n            onFilterChanged({\n              ...filter[props.type],\n              filters,\n              offset: 0\n            })\n          }\n        }\n      });\n      break;\n    }\n  }\n\n  const onFilterChanged = (value: Filter) => {\n    const { offset, limit, filters } = value\n    if (limit !== filter[props.type].limit) {\n      localStorage.setItem(\"tableLimitValue\", `${limit}`);\n    }\n    setFilter({ ...filter, [props.type]: value });\n    const activeTab = queryParams.get('activeTab') || 0\n\n    let historyUrl = `?activeTab=${activeTab}&offset=${offset}&limit=${limit}`\n\n    const filterTo = filters.find(item => item.property === 'to')\n    if(filterTo) {\n      historyUrl += `&to=${filterTo.value}`\n    }\n\n    history.push(historyUrl)\n  }\n\n  return (\n    <Box style={{ padding: \"10px\" }}>\n      <TransactionsTable\n        columns={columns}\n        data={relatedTrxs}\n        totalElements={totalElements}\n        limit={+limit}\n        filter={filter[props.type]}\n        isLoading={isLoading}\n        setFilter={onFilterChanged}\n        noScrollTop\n        minWidth=\"1266px\"\n        hideCounter\n        rowDetails={props.rowDetails}\n        showPages={totalElements > 0}\n      />\n      {['transaction', 'erc20', 'erc721', 'erc1155', 'internal_transaction'].includes(props.type) &&\n        <Box style={{ alignItems: 'flex-end' }}>\n          <ExportToCsvButton address={id} type={props.type} />\n        </Box>\n      }\n    </Box>\n  );\n}\n","import { Box, ColumnConfig, Text } from \"grommet\";\nimport { Address, DateTime, TokenValue } from \"../../../../../components/ui\";\nimport { RelatedTransaction } from \"../../../../../types\";\nimport React from \"react\";\nimport { TransactionAddress, TransferDirectionMarker, TxMethod } from \"./common\";\n\nexport function getERC20Columns(id: string): ColumnConfig<any>[] {\n  return [\n    {\n      property: 'hash',\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ width: '95px' }}\n        >\n          Hash\n        </Text>\n      ),\n      render: (data: any) => (\n        <Address address={data.transactionHash || data.hash} type=\"tx\" isShortEllipsis={true} style={{ width: '170px' }} />\n      )\n    },\n    {\n      property: 'event',\n      header: (\n        <Text color=\"minorText\" size=\"small\">\n          Event\n        </Text>\n      ),\n      render: (data: any) => {\n        const eventType = data.eventType || '-'\n        return (\n          <TxMethod>{eventType}</TxMethod>\n        )\n      }\n    },\n    {\n      property: 'from',\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ width: '120px' }}\n        >\n          From\n        </Text>\n      ),\n      render: (data: RelatedTransaction) => <TransactionAddress id={id} address={data.from} />\n    },\n    {\n      property: 'marker',\n      header: <></>,\n      render: (data: RelatedTransaction) => <TransferDirectionMarker id={id} data={data} />\n    },\n    {\n      property: 'to',\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ width: '120px' }}\n        >\n          To\n        </Text>\n      ),\n      render: (data: RelatedTransaction) => <TransactionAddress id={id} address={data.to} />\n    },\n    {\n      property: 'value',\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ width: '260px' }}\n        >\n          Value\n        </Text>\n      ),\n      render: (data: any) => {\n        const { address, value, eventType } = data\n\n        if (!value) {\n          return '?'\n        }\n\n        if (eventType === 'Approval') {\n          return (\n            <Box direction={'row'} gap={'4px'}>\n              <TokenValue isShort={true} tokenAddress={address} value={value} />\n            </Box>)\n        }\n\n        return (\n          <Text size=\"12px\">\n            <TokenValue tokenAddress={address} value={value} />\n          </Text>)\n      }\n    },\n    {\n      property: 'token',\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ width: '150px' }}\n        >\n          Token\n        </Text>\n      ),\n      render: (data: any) => {\n        const address = data.address ? data.address : '—'\n\n        return (\n          <Text size=\"12px\">\n            <Address address={address} />\n          </Text>\n        )\n      }\n    },\n    {\n      property: 'timestamp',\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ width: '140px' }}\n        >\n          Timestamp\n        </Text>\n      ),\n      render: (data: RelatedTransaction) => (\n        <Box direction=\"row\" gap=\"xsmall\" justify=\"end\">\n          <DateTime\n            date={data.timestamp}\n          />\n        </Box>\n      )\n    }\n  ]\n}\n","import { Box, ColumnConfig, Text, Tip } from \"grommet\";\nimport React from \"react\";\nimport { RelatedTransaction } from \"../../../../../types\";\nimport { Address, DateTime } from \"../../../../../components/ui\";\nimport {\n  extractTokenId,\n  TextEllipsis,\n  TransactionAddress,\n  TransferDirectionMarker,\n  TxMethod\n} from \"./common\";\n\nexport function getNFTColumns(id: string): ColumnConfig<any>[] {\n  return [\n    {\n      property: \"hash\",\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ width: \"95px\" }}\n        >\n          Hash\n        </Text>\n      ),\n      render: (data: any) => (\n        <Address\n          address={data.transactionHash || data.hash}\n          type=\"tx\"\n          isShortEllipsis={true}\n          style={{ width: \"170px\" }}\n        />\n      ),\n    },\n    {\n      property: 'event',\n      header: (\n        <Text color=\"minorText\" size=\"small\">\n          Event\n        </Text>\n      ),\n      render: (data: any) => {\n        const eventType = data.eventType || '-'\n        return (\n          <TxMethod>{eventType}</TxMethod>\n        )\n      }\n    },\n    {\n      property: \"from\",\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ width: \"180px\" }}\n        >\n          From\n        </Text>\n      ),\n      render: (data: RelatedTransaction) => <TransactionAddress id={id} address={data.from} width={'180px'} />,\n    },\n    {\n      property: \"marker\",\n      header: <></>,\n      render: (data: RelatedTransaction) => <TransferDirectionMarker id={id} data={data} />,\n    },\n    {\n      property: \"to\",\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ width: \"180px\" }}\n        >\n          To\n        </Text>\n      ),\n      render: (data: RelatedTransaction) => data.to.trim() && <TransactionAddress id={id} address={data.to} width={'180px'} />,\n    },\n    // {\n    //   property: \"value\",\n    //   header: (\n    //     <Text\n    //       color=\"minorText\"\n    //       size=\"small\"\n    //       style={{ width: \"120px\" }}\n    //     >\n    //       Value\n    //     </Text>\n    //   ),\n    //   render: (data: RelatedTransaction) => (\n    //     <Box justify=\"center\">\n    //       <ZPTValue value={data.value} timestamp={data.timestamp} />\n    //     </Box>\n    //   ),\n    // },\n    {\n      property: 'tokenId',\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ width: '120px' }}\n        >\n          TokenId\n        </Text>\n      ),\n      render: (data: any) => {\n        const tokenId = extractTokenId(data)\n        return (\n          <Tip content={tokenId}>\n            <TextEllipsis size=\"12px\" style={{ width: '115px' }}>\n              {tokenId}\n            </TextEllipsis>\n          </Tip>\n        )\n      }\n    },\n    {\n      property: 'token',\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ width: '120px' }}\n        >\n          Token\n        </Text>\n      ),\n      render: (data: any) => {\n        const address = data.address ? data.address : '—'\n\n        return (\n          <Text size=\"12px\">\n            <Address address={address} />\n          </Text>\n        )\n      }\n    },\n    {\n      property: \"timestamp\",\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ width: \"140px\" }}\n        >\n          Timestamp\n        </Text>\n      ),\n      render: (data: RelatedTransaction) => (\n        <Box direction=\"row\" gap=\"xsmall\" justify=\"end\">\n          <DateTime\n            date={data.timestamp}\n          />\n        </Box>\n      ),\n    },\n  ];\n}\n","import {Box, ColumnConfig, Text, Tip} from \"grommet\";\nimport React from \"react\";\nimport { RelatedTransaction } from \"../../../../../types\";\nimport { Address, DateTime, ZPTValue, TipContent } from \"../../../../../components/ui\";\nimport { TransactionAddress, TransferDirectionMarker, TxMethod } from \"./common\";\nimport {ColumnFilter} from \"../ColumnFilter\";\n\ninterface ColumnFilters {\n  [property: string]: {\n    value: string\n    onApply: (value: string) => void\n  }\n}\n\nexport function getColumns(\n    id: string,\n    columnFilters?: ColumnFilters\n): ColumnConfig<any>[] {\n  return [\n    // {\n    //   property: \"type\",\n    //   size: \"\",\n    //   header: (\n    //     <Text\n    //       color=\"minorText\"\n    //       size=\"small\"\n    //       style={{ width: \"140px\" }}\n    //     >\n    //       Type\n    //     </Text>\n    //   ),\n    //   render: (data: RelatedTransaction) => (\n    //     <Text size=\"small\" style={{ width: \"140px\" }}>\n    //       {relatedTxMap[data.transactionType] || data.transactionType}\n    //     </Text>\n    //   ),\n    // },\n    {\n      property: \"hash\",\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ width: \"95px\" }}\n        >\n          Hash\n        </Text>\n      ),\n      render: (data: any) => (\n        <Address\n          address={data.transactionHash || data.hash}\n          type=\"tx\"\n          isShortEllipsis={true}\n          style={{ width: \"170px\" }}\n        />\n      ),\n    },\n    {\n      property: \"method\",\n      header: (\n        <Text color=\"minorText\" size=\"small\">\n          Method\n        </Text>\n      ),\n      render: (data: any) => {\n        let signature;\n\n        try {\n          // @ts-ignore\n          signature =\n            data.signatures &&\n            data.signatures.map((s: any) => s.signature)[0].split(\"(\")[0];\n        } catch (err) {}\n\n        if (!signature && data.value !== \"0\") {\n          signature = \"transfer\";\n        }\n\n        if (!signature && data.input.length >= 10) {\n          signature = data.input.slice(2, 10);\n        }\n\n        if (!signature) {\n          return <Text size=\"small\">{\"—\"}</Text>;\n        }\n\n        const tipContent = <TipContent\n            showArrow={true}\n            message={<Text size={'small'} textAlign={'center'}>{signature}</Text>}\n        />\n\n        return (\n          <Tip\n            dropProps={{ align: { bottom: \"top\" }}}\n            content={tipContent}\n          >\n            <TxMethod>{signature}</TxMethod>\n          </Tip>\n        );\n      },\n    },\n    // {\n    //   property: \"shard\",\n    //   header: (\n    //     <Text color=\"minorText\" size=\"small\">\n    //       Shard\n    //     </Text>\n    //   ),\n    //   render: (data: RelatedTransaction) => (\n    //     <Box direction=\"row\" gap=\"3px\" align=\"center\">\n    //       <Text size=\"small\">{0}</Text>\n    //       <FormNextLink\n    //         size=\"small\"\n    //         color=\"brand\"\n    //         style={{ marginBottom: \"2px\" }}\n    //       />\n    //       <Text size=\"small\">{0}</Text>\n    //     </Box>\n    //   ),\n    // },\n    {\n      property: \"from\",\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ width: \"180px\" }}\n        >\n          From\n        </Text>\n      ),\n      render: (data: RelatedTransaction) => <TransactionAddress id={id} address={data.from} width={'180px'} />,\n    },\n    {\n      property: \"marker\",\n      header: <></>,\n      render: (data: RelatedTransaction) => <TransferDirectionMarker id={id} data={data} />,\n    },\n    {\n      property: \"to\",\n      header: (\n        <Box direction={'row'} justify={'start'} gap={'8px'} align={'center'} style={{ width: \"180px\" }}>\n          <Text\n              color=\"minorText\"\n              size=\"small\"\n          >\n            To\n          </Text>\n          {columnFilters && columnFilters['to'] &&\n              <ColumnFilter\n                  initialValue={columnFilters['to'].value}\n                  onApply={columnFilters['to'].onApply}\n              />}\n        </Box>\n      ),\n      render: (data: RelatedTransaction) => <TransactionAddress id={id} address={data.to} width={'180px'} />,\n    },\n    {\n      property: \"value\",\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ width: \"120px\" }}\n        >\n          Value\n        </Text>\n      ),\n      render: (data: RelatedTransaction) => (\n        <Box justify=\"center\">\n          <ZPTValue value={data.value} timestamp={data.timestamp} />\n        </Box>\n      ),\n    },\n\n    {\n      property: \"timestamp\",\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ width: \"140px\" }}\n        >\n          Timestamp\n        </Text>\n      ),\n      render: (data: RelatedTransaction) => (\n        <Box direction=\"row\" gap=\"xsmall\" justify=\"end\">\n          <DateTime date={data.timestamp} />\n        </Box>\n      ),\n    },\n  ];\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { IUserERC721Assets } from \"src/api/client.interface\";\nimport { Box, Spinner, Text } from \"grommet\";\nimport { Address } from \"src/components/ui\";\n// import HarmonyLogo from '../../../../assets/Logo.svg';\n\nexport interface IInventoryItemProps {\n  item: IUserERC721Assets;\n}\n\nconst InventItem = styled(Box)`\n  position: relative;\n  width: 16.6666%;\n  min-width: 178px;\n  height: 256px;\n  padding-right: 10px;\n  padding-left: 10px;\n  margin-bottom: 32px;\n  \n  img {\n    transition: transform 500ms;\n  }\n\n  img:hover {\n    transform: scale(1.07);\n  }\n\n  @media (max-width: 768px) {\n    width: 130px;\n    height: 130px;\n    min-width: 130px;\n  }\n`\n\nconst InventBoxContainer = styled(Box)`\n  box-shadow: rgb(0 0 0 / 7%) 0 4px 14px;\n  overflow: hidden;\n`\n\nconst InventImg = styled.img`\n  max-width: 100%;\n  max-height: 205px;\n`;\n\nconst InventoryInfo = styled(Box)`\n  padding: 10px;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`\n\nconst Loader = styled.div`\n  position: absolute;\n  width: 100%;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%,-50%);\n  background: ${(props) => props.theme.backgroundBack};\n`;\n\nconst ErrorPreview = styled(Box)`\n  position: relative;\n  width: 100%;\n  pointer-events: none;\n\n  @media (max-width: 768px) {\n    width: 130px;\n    height: 100px;\n    min-width: 130px;\n  }\n`;\n\nconst EmptyPreview = ErrorPreview\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  max-width: 100%;\n  max-height: 100%;\n  opacity: 0.5;\n`\n\nexport function InventoryItem(props: IInventoryItemProps) {\n  const [isLoading, setIsLoading] = useState(!!props.item?.meta?.image);\n  const [isErrorLoading, setIsErrorLoading] = useState(false);\n\n  const url = props.item?.meta?.image || \"\";\n  const description = props.item?.meta?.description || \"\";\n  const { tokenID, ownerAddress } = props.item;\n\n  const itemLink = `/inventory/${props.item.type}/${props.item.tokenAddress}/${props.item.tokenID}`\n\n  return (\n    <InventItem>\n      <InventBoxContainer round={'10px'}>\n        <a href={itemLink}>\n          <Box\n            direction={\"column\"}\n            align={\"center\"}\n            justify={\"center\"}\n            style={{\n              // width: '215px',\n              // minHeight: \"215px\",\n              // maxHeight: \"215px\",\n              overflow: \"hidden\",\n              // borderRadius: '6px'\n            }}\n            background={\"backgroundBack\"}\n          >\n            {isLoading ? (\n              <ErrorPreview direction={\"column\"} justify={\"center\"} align={\"center\"}>\n                {/* <Image src={HarmonyLogo} /> */}\n                <Box style={{ position: 'absolute' }}>\n                  <Spinner />\n                </Box>\n              </ ErrorPreview>\n            ) : null}\n            {isErrorLoading ? (\n              <ErrorPreview\n                direction={\"column\"}\n                justify={\"center\"}\n                align={\"center\"}\n              >\n                {/* <Image src={HarmonyLogo} /> */}\n                <Box style={{ position: 'absolute', bottom: '8px' }}>\n                  <Text style={{ opacity: 0.5 }}>No Image</Text>\n                </Box>\n              </ErrorPreview>\n            ) : url ? (\n              <InventImg\n                title={description}\n                src={url}\n                onLoad={() => setIsLoading(false)}\n                onError={() => {\n                  setIsLoading(false);\n                  setIsErrorLoading(true);\n                }}\n                style={{ display: isLoading ? 'none' : 'unset' }}\n              />\n            ) : (\n              <EmptyPreview\n                direction={\"column\"}\n                justify={\"center\"}\n                align={\"center\"}\n              >\n                {/* <Image src={HarmonyLogo} /> */}\n                <Box style={{ position: 'absolute', bottom: '8px' }}>\n                  <Text style={{ opacity: 0.5 }}>No Image</Text>\n                </Box>\n              </EmptyPreview>\n            )}\n          </Box>\n        </a>\n        <InventoryInfo direction={\"column\"} flex align={\"start\"}>\n          <Box direction={'row'} gap={'8px'}>\n            <Text title={tokenID} size=\"small\">\n              Token ID:\n            </Text>\n            <a href={itemLink} style={{ cursor: \"pointer\" }}>\n              <Text title={tokenID} size=\"small\" color={'brand'}>\n                {tokenID.length > 8\n                  ? `${tokenID.slice(0, 5)}...${tokenID.slice(-5)}`\n                  : tokenID}\n              </Text>\n            </a>\n          </Box>\n          {ownerAddress ? (\n            <Box gap={'8px'} direction={'row'}>\n              <Text size=\"small\">\n                Owner:\n              </Text>\n              <Address address={ownerAddress} isShort={true} hideCopyBtn={true} />\n            </Box>\n          ) : null}\n        </InventoryInfo>\n      </InventBoxContainer>\n    </InventItem>\n  );\n}\n","import { Box } from \"grommet\";\nimport { FormNext, FormPrevious } from \"grommet-icons\";\nimport React, { useState } from \"react\";\n\nexport interface IPaginationProps {\n  onClickNext: () => void;\n  onClickPrev: () => void;\n  disablePrev?: boolean;\n  disableNext?: boolean;\n}\n\nexport function Pagination(props: IPaginationProps) {\n  return (\n    <Box direction={\"row\"}>\n      <FormPrevious\n        size={'32px'}\n        style={{\n          opacity: props.disablePrev ? 0.4 : 1,\n          cursor: props.disablePrev ? \"not-allowed\" : \"pointer\",\n          marginRight: \"2px\",\n          userSelect: \"none\",\n        }}\n        onClick={props.disablePrev ? undefined : () => props.onClickPrev()}\n      />\n      <FormNext\n        size={'32px'}\n        style={{\n          opacity: props.disableNext ? 0.4 : 1,\n          cursor: props.disableNext ? \"not-allowed\" : \"pointer\",\n          userSelect: \"none\",\n        }}\n        onClick={props.disableNext ? undefined : () => props.onClickNext()}\n      />\n    </Box>\n  );\n}\n","import React, {useEffect, useState} from \"react\";\nimport {Box, TextInput, Text} from \"grommet\";\nimport { useThemeMode } from \"../../../../hooks/themeSwitcherHook\";\nimport { IUserERC721Assets } from \"src/api/client.interface\";\nimport { InventoryItem } from \"./InventoryItem\";\nimport { Pagination } from \"src/components/pagination/Pagination\";\nimport {Search} from \"grommet-icons\";\nimport {useDebounce} from \"../../../../hooks/debounce\";\nimport {levenshteinDistance} from \"../../../../utils\";\n\nexport interface IInventoryProps {\n  inventory: IUserERC721Assets[];\n}\n\nconst pageSize = 24;\n\nexport function Inventory(props: IInventoryProps) {\n  const { inventory } = props;\n\n  const themeMode = useThemeMode();\n  const [page, setPage] = useState<number>(0);\n  const [filteredInventory, setFilteredInventory] = useState([...inventory])\n\n  useEffect(() => {\n    setFilteredInventory([...inventory])\n  }, [inventory.length])\n\n  const maxPage = Math.ceil(filteredInventory.length / pageSize);\n  const renderedInventory = filteredInventory.slice(\n    page * pageSize,\n    (page + 1) * pageSize\n  );\n\n  const onSearch = (event: { target: { value: any; }; }) => {\n    const value = event.target.value.toLowerCase()\n\n    const sortByDistance = (a: IUserERC721Assets, b: IUserERC721Assets, targetString: string) => {\n      if(a.meta?.name && b.meta?.name) {\n        const distanceA = levenshteinDistance(a.meta?.name, targetString)\n        const distanceB = levenshteinDistance(b.meta?.name, targetString)\n        return distanceA - distanceB\n      }\n      return 0\n    }\n\n    if(value) {\n      const values = inventory\n        .filter(item => {\n          const { ownerAddress = '', tokenID, meta } = item\n          const name = meta && meta.name ? meta.name.toLowerCase() : ''\n\n          return (ownerAddress || '').toLowerCase().includes(value)\n            || tokenID.toLowerCase().includes(value)\n            || name.includes(value)\n        })\n        .sort((a, b) => sortByDistance(a, b, value))\n\n      setFilteredInventory(values)\n    } else {\n      setFilteredInventory(inventory)\n    }\n    setPage(0)\n  }\n\n  const onSearchDebounce = useDebounce(onSearch, 300)\n\n  return (\n    <Box style={{ padding: \"10px\" }}>\n      <Box direction={'row'} justify={'between'} margin={{ top: '8px' }}>\n        <Box width={'414px'} margin={{ left: '8px' }}>\n          <TextInput\n            icon={<Search color=\"minorText\" size={'14px'} />}\n            placeholder=\"Search by Token ID / Owner / Name\"\n            style={{\n              backgroundColor: themeMode === \"light\" ? \"white\" : \"transparent\",\n              fontWeight: 500,\n              borderRadius: '8px'\n            }}\n            onChange={onSearchDebounce}\n          />\n        </Box>\n        <Box direction={'row'} align={'center'}>\n          <Pagination\n            disablePrev={page === 0}\n            disableNext={page === maxPage - 1 || maxPage === 0}\n            onClickPrev={() => setPage(page - 1)}\n            onClickNext={() => {\n              setPage(page + 1);\n            }}\n          />\n        </Box>\n      </Box>\n      <Box direction={\"row\"} wrap={true} justify={'start'} margin={{ top: '24px' }} style={{ minHeight: '240px' }}>\n        {renderedInventory.map((item) => {\n          return <InventoryItem key={item.tokenID} item={item} />;\n        })}\n        {renderedInventory.length === 0 &&\n            <Box justify={'center'} width={'100%'} align={'center'}>\n                <Text>No inventory found</Text>\n            </Box>\n        }\n      </Box>\n    </Box>\n  );\n}\n","import { useRef, useEffect } from \"react\";\n\ntype Timer = ReturnType<typeof setTimeout>;\ntype SomeFunction = (...args: any[]) => void;\n/**\n *\n * @param func The original, non debounced function (You can pass any number of args to it)\n * @param delay The delay (in ms) for the function to return\n * @returns The debounced function, which will run only if the debounced function has not been called in the last (delay) ms\n */\n\nexport function useDebounce<Func extends SomeFunction>(\n  func: Func,\n  delay = 1000\n) {\n  const timer = useRef<Timer>();\n\n  useEffect(() => {\n    return () => {\n      if (!timer.current) return;\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  const debouncedFunction = ((...args) => {\n    const newTimer = setTimeout(() => {\n      func(...args);\n    }, delay);\n    clearTimeout(timer.current);\n    timer.current = newTimer;\n  }) as Func;\n\n  return debouncedFunction;\n}\n","import { ShardID } from \"src/types\";\nimport { AbiItem } from \"web3-utils\";\nimport { getContractsByField } from \"./client\";\n\nexport interface IVerifyContractData {\n  contractAddress: string;\n  compiler: string;\n  optimizer: string;\n  optimizerTimes: string;\n  sourceCode: string;\n  libraries: { value: string; id: string }[];\n  constructorArguments: string;\n  chainType: string;\n  contractName: string;\n  statusText: string;\n  isLoading: boolean;\n  argsLoading: boolean;\n  error: string;\n  tab: string;\n  fileList?: File[];\n  language: number;\n  shard?: 0;\n}\n\nexport interface IVerifyContractDataSendData {\n  contractAddress: string;\n  compiler: string;\n  optimizer: string;\n  optimizerTimes: string;\n  sourceCode: string;\n  libraries: string[];\n  constructorArguments: string;\n  chainType: string;\n  contractName: string;\n  fileList?: File[],\n  tab: string,\n  shard?: number\n\n}\n\nexport const verifyContractCode = async (data: IVerifyContractDataSendData) => {\n\n  if (data.tab === \"Multiple Source Files\") {\n    console.log(\"Handling multiple files\");\n    const formData = new FormData();\n    data.fileList?.forEach(file => {\n      formData.append(file.name, file);\n    });\n\n    for (const [k, v] of Object.entries(data)) {\n      if (k === \"fileList\") {\n        continue;\n      }\n\n      if (k === \"language\" && +v === 0) {\n        continue;\n      }\n\n      if (k === \"libraries\") {\n        formData.append(k, v.join(\",\"));\n      }\n      else {\n        formData.append(k, v);\n      }\n    }\n\n    const response = await fetch(\n      `${process.env.REACT_APP_EXPLORER_V1_API_URL}codeVerification`,\n      {\n        method: \"POST\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        redirect: \"follow\",\n        referrerPolicy: \"no-referrer\",\n        body: formData,\n      }\n    );\n\n    const body = await response.json();\n    if (response.status !== 200) {\n      throw new Error(body?.message);\n    }\n\n    return body;\n  }\n  else {\n    const response = await fetch(\n      `${process.env.REACT_APP_EXPLORER_V1_API_URL}codeVerification`,\n      {\n        method: \"POST\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        redirect: \"follow\",\n        referrerPolicy: \"no-referrer\",\n        body: JSON.stringify(data),\n      }\n    );\n\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw new Error(body?.message);\n    }\n\n    return body;\n  }\n};\n\nexport const loadSourceCode = async (address: string, shard: ShardID): Promise<ISourceCode> => {\n  const response = await fetch(\n    `${process.env.REACT_APP_EXPLORER_V1_API_URL}fetchContractCode?contractAddress=${address}&shard=${shard}`,\n    {\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n    }\n  );\n\n  const body = await response.json();\n\n  if (response.status !== 200) {\n    throw new Error(body);\n  }\n\n  return body;\n};\n\nexport interface ISourceCode {\n  contractAddress: string;\n  compiler: string;\n  optimizer: string;\n  optimizerTimes: string;\n  sourceCode: string;\n  supporting: any;\n  libraries: string[];\n  constructorArguments: string;\n  chainType: string;\n  contractName: string;\n  abi?: AbiItem[];\n  proxyAddress?: string;\n  proxyDetails?: any;\n  proxy?: any;\n}\n","import { AbiInput } from \"web3-utils\";\nimport { getAddress } from \"src/utils\";\nimport {config} from \"../../../config\";\nimport {getContractsByField} from \"../../../api/client\";\n\nexport const convertInputs = (inputs: string[], abiInputs: AbiInput[]) => {\n  return inputs.map((value, idx) => {\n    switch (abiInputs[idx].type) {\n      case \"address\":\n        return getAddress(value).basicHex;\n\n      default:\n        return value;\n    }\n  });\n};\n\nexport const getContractByAddress = async (contractId: string) => {\n  const { contractShardId } = config\n\n  let contract = null\n  try {\n    contract = await getContractsByField([contractShardId, \"address\", contractId]);\n  } catch (_) {}\n  return {\n    contract,\n    shardId: contractShardId\n  }\n}\n","import {\n  Box,\n  FileInput,\n  Heading,\n  Select,\n  Spinner,\n  Text,\n  TextArea,\n  TextInput,\n} from \"grommet\";\nimport React from \"react\";\nimport { BasePage, Button } from \"src/components/ui\";\nimport styled from \"styled-components\";\nimport { IVerifyContractData, verifyContractCode } from \"src/api/explorerV1\";\nimport { SubtractCircle } from \"grommet-icons\";\nimport { breakpoints } from \"../../responsive/breakpoints\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { useHistory } from \"react-router-dom\";\nimport { getAddress, getQueryVariable } from \"../../utils\";\nimport { getContractsByField, getTransactionByField } from \"../../api/client\";\n\nconst Field = styled(Box)``;\n\nconst Wrapper = styled(Box)`\n  & * input,\n  & * textarea {\n    font-weight: 400 !important;\n  }\n`;\n\nexport function uniqid(prefix = \"\", random = false) {\n  const sec = Date.now() * 1000 + Math.random() * 1000;\n  const id = sec.toString(16).replace(/\\./g, \"\").padEnd(14, \"0\");\n  return `${prefix}${id}${random ? `.${Math.trunc(Math.random() * 100000000)}` : \"\"\n    }`;\n}\n\nenum V_TABS {\n  SINGLE = \"Single Source File\",\n  MULTI = \"Multiple Source Files\",\n}\n\nconst TabBox = styled(Box) <{ selected: boolean }>`\n  border: 1px solid ${(props) => props.theme.global.colors.border};\n  background: ${(props) =>\n    props.selected ? props.theme.global.colors.backgroundBack : \"transparent\"};\n  padding: 7px 12px 6px 12px;\n  border-radius: 4px;\n  margin: 5px 10px;\n`;\n\nconst TabButton = (props: {\n  text: string;\n  onClick: () => void;\n  selected: boolean;\n}) => {\n  return (\n    <TabBox onClick={props.onClick} selected={props.selected}>\n      <Text size=\"small\" color={\"minorText\"}>\n        {props.text}\n      </Text>\n    </TabBox>\n  );\n};\n\n\nclass VerifyContractBase extends React.Component<\n  {\n    isLessTablet: boolean;\n    address?: string;\n    shard?: number;\n  },\n  IVerifyContractData\n> {\n  public state: IVerifyContractData = {\n    chainType: \"mainnet\",\n    contractAddress: this.props.address || \"\",\n    compiler: \"\",\n    optimizer: \"No\",\n    optimizerTimes: \"\",\n    sourceCode: \"\",\n    libraries: [],\n    constructorArguments: \"\",\n    contractName: \"\",\n    isLoading: false,\n    argsLoading: false,\n    statusText: \"\",\n    error: \"\",\n    tab: V_TABS.SINGLE,\n    language: 0,\n    shard: 0\n  };\n\n  getBytecode = async (shard: number) => {\n    this.setState({ ...this.state, argsLoading: true });\n\n    try {\n      if (this.state.contractAddress) {\n        const address = getAddress(this.state.contractAddress).basicHex;\n\n        const contracts: any = await getContractsByField([\n          shard,\n          \"address\",\n          address,\n        ]);\n\n        if (contracts?.transactionHash) {\n          const trx = await getTransactionByField([\n            shard,\n            \"hash\",\n            contracts.transactionHash,\n          ]);\n\n          if (trx?.input) {\n            const argStart = trx.input.lastIndexOf(\"0033\");\n            if (argStart) {\n              this.setState({\n                ...this.state,\n                constructorArguments: trx.input.slice(argStart + 4),\n              });\n            }\n          }\n        }\n      }\n    } catch (e) {\n      console.error(e);\n    }\n\n    this.setState({ ...this.state, argsLoading: false });\n  };\n\n  onClickSubmitBtn = async () => {\n    this.setState({\n      ...this.state,\n      isLoading: true,\n      statusText: \"Pending...\",\n      error: \"\",\n    });\n\n    const { isLoading, statusText, ...state } = this.state;\n\n    try {\n      const res = await verifyContractCode({\n        ...state,\n        libraries: this.state.libraries.map((i) => i.value),\n        shard: this.props.shard || 0\n      });\n\n      if (res.success === true) {\n        this.setState({ ...this.state, statusText: \"Success\" });\n      } else {\n        this.setState({ ...this.state, statusText: \"\", error: \"Error\" });\n      }\n    } catch (e) {\n      this.setState({\n        ...this.state,\n        statusText: \"\",\n        // @ts-ignore\n        error: e?.message || \"Error\",\n      });\n    } finally {\n      this.setState({ ...this.state, isLoading: false });\n    }\n  };\n\n  render() {\n    const { isLessTablet, shard } = this.props;\n    const { isLoading } = this.state;\n\n    return (\n      <>\n        <Heading size=\"xsmall\" margin={{ top: \"0\" }}>\n          Verify Contract\n        </Heading>\n        <BasePage>\n          <Wrapper direction={\"column\"}>\n            <Box direction=\"row\" fill={true} justify=\"between\" wrap>\n              <Field margin={\"small\"} width={isLessTablet ? \"100%\" : \"42%\"}>\n                <Text>Contract Address</Text>\n                <TextInput\n                  placeholder={\"ZPT contract address\"}\n                  onChange={(evt: React.ChangeEvent<HTMLInputElement>) => {\n                    this.setState({\n                      ...this.state,\n                      contractAddress: evt.currentTarget.value,\n                    });\n                  }}\n                  value={this.state.contractAddress}\n                  disabled={isLoading}\n                />\n              </Field>\n\n              <Field margin={\"small\"} width={isLessTablet ? \"100%\" : \"42%\"}>\n                <Text>Contract Name</Text>\n                <TextInput\n                  placeholder={\"ZPT name\"}\n                  onChange={(evt: React.ChangeEvent<HTMLInputElement>) => {\n                    this.setState({\n                      ...this.state,\n                      contractName: evt.currentTarget.value,\n                    });\n                  }}\n                  disabled={isLoading}\n                />\n              </Field>\n\n              <Field margin={\"small\"} width={isLessTablet ? \"100%\" : \"10%\"}>\n                <Text>Language</Text>\n                <Select\n                    options={[\"Solidity\", \"Vyper\"]}\n                    value={this.state.language === 0 ? \"Solidity\" : \"Vyper\"}\n                    onChange={({ option }) =>\n                      this.setState({ ...this.state, language: option === \"Solidity\" ? 0 : 1})\n                    }\n                    disabled={isLoading}\n                  />\n              </Field>\n            </Box>\n\n            <Box direction=\"row\" fill={true} justify=\"between\" wrap>\n              <Field margin={\"small\"} width={isLessTablet ? \"100%\" : \"30%\"}>\n                <Text>Chain Type</Text>\n                <Select\n                  options={[\"mainnet\", \"testnet\", \"devnet\"]}\n                  value={this.state.chainType}\n                  onChange={({ option }) =>\n                    this.setState({ ...this.state, chainType: option })\n                  }\n                  disabled={isLoading}\n                />\n              </Field>\n\n              <Field margin={\"small\"} width={isLessTablet ? \"100%\" : \"30%\"}>\n                <Text>Compiler</Text>\n                <TextInput\n                  placeholder={\"Solidity compiler version\"}\n                  onChange={(evt: React.ChangeEvent<HTMLInputElement>) => {\n                    this.setState({\n                      ...this.state,\n                      compiler: evt.currentTarget.value,\n                    });\n                  }}\n                  disabled={isLoading}\n                />\n              </Field>\n\n              <Field margin={\"small\"} width={isLessTablet ? \"100%\" : \"30%\"}>\n                <Text>Optimizer</Text>\n                <Box direction={\"row\"}>\n                  <Select\n                    options={[\"Yes\", \"No\"]}\n                    value={this.state.optimizer}\n                    onChange={({ option }) =>\n                      this.setState({ ...this.state, optimizer: option })\n                    }\n                    disabled={isLoading}\n                  />\n                  <TextInput\n                    type={\"number\"}\n                    placeholder={\"Number of times\"}\n                    style={{ marginLeft: \"5px\" }}\n                    onChange={(evt: React.ChangeEvent<HTMLInputElement>) => {\n                      this.setState({\n                        ...this.state,\n                        optimizerTimes: evt.currentTarget.value,\n                      });\n                    }}\n                    disabled={isLoading}\n                  />\n                </Box>\n              </Field>\n            </Box>\n            <Box direction=\"row\" align=\"center\" margin={{ top: \"medium\" }}>\n              <TabButton\n                text={V_TABS.SINGLE}\n                onClick={() => this.setState({ tab: V_TABS.SINGLE })}\n                selected={this.state.tab === V_TABS.SINGLE}\n              />\n              <TabButton\n                text={V_TABS.MULTI}\n                onClick={() => this.setState({ tab: V_TABS.MULTI })}\n                selected={this.state.tab === V_TABS.MULTI}\n              />\n\n            </Box>\n            {this.state.tab === V_TABS.SINGLE && <Field margin={\"small\"}>\n              <Text>Enter the Solidity Contract Code below</Text>\n              <TextArea\n                style={{ minHeight: \"300px\" }}\n                onChange={(evt: React.ChangeEvent<HTMLTextAreaElement>) => {\n                  this.setState({\n                    ...this.state,\n                    sourceCode: evt.currentTarget.value,\n                  });\n                }}\n                disabled={isLoading}\n              />\n            </Field>}\n\n            {\n              this.state.tab === V_TABS.MULTI &&\n              <Field margin={\"small\"}>\n                <Text>Select multiple solidity source files</Text>\n                <FileInput\n                  name=\"file\"\n                  max=\"100000\"\n                  multiple\n                  onChange={event => {\n                    if (!event.target.files) return;\n                    const fileList = event.target.files;\n                    const files = [];\n                    for (let i = 0; i < fileList?.length; i += 1) {\n                      const file = fileList[i];\n                      files.push(file);\n                    }\n                    console.log(files);\n                    this.setState({fileList:files});\n                  }}\n                />\n              </Field>\n            }\n\n            <Field margin={\"small\"}>\n              <Box direction=\"row\" justify=\"between\">\n                <Box>\n                  <Text>Constructor Arguments (ABI-encoded)</Text>\n                </Box>\n                {this.state.argsLoading ? (\n                  <Box\n                    style={{ width: \"120px\" }}\n                    direction=\"row\"\n                    justify=\"center\"\n                  >\n                    <Spinner size={\"xsmall\"} />\n                  </Box>\n                ) : (\n                  <Box onClick={() => this.getBytecode(shard || 0)}>\n                    <Text color=\"#00AEE9\">paste arguments from tx input</Text>\n                  </Box>\n                )}\n              </Box>\n              <TextArea\n                style={{ minHeight: \"80px\", height: \"80px\" }}\n                onChange={(evt: React.ChangeEvent<HTMLTextAreaElement>) => {\n                  this.setState({\n                    ...this.state,\n                    constructorArguments: evt.currentTarget.value,\n                  });\n                }}\n                disabled={isLoading || this.state.argsLoading}\n                value={this.state.constructorArguments}\n              />\n            </Field>\n\n            <Field margin={\"small\"}>\n              <Text>Contract Library Address</Text>\n              <Button\n                onClick={() => {\n                  const old = this.state.libraries;\n                  old.push({ value: \"\", id: uniqid() });\n\n                  this.setState({\n                    ...this.state,\n                    libraries: old,\n                  });\n                }}\n                disabled={isLoading}\n              >\n                + add one more\n              </Button>\n              {this.state.libraries.map((value, index) => {\n                return (\n                  <Field\n                    key={value.id}\n                    direction={\"row\"}\n                    align={\"center\"}\n                    margin={\"small\"}\n                  >\n                    <Text style={{ marginRight: \"10px\", minWidth: \"150px\" }}>\n                      Library {index} name\n                    </Text>\n                    <TextInput\n                      onChange={(evt: React.ChangeEvent<HTMLInputElement>) => {\n                        const value = evt.currentTarget.value;\n                        const { libraries } = this.state;\n                        libraries[index].value = value;\n\n                        this.setState({ ...this.state, libraries });\n                      }}\n                      disabled={isLoading}\n                    />\n                    <Button style={{ marginLeft: \"5px\" }} disabled={isLoading}>\n                      <Box direction={\"row\"} align={\"center\"}>\n                        <SubtractCircle\n                          size={\"small\"}\n                          style={{ marginRight: \"5px\" }}\n                        />\n                        <Text\n                          size={\"small\"}\n                          onClick={() => {\n                            this.state.libraries.splice(\n                              this.state.libraries.findIndex(\n                                (i) => i.id === value[\"id\"]\n                              ),\n                              1\n                            );\n                            this.setState({\n                              ...this.state,\n                              libraries: this.state.libraries,\n                            });\n                          }}\n                        >\n                          remove\n                        </Text>\n                      </Box>\n                    </Button>\n                  </Field>\n                );\n              })}\n            </Field>\n\n            <Field margin={\"small\"}>\n              <Button\n                onClick={this.onClickSubmitBtn}\n                primary={true}\n                disabled={isLoading}\n              >\n                <Box direction={\"row\"} align={\"center\"} justify={\"center\"}>\n                  <Text size={\"small\"} style={{ marginRight: \"10px\" }}>\n                    Submit\n                  </Text>{\" \"}\n                  {isLoading ? <Spinner size={\"xsmall\"} /> : null}\n                </Box>\n              </Button>\n              <Box\n                align={\"center\"}\n                justify={\"center\"}\n                width={\"100%\"}\n                style={{ marginTop: \"10px\" }}\n              >\n                <Text>{this.state.statusText}</Text>\n              </Box>\n              {this.state.error && (\n                <Box\n                  align={\"center\"}\n                  justify={\"center\"}\n                  width={\"100%\"}\n                  style={{ marginTop: \"10px\" }}\n                >\n                  <Text style={{ overflowWrap: \"anywhere\" }} color=\"red\">\n                    {this.state.error}\n                  </Text>\n                </Box>\n              )}\n            </Field>\n          </Wrapper>\n        </BasePage>\n      </>\n    );\n  }\n}\n\nexport const VerifyContract = () => {\n  const isLessTablet = useMediaQuery({ maxDeviceWidth: breakpoints.tablet });\n  const history = useHistory();\n  const address = getQueryVariable(\n    \"address\",\n    history.location.search.substring(1)\n  );\n\n  const shard = getQueryVariable(\n    \"shard\",\n    history.location.search.substring(1)\n  );\n\n  return <VerifyContractBase isLessTablet={isLessTablet} address={address} shard={+(shard || 0)} />;\n};\n","import { Box, TextInput } from \"grommet\";\nimport { palette } from \"src/theme\";\nimport styled from \"styled-components\";\n\n\ninterface IAbiParam {\n    name?: string;\n    readonly?: boolean;\n    type: string;\n    value: string;\n}\n\nconst SmallTextInput = styled(TextInput)`\n  font-size: 14px;\n  font-weight: 400;\n\n  ::placeholder {\n    font-size: 14px;\n  }\n`;\n\nconst HeaderBox = styled(Box)`\n  font-size:12px;\n`\nconst NameLabel = styled.div`\n    color: ${palette.ElectricBlue};\n    margin-right: 20px;\n`\n\n\nexport const AbiParam = (props: IAbiParam) => {\n    const {\n        name,\n        readonly,\n        type,\n        value,\n    } = props;\n\n    function valueInput() {\n        return <SmallTextInput value={value} readOnly={readonly} />\n    }\n\n    return <Box className=\"param-box\" direction=\"column\" pad=\"none\">\n        <HeaderBox direction=\"row\" align=\"center\">\n            {name && <NameLabel>{name}</NameLabel>}\n            <i>{type}</i>\n        </HeaderBox>\n\n        {valueInput()}\n    </Box>\n};\n","import {Box, Spinner, Text, TextInput} from 'grommet';\nimport React, {useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport {Button} from 'src/components/ui/Button';\nimport Web3 from 'web3';\nimport {AbiItem} from 'web3-utils';\nimport {convertInputs} from './helpers';\nimport {uniqid} from 'src/pages/VerifyContract/VerifyContract';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport {AbiParam} from 'src/components/ui/AbiParam';\n\nconst Field = styled(Box)``;\n\nconst ViewWrapper = styled(Box)`\n  border: 1px solid #e7ecf7;\n  border-radius: 5px;\n`;\n\nconst NameWrapper = styled(Box)`\n  border-bottom: 1px solid #e7ecf7;\n  padding: 10px;\n  opacity: 0.7;\n  border-radius: 5px;\n`;\n\nconst SmallTextInput = styled(TextInput)`\n  font-size: 14px;\n  font-weight: 400;\n\n  ::placeholder {\n    font-size: 14px;\n  }\n`;\n\nexport const ActionButton = styled(Button)`\n  font-size: 14px;\n  padding: 7px 8px 5px 8px;\n  font-weight: 500;\n`;\n\nconst GreySpan = styled('span')`\n  font-size: 14px;\n  opacity: 0.7;\n  font-weight: 400;\n`;\n\nconst TextBold = styled(Text)`\n  font-weight: bold;\n`;\n\nconst GAS_LIMIT = 6721900;\nconst GAS_PRICE = 100000000000;\n\nexport const AbiMethodsView = (props: {\n  abiMethod: AbiItem;\n  address: string;\n  metamaskAddress?: string;\n  index: number;\n  isRead?: boolean;\n  validChainId?: boolean;\n}) => {\n  const {abiMethod, address, index} = props;\n  const [inputsValue, setInputsValue] = useState<string[]>(\n    [...new Array(abiMethod.inputs?.length)].map(() => '')\n  );\n  const [multipleValue, setMultipleValue] = useState({\n    write: {},\n    read: {},\n  } as any);\n  const [amount, setAmount] = useState('');\n  const [error, setError] = useState('');\n  const [result, setResult] = useState<any[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  const query = async () => {\n    try {\n      setError('');\n      setResult([]);\n      setLoading(true);\n\n      // fix when there are multiple ethereum providers; detect it! returns actual provider\n      const web3:any = await detectEthereumProvider();\n\n      const web3URL = props.isRead\n        ? process.env.REACT_APP_RPC_URL_SHARD0\n        : web3\n          ? web3\n          : process.env.REACT_APP_RPC_URL_SHARD0;\n\n      const hmyWeb3 = new Web3(web3URL);\n\n      const contract = new hmyWeb3.eth.Contract([abiMethod], address);\n\n      if (abiMethod.name) {\n        let res;\n\n        if (abiMethod.stateMutability === 'view') {\n          res = await contract.methods[abiMethod.name]\n            .apply(contract, convertInputs(inputsValue, abiMethod.inputs || []))\n            .call();\n        } else {\n          // @ts-ignore\n          const accounts = await ethereum.enable();\n\n          const account = accounts[0] || undefined; // if function is not a view method it will require a signer\n\n          console.log(\"account is\", account);\n\n          res = await contract.methods[abiMethod.name]\n            .apply(contract, convertInputs(inputsValue, abiMethod.inputs || []))\n            .send({\n              gasLimit: GAS_LIMIT,\n              gasPrice: GAS_PRICE,\n              from: account,\n              value: Number(amount) * 1e18,\n            });\n        }\n\n        setResult(\n          Array.isArray(res)\n            ? res\n            : typeof res === 'object'\n              ? Object.values(res)\n              : [res.toString()]\n        );\n      }\n    } catch (e) {\n      // @ts-ignore\n      setError(e.message);\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (\n      abiMethod.stateMutability !== 'payable' &&\n      (!abiMethod.inputs || !abiMethod.inputs.length) &&\n      props.isRead\n    ) {\n      query();\n    }\n  }, []);\n\n  const setInputValue = (value: string, idx: number) => {\n    const newArr = inputsValue.map((v, i) => (i === idx ? value : v));\n    setInputsValue(newArr);\n  };\n\n  return (\n    <ViewWrapper className='abi-view-wrapper' direction='column' margin={{bottom: 'medium'}}>\n      <NameWrapper background={'backgroundBack'}>\n        <Text size='small'>\n          {index + 1}. {abiMethod.name}\n        </Text>\n      </NameWrapper>\n\n      <Box pad='20px'>\n        {abiMethod.stateMutability === 'payable' ? (\n          <Field gap='5px'>\n            <Text size='small'>\n              payableAmount <span>ZPT</span>\n            </Text>\n            <SmallTextInput\n              value={amount}\n              placeholder={`payableAmount (ZPT)`}\n              onChange={(evt: React.ChangeEvent<HTMLInputElement>) =>\n                setAmount(evt.currentTarget.value)\n              }\n            />\n          </Field>\n        ) : null}\n        {abiMethod.inputs && abiMethod.inputs.length ? (\n          <Box gap='12px'>\n            {abiMethod.inputs.map((input, idx) => {\n              const name = input.name || '<input>';\n              const isArrayValue = input.type.indexOf('[]') >= 0;\n              const tabMethod = props.isRead ? 'read' : 'write';\n\n              const itemValue = isArrayValue\n                ? multipleValue[tabMethod][idx] || [{value: '', id: '1'}]\n                : inputsValue[idx];\n\n              const itemType = input.type.slice(0, input.type.indexOf('[]'));\n\n              return (\n                <Field gap='5px' key={idx}>\n                  <Text size='small'>\n                    {name} <span>({input.type})</span>\n                  </Text>\n                  {isArrayValue ? (\n                    <Box direction={'column'}>\n                      {itemValue.map(\n                        (item: {id: string; value: string}, itemId: number) => {\n                          return (\n                            <Box\n                              direction={'row'}\n                              align={'center'}\n                              margin={'small'}>\n                              <Text style={{marginRight: '10px'}}>\n                                {itemId}.\n                              </Text>\n                              <SmallTextInput\n                                key={item.id}\n                                value={item.value}\n                                placeholder={`${itemType}`}\n                                onChange={(\n                                  evt: React.ChangeEvent<HTMLInputElement>\n                                ) => {\n                                  itemValue[itemId].value =\n                                    evt.currentTarget.value;\n\n                                  setMultipleValue({\n                                    ...multipleValue,\n                                    [tabMethod]: {\n                                      ...multipleValue[tabMethod],\n                                      [idx]: itemValue,\n                                    },\n                                  });\n\n                                  setInputValue(\n                                    itemValue.map((t: any) => t.value),\n                                    idx\n                                  );\n                                }}\n                              />\n                              {itemValue.length === 1 ? null : (\n                                <ActionButton\n                                  style={{marginLeft: '10px'}}\n                                  onClick={() => {\n                                    setMultipleValue({\n                                      ...multipleValue,\n                                      [tabMethod]: {\n                                        ...multipleValue[tabMethod],\n                                        [idx]: itemValue.filter(\n                                          (removeItem: any) =>\n                                            removeItem.id !== item.id\n                                        ),\n                                      },\n                                    });\n                                  }}>\n                                  remove\n                                </ActionButton>\n                              )}\n                            </Box>\n                          );\n                        }\n                      )}\n                      <ActionButton\n                        style={{marginTop: '10px'}}\n                        onClick={() => {\n                          itemValue.push({value: '', id: uniqid()});\n\n                          setMultipleValue({\n                            ...multipleValue,\n                            [tabMethod]: {\n                              ...multipleValue[tabMethod],\n                              [idx]: itemValue,\n                            },\n                          });\n                        }}>\n                        + add one more\n                      </ActionButton>\n                    </Box>\n                  ) : (\n                    <SmallTextInput\n                      value={inputsValue[idx]}\n                      placeholder={`${name} (${input.type})`}\n                      onChange={(evt: React.ChangeEvent<HTMLInputElement>) => {\n                        setInputValue(evt.currentTarget.value, idx);\n                      }}\n                    />\n                  )}\n                </Field>\n              );\n            })}\n          </Box>\n        ) : null}\n\n        {!result || abiMethod.inputs?.length || abiMethod.stateMutability !== 'view' ? (\n          <Box width='100px' margin={{top: '20px', bottom: '18px'}}>\n            {loading ? (\n              <Spinner />\n            ) : abiMethod.stateMutability === 'view' ? (\n              <ActionButton onClick={query}>Query</ActionButton>\n            ) : (\n              <ActionButton\n                disabled={!props.metamaskAddress || !props.validChainId}\n                onClick={query}>\n                Write\n              </ActionButton>\n            )}\n          </Box>\n        ) : null}\n\n        {abiMethod.outputs\n          ? abiMethod.outputs.map((input, idx) => {\n            return (<AbiParam\n              key={idx}\n              readonly={true}\n              type={input.type}\n              name={input.name}\n              value={result[idx]}\n            />)\n          })\n          : null}\n\n        {error && (\n          <Text color='red' size='small' style={{marginTop: 5}}>\n            {error}\n          </Text>\n        )}\n      </Box>\n    </ViewWrapper>\n  );\n};\n","import { useCallback, useEffect, useState } from \"react\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport { Box, Text } from \"grommet\";\nimport { ActionButton } from \"./AbiMethodView\";\n\nexport const Wallet = (params: {\n  onSetMetamask: (v: string) => void;\n  onSetChainId: (chainId: number) => void;\n}) => {\n  const [metamaskAddress, setMetamask] = useState(\"\");\n  const [chainId, setChainId] = useState(0);\n\n  useEffect(() => {\n    params.onSetMetamask(metamaskAddress);\n  }, [metamaskAddress]);\n\n  useEffect(() => {\n    params.onSetChainId(chainId);\n  }, [chainId]);\n\n  const signInMetamask = useCallback(() => {\n    detectEthereumProvider().then((provider: any) => {\n      try {\n        // @ts-ignore\n        if (provider !== window.ethereum) {\n          console.error(\"Do you have multiple wallets installed?\");\n        }\n\n        if (!provider) {\n          alert(\"Metamask not found\");\n        }\n\n        provider\n          .request({ method: \"eth_chainId\" })\n          .then((chainId: string) => {\n            setChainId(parseInt(chainId, 16));\n          })\n          .catch((error: any) => {\n            console.error(\n              `Error fetching chainId: ${error.code}: ${error.message}`\n            );\n          });\n\n        provider.on(\"chainIdChanged\", (chainId: string) =>\n          setChainId(parseInt(chainId, 16))\n        );\n        provider.on(\"chainChanged\", (chainId: string) =>\n          setChainId(parseInt(chainId, 16))\n        );\n        provider.on(\"networkChanged\", (chainId: string) =>\n          setChainId(parseInt(chainId, 16))\n        );\n\n        provider.on(\"accountsChanged\", (accounts: string[]) =>\n          setMetamask(accounts[0])\n        );\n\n        provider.on(\"disconnect\", () => {\n          setMetamask(\"\");\n        });\n\n        provider\n          .request({ method: \"eth_requestAccounts\" })\n          .then(async (accounts: string[]) => {\n            setMetamask(accounts[0]);\n          });\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }, []);\n\n  const isMainNet =\n    process.env.REACT_APP_RPC_URL_SHARD0 === \"https://a.api.s0.t.hmny.io/\";\n\n  const validChainId = isMainNet\n    ? chainId === 1666600000\n    : (chainId === 1666700000 || chainId === 1666900000); // testnet or devnet\n\n  return (\n    <Box margin={{ bottom: \"medium\" }}>\n      {metamaskAddress ? (\n        validChainId ? (\n          <Text size=\"small\">User address: {metamaskAddress}</Text>\n        ) : (\n          <Box direction={\"column\"}>\n            <Text size=\"small\" color=\"errorText\">\n              Selected Metamask wallet network is unsupported. Please switch\n              network to Zippy {isMainNet ? \"Mainnet\" : \"Testnet\"}\n            </Text>\n            <ActionButton\n              style={{ width: \"250px\" }}\n              margin={{ top: \"small\" }}\n              onClick={() =>\n                window.open(\n                  \"https://docs.harmony.one/home/network/wallets/browser-extensions-wallets/metamask-wallet\",\n                  \"_blank\"\n                )\n              }\n            >\n              Readme Zippy Metamask setup\n            </ActionButton>\n          </Box>\n        )\n      ) : (\n        <Box width=\"200px\">\n          <ActionButton onClick={signInMetamask}>Sign in Metamask</ActionButton>\n        </Box>\n      )}\n    </Box>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Box, Text, TextArea } from \"grommet\";\nimport { AddressDetails, ShardID } from \"src/types\";\nimport { Item } from \"../AddressDetails\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { ISourceCode } from \"src/api/explorerV1\";\nimport { AbiMethodsView } from \"./AbiMethodView\";\nimport { AbiItem } from \"web3-utils\";\nimport { Wallet } from \"./ConnectWallets\";\nimport {Address} from \"../../../components/ui\";\n\nconst StyledTextArea = styled(TextArea)`\n  padding: 0.75rem;\n  border-radius: 0.35rem;\n  font-weight: normal;\n`;\n\nconst LabelSuccess = styled(Box)`\n  width: fit-content;\n  padding: 0 4px;\n  text-transform: uppercase;\n  border-radius: 4px;\n  font-size: 8px;\n  font-weight: bold;\n`\n\nexport const ContractDetails = (props: {\n  address: string;\n  contracts?: AddressDetails | null;\n  sourceCode: ISourceCode | null;\n  implementation?: AddressDetails | null;\n  implementationSourceCode?: ISourceCode | null;\n  shard?: ShardID;\n}) => {\n\n  if (!!props.sourceCode || (props.implementation && props.implementationSourceCode)) {\n    return (\n      <VerifiedContractDetails\n        sourceCode={props.sourceCode}\n        contracts={props.contracts}\n        address={props.address}\n        shard={props.shard || 0}\n        implementation={props.implementation}\n        implementationSourceCode={props.implementationSourceCode}\n      />\n    );\n  }\n\n  if (!!props.contracts) {\n    return (\n      <NoVerifiedContractDetails\n        contracts={props.contracts}\n        address={props.address}\n        shard={props.shard || 0}\n      />\n    );\n  }\n\n  return null;\n};\n\nexport const AbiMethods = (props: {\n  address: string;\n  abi: AbiItem[];\n  metamaskAddress?: string;\n  isRead?: boolean;\n  validChainId?: boolean;\n}) => {\n  return (\n    <Box>\n      {props.abi.map((abiMethod, idx) =>\n        abiMethod.name ? (\n          <AbiMethodsView\n            key={idx}\n            abiMethod={abiMethod}\n            address={props.address}\n            index={idx}\n            metamaskAddress={props.metamaskAddress}\n            isRead={props.isRead}\n            validChainId={props.validChainId}\n          />\n        ) : null\n      )}\n    </Box>\n  );\n};\n\nexport const VerifiedButMissingImplementation = (props: {\n  address: string;\n  shard: number;\n}) => {\n  const history = useHistory();\n\n  return (\n    <Box style={{ padding: \"10px\" }}>\n      <Box direction=\"column\" gap=\"30px\">\n        <Box direction=\"row\" gap=\"5px\">\n          Proxy Implementation contract\n          <Text\n            size=\"small\"\n            style={{ cursor: \"pointer\" }}\n            onClick={() =>\n              history.push(`/address/${props.address}`)\n            }\n            color=\"brand\"\n          >\n            {props.address}\n          </Text>\n          is not verified. Are you the contract creator?\n          <Text\n            size=\"small\"\n            style={{ cursor: \"pointer\" }}\n            onClick={() =>\n              history.push(`/verifycontract?address=${props.address}&shard=${props.shard}`)\n            }\n            color=\"brand\"\n          >\n            Verify and Publish\n          </Text>\n          your contract source code today!\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport const ProxyContractDetails = (props: {\n  address: string;\n  proxy: any;\n}) => {\n  const history = useHistory();\n\n  return (\n    <Box style={{ padding: \"10px\" }}>\n      <Box direction=\"column\">\n        <Box direction=\"row\" gap=\"5px\">\n          ABI for the implementation contract at\n          <Text\n            size=\"small\"\n            style={{ cursor: \"pointer\" }}\n            onClick={() =>\n              history.push(`/address/${props.address}?activeTab=7`)\n            }\n            color=\"brand\"\n          >\n            {props.address}\n          </Text>\n        </Box>\n        {\n          props.proxy?.isBeacon && <Box direction=\"row\" gap=\"5px\">\n          Upgradeable Beacon contract at\n          <Text\n            size=\"small\"\n            style={{ cursor: \"pointer\" }}\n            onClick={() =>\n              history.push(`/address/${props?.proxy.beaconAddress}?activeTab=7`)\n            }\n            color=\"brand\"\n          >\n            {props?.proxy.beaconAddress}\n          </Text>\n        </Box>\n        }\n      </Box>\n    </Box>\n  );\n};\n\nexport const NoVerifiedContractDetails = (props: {\n  contracts: AddressDetails;\n  address: string;\n  shard: number;\n}) => {\n  const history = useHistory();\n\n  return (\n    <Box style={{ padding: \"10px\" }} margin={{ top: \"medium\" }}>\n      <Box direction=\"column\" gap=\"30px\">\n        <Box direction=\"row\" gap=\"5px\">\n          Are you the contract creator?\n          <Text\n            size=\"small\"\n            style={{ cursor: \"pointer\" }}\n            onClick={() =>\n              history.push(`/verifycontract?address=${props.address}&shard=${props.shard}`)\n            }\n            color=\"brand\"\n          >\n            Verify and Publish\n          </Text>\n          your contract source code today!\n        </Box>\n\n        <Box direction=\"column\">\n          <Item\n            label=\"Solidity version\"\n            value={props.contracts.solidityVersion}\n          />\n          {props.contracts.IPFSHash ? (\n            <Item label=\"IPFS hash\" value={props.contracts.IPFSHash} />\n          ) : null}\n          <Item\n            label=\"Bytecode\"\n            value={\n              <StyledTextArea readOnly={true} rows={15} cols={100} value={props.contracts.bytecode || \"\"} />\n            }\n          />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nenum V_TABS {\n  CODE = \"Code\",\n  READ = \"Read Contract\",\n  WRITE = \"Write Contract\",\n  READ_PROXY = \"Read as Proxy\",\n  WRITE_PROXY = \"Write as Proxy\",\n}\n\nconst TabBox = styled(Box) <{ selected: boolean }>`\n  border: 1px solid ${(props) => props.theme.global.colors.border};\n  background: ${(props) =>\n    props.selected ? props.theme.global.colors.backgroundBack : \"transparent\"};\n  padding: 7px 12px 6px 12px;\n  border-radius: 4px;\n  margin: 5px 10px;\n`;\n\nconst TabButton = (props: {\n  text?: string;\n  onClick: () => void;\n  selected: boolean;\n  children?: any;\n}) => {\n  return (\n    <TabBox onClick={props.onClick} selected={props.selected}>\n      {props.text &&\n          <Text size=\"small\" color={\"minorText\"}>\n            {props.text}\n          </Text>\n      }\n      {props.children && props.children}\n    </TabBox>\n  );\n};\n\nexport const VerifiedContractDetails = (props: {\n  sourceCode: ISourceCode | null;\n  address: string;\n  contracts?: AddressDetails | null;\n  shard: number;\n  implementation?: AddressDetails | null;\n  implementationSourceCode?: ISourceCode | null;\n}) => {\n  const [tab, setTab] = useState<V_TABS>(V_TABS.CODE);\n  const [metamaskAddress, setMetamask] = useState(\"\");\n  const [chainId, setChainId] = useState(0);\n\n  let abiString = \"\";\n\n  const isMainNet =\n    process.env.REACT_APP_RPC_URL_SHARD0 === \"https://a.api.s0.t.hmny.io/\";\n\n  const validChainId = isMainNet\n    ? chainId === 1666600000\n    : (chainId === 1666700000 || chainId === 1666900000);\n\n  try {\n    abiString = JSON.stringify(props.sourceCode?.abi, null, 4);\n  } catch { }\n\n  return (\n    <Box direction=\"column\">\n      {props.sourceCode?.proxyAddress && !props.sourceCode?.proxy && <VerifiedButMissingImplementation address={props.sourceCode.proxyAddress} shard={props.shard}/>}\n      <Box direction=\"row\" align=\"center\" margin={{ top: props.sourceCode?.proxyAddress && !props.sourceCode?.proxy ? \"\" : \"medium\" }}>\n        <TabButton\n          text={V_TABS.CODE}\n          onClick={() => setTab(V_TABS.CODE)}\n          selected={tab === V_TABS.CODE}\n        />\n        <>\n          <TabButton\n              text={V_TABS.READ}\n              onClick={() => setTab(V_TABS.READ)}\n              selected={tab === V_TABS.READ}\n          />\n          <TabButton\n              text={V_TABS.WRITE}\n              onClick={() => setTab(V_TABS.WRITE)}\n              selected={tab === V_TABS.WRITE}\n          />\n        </>\n        {/*{props.sourceCode.proxyAddress && props.sourceCode.proxy  ? (*/}\n        {/*  <>*/}\n        {/*    <TabButton*/}\n        {/*      text={V_TABS.READ_PROXY + \"(new)\"}*/}\n        {/*      onClick={() => setTab(V_TABS.READ_PROXY)}*/}\n        {/*      selected={tab === V_TABS.READ_PROXY}*/}\n        {/*    />*/}\n        {/*    <TabButton*/}\n        {/*      text={V_TABS.WRITE_PROXY + \"(new)\"}*/}\n        {/*      onClick={() => setTab(V_TABS.WRITE_PROXY)}*/}\n        {/*      selected={tab === V_TABS.WRITE_PROXY}*/}\n        {/*    />*/}\n        {/*  </>*/}\n        {/*) : null}*/}\n\n        {props.implementation && props.implementationSourceCode  ? (\n            <>\n              <TabButton\n                  onClick={() => setTab(V_TABS.READ_PROXY)}\n                  selected={tab === V_TABS.READ_PROXY}>\n                <Box direction={'row'} gap={'4px'}>\n                  <Text size={'small'} color={'minorText'}>{V_TABS.READ_PROXY}</Text>\n                  <LabelSuccess color={'text'} background={'backgroundSuccess'}>new</LabelSuccess>\n                </Box>\n              </TabButton>\n              <TabButton\n                  onClick={() => setTab(V_TABS.WRITE_PROXY)}\n                  selected={tab === V_TABS.WRITE_PROXY}>\n                <Box direction={'row'} gap={'4px'}>\n                  <Text size={'small'} color={'minorText'}>{V_TABS.WRITE_PROXY}</Text>\n                  <LabelSuccess color={'text'} background={'backgroundSuccess'}>new</LabelSuccess>\n                </Box></TabButton>\n            </>\n        ) : null}\n\n      </Box>\n      {tab === V_TABS.CODE && props.sourceCode ? (\n        <Box style={{ padding: \"10px\" }} margin={{ top: \"medium\" }}>\n          <Box direction=\"column\" gap=\"30px\">\n            <Box direction=\"column\">\n              <Item\n                label=\"Contract Name\"\n                value={props.sourceCode.contractName}\n              />\n              <Item\n                label=\"Compiler Version\"\n                value={props.sourceCode.compiler}\n              />\n              <Item\n                label=\"Optimization Enabled\"\n                value={\n                  props.sourceCode.optimizer ||\n                  \"No\" +\n                  (Number(props.sourceCode.optimizerTimes)\n                    ? ` with ${props.sourceCode.optimizerTimes} runs`\n                    : \"\")\n                }\n              />\n              {props.sourceCode.sourceCode && (!props.sourceCode.supporting || props.sourceCode.supporting.length === 0) &&\n                <Item\n                  label=\"Contract Source Code Verified\"\n                  value={\n                    <StyledTextArea readOnly={true} rows={15} cols={100} value={props.sourceCode.sourceCode || \"\"} />\n                  }\n                />}\n              {props.sourceCode.supporting?.sources\n                &&\n                Object.keys(props.sourceCode.supporting?.sources).map((source: string, i: number) => {\n                  return <Item\n                    key={i}\n                    label={`Verified ${source.substring(source.lastIndexOf('/') + 1)}`}\n                    value={\n                      <StyledTextArea readOnly={true} rows={15} cols={100} value={props.sourceCode?.supporting.sources[source].source || \"\"} />\n                    }\n                  />\n                })}\n              {props.sourceCode.supporting\n                && !props.sourceCode.supporting?.sources\n                &&\n                Object.keys(props.sourceCode.supporting).map((source: string, i: number) => {\n                  return <Item\n                    key={i}\n                    label={`Verified ${source.substring(source.lastIndexOf('/') + 1)}`}\n                    value={\n                      <StyledTextArea readOnly={true} rows={15} cols={100} value={props.sourceCode?.supporting[source].source || \"\"} />\n                    }\n                  />\n                })}\n              <Item\n                label=\"ABI\"\n                value={\n                  <StyledTextArea readOnly={true} rows={15} cols={100}>\n                    {abiString || \"\"}\n                  </StyledTextArea>\n                }\n              />\n              {props.sourceCode.constructorArguments ? (\n                <Item\n                  label=\"Constructor Arguments (ABI-encoded)\"\n                  value={\n                    <StyledTextArea readOnly={true} rows={4} cols={100}>\n                      {props.sourceCode.constructorArguments || \"\"}\n                    </StyledTextArea>\n                  }\n                />\n              ) : null}\n              {props.contracts ? (\n                <Item\n                  label=\"Bytecode\"\n                  value={\n                    <StyledTextArea readOnly={true} rows={7} cols={100}>\n                      {props.contracts.bytecode || \"\"}\n                    </StyledTextArea>\n                  }\n                />\n              ) : null}\n            </Box>\n          </Box>\n        </Box>\n      ) : null}\n\n      {tab === V_TABS.CODE && !props.sourceCode && props.contracts && <NoVerifiedContractDetails contracts={props.contracts} address={props.address} shard={props.shard} />}\n\n      {tab === V_TABS.READ ? (\n          (props.sourceCode && props.sourceCode.abi) ? <Box style={{ padding: \"10px\" }} margin={{ top: \"medium\" }}>\n            <AbiMethods\n                abi={props.sourceCode?.abi?.filter(\n                    (a) => a.stateMutability === \"view\" && a.type === \"function\"\n                )}\n                address={props.address}\n                isRead={V_TABS.READ === tab}\n            />\n          </Box> : <Box style={{ padding: \"10px\" }} margin={{ top: \"medium\" }}>\n            Sorry, there are no available Contract ABI methods to read. Unable to read contract info.\n          </Box>\n      ) : null}\n\n      {tab === V_TABS.WRITE ? (\n          (props.sourceCode && props.sourceCode.abi) ? <Box style={{ padding: \"10px\" }} margin={{ top: \"medium\" }}>\n          <Wallet onSetMetamask={setMetamask} onSetChainId={setChainId} />\n          <AbiMethods\n            abi={props.sourceCode.abi.filter(\n              (a) =>\n                a.stateMutability !== \"view\" &&\n                !!a.name &&\n                a.type === \"function\"\n            )}\n            address={props.address}\n            metamaskAddress={metamaskAddress}\n            validChainId={validChainId}\n          />\n        </Box> : <Box style={{ padding: \"10px\" }} margin={{ top: \"medium\" }}>\n        Sorry, there are no available Contract ABI methods to write. Unable to write contract info.\n      </Box>\n      ) : null}\n\n      {tab === V_TABS.READ_PROXY && props.implementation?.address && props.implementationSourceCode?.abi  ? (\n          <Box style={{ padding: \"10px\" }} margin={{ top: \"xsmall\" }} gap={'16px'}>\n            <Box direction={'row'} align={'center'} gap={'4px'}>\n              <Text size={'small'}>ABI for the implementation contract at</Text>\n              <Address address={props.implementation?.address} hideCopyBtn={true} />\n            </Box>\n            <AbiMethods\n                abi={props.implementationSourceCode?.abi.filter(\n                    (a) => a.stateMutability === \"view\" && a.type === \"function\"\n                )}\n                address={props.implementation?.address}\n                isRead={V_TABS.READ_PROXY === tab}\n            />\n          </Box>\n      ) : null}\n\n      {tab === V_TABS.WRITE_PROXY && props.implementation?.address && props.implementationSourceCode?.abi ? (\n          <Box style={{ padding: \"10px\" }} margin={{ top: \"xsmall\" }} gap={'16px'}>\n            <Box direction={'row'} align={'center'} gap={'4px'}>\n              <Text size={'small'}>ABI for the implementation contract at</Text>\n              <Address address={props.implementation?.address} hideCopyBtn={true} />\n            </Box>\n            <Wallet onSetMetamask={setMetamask} onSetChainId={setChainId} />\n            <AbiMethods\n                abi={props.implementationSourceCode?.abi.filter(\n                    (a) =>\n                        a.stateMutability !== \"view\" &&\n                        !!a.name &&\n                        a.type === \"function\"\n                )}\n                address={props.implementation?.address}\n                metamaskAddress={metamaskAddress}\n                validChainId={validChainId}\n            />\n          </Box>\n      ) : null}\n\n      {/*{tab === V_TABS.READ_PROXY && props.sourceCode.proxy ? (*/}\n      {/*  <Box style={{ padding: \"10px\" }}>*/}\n      {/*    <ProxyContractDetails address={props.sourceCode.proxyAddress || \"\"} proxy={props.sourceCode.proxyDetails}></ProxyContractDetails>*/}\n      {/*    <AbiMethods*/}\n      {/*      abi={props.sourceCode.proxy.result.abi.filter(*/}\n      {/*        (a: { stateMutability: string; type: string; }) => a.stateMutability === \"view\" && a.type === \"function\"*/}\n      {/*      )}*/}\n      {/*      address={props.address || \"\"}*/}\n      {/*      isRead={V_TABS.READ_PROXY === tab}*/}\n      {/*    />*/}\n      {/*  </Box>*/}\n      {/*) : null}*/}\n\n      {/*{tab === V_TABS.WRITE_PROXY && props.sourceCode.proxy ? (*/}\n      {/*  <Box style={{ padding: \"10px\" }}>*/}\n      {/*    <Wallet onSetMetamask={setMetamask} onSetChainId={setChainId} />*/}\n      {/*    <ProxyContractDetails address={props.sourceCode.proxyAddress || \"\"} proxy={props.sourceCode.proxyDetails}></ProxyContractDetails>*/}\n      {/*    <AbiMethods*/}\n      {/*      abi={props.sourceCode.proxy.result.abi.filter(*/}\n      {/*        (a: { stateMutability: string; name: any; type: string; }) =>*/}\n      {/*          a.stateMutability !== \"view\" &&*/}\n      {/*          !!a.name &&*/}\n      {/*          a.type === \"function\"*/}\n      {/*      )}*/}\n      {/*      address={props.address || \"\"}*/}\n      {/*      metamaskAddress={metamaskAddress}*/}\n      {/*      validChainId={validChainId}*/}\n      {/*    />*/}\n      {/*  </Box>*/}\n      {/*) : null}*/}\n    </Box>\n  );\n};\n\n// 1. get implementation address of the proxy\n// 2. look up when they TAB to the READ or WRITE PROXY. get the source code (fetchContractSource)\n// 3. supply as props and enable the read/write proxy code ()\n","import { Box, ColumnConfig, Text } from \"grommet\";\nimport React, { useEffect, useState } from \"react\";\nimport { getERC20TokenHolders } from \"src/api/client\";\nimport { IHoldersInfo, IUserERC721Assets } from \"src/api/client.interface\";\nimport { TransactionsTable } from \"src/components/tables/TransactionsTable\";\nimport { Address, TokenValue } from \"src/components/ui\";\nimport { useERC1155Pool } from \"src/hooks/ERC1155_Pool\";\nimport { useERC20Pool } from \"src/hooks/ERC20_Pool\";\nimport { useERC721Pool } from \"src/hooks/ERC721_Pool\";\nimport { Filter } from \"src/types\";\nimport Big from \"big.js\";\n\nconst getColumns = (\n  id: string,\n  type: \"erc20\" | \"erc721\" | \"erc1155\"\n): ColumnConfig<IHoldersInfo>[] => {\n  const columns = [\n    {\n      property: \"rank\",\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ fontWeight: 300, width: \"30px\" }}\n        >\n          Rank\n        </Text>\n      ),\n      render: (data: any) => <div>{data.rank}</div>,\n    },\n    {\n      property: \"ownerAddres\",\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ fontWeight: 300, width: \"320px\" }}\n        >\n          Address\n        </Text>\n      ),\n      render: (data: any) => <Address address={data.ownerAddress} />,\n    },\n    {\n      property: \"balance\",\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Balance\n        </Text>\n      ),\n      render: (data: any) => {\n        return type === \"erc1155\" ? (\n          <>{data.balance}</>\n        ) : (\n          <TokenValue value={data.balance} tokenAddress={id} />\n        );\n      },\n    },\n  ];\n\n  if (type === 'erc20' || type === 'erc721') {\n    columns.push(    {\n      property: \"percentage\",\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ fontWeight: 300 }}\n        >\n          Percentage\n        </Text>\n      ),\n      render: (data: any) => <div>{data.percentage}</div>,\n    })\n  }\n\n  return columns\n};\n\nexport function HoldersTab(props: {\n  id: string;\n  type: \"erc20\" | \"erc721\" | \"erc1155\";\n  inventory?: IUserERC721Assets[];\n  holdersCount?: number\n}) {\n  const erc20Map = useERC20Pool();\n  const erc721Map = useERC721Pool();\n  const erc1155Map = useERC1155Pool();\n\n  let holdersTotal =\n    props.holdersCount ||\n    erc20Map[props.id]?.holders ||\n    erc721Map[props.id]?.holders ||\n    erc1155Map[props.id]?.holders;\n\n  const totalSupply =\n    erc20Map[props.id]?.totalSupply ||\n    erc721Map[props.id]?.totalSupply ||\n    erc1155Map[props.id]?.totalSupply;\n\n  const limitValue = localStorage.getItem(\"tableLimitValue\");\n\n  const initFilter: Partial<Filter> = {\n    offset: 0,\n    limit: limitValue ? +limitValue : 10,\n  };\n\n  const [filter, setFilter] = useState<Filter>({\n    ...(initFilter as any),\n  });\n\n  const [holders, setHolders] = useState<any>([]);\n\n  useEffect(() => {\n    const getHolders = async () => {\n      try {\n        let holdersData: IHoldersInfo[] = [];\n\n        if (props.type === \"erc20\") {\n          holdersData = await getERC20TokenHolders([\n            props.id,\n            filter.limit || 10,\n            filter.offset,\n          ]);\n        } else {\n          if (props.inventory) {\n            const existed = {} as any;\n            holdersData = props.inventory\n              .map((item) => {\n                return {\n                  tokenAddress: item.tokenAddress,\n                  ownerAddress: item.ownerAddress || item.tokenID,\n                  tokenID: item.tokenID,\n                  needUpdate: item.needUpdate,\n                  lastUpdateBlockNumber: item.lastUpdateBlockNumber,\n                  balance:\n                    props.inventory?.filter(\n                      (inventory) =>\n                        (inventory.ownerAddress || inventory.tokenID) ===\n                        item.ownerAddress\n                    ).length || 0,\n                };\n              })\n              .filter((item) => {\n                if (existed[item.ownerAddress || item.tokenID]) {\n                  return false;\n                } else {\n                  existed[item.ownerAddress || item.tokenID] = true;\n                  return true;\n                }\n              })\n              .sort((a, b) => b.balance - a.balance)\n              .slice(filter.offset, (filter.limit || 10) + filter.offset);\n          } else {\n            holdersData = [];\n          }\n        }\n\n        holdersData = holdersData.map((item, index) => {\n          return {\n            ...item,\n            rank: filter.offset + index + 1,\n            percentage: totalSupply && +totalSupply > 0\n              ? Big(item.balance).div(Big(totalSupply)).mul(100).toFixed(4) + '%'\n              : ''\n          }\n        })\n\n        setHolders(holdersData);\n      } catch (err) {\n        setHolders([]);\n      }\n    };\n    getHolders();\n  }, [props.id, filter.limit, filter.offset, props.inventory]);\n\n  return (\n    <Box style={{ padding: \"10px\" }}>\n      <TransactionsTable\n        columns={getColumns(props.id, props.type)}\n        filter={filter}\n        hideCounter={false}\n        setFilter={setFilter}\n        limit={filter.limit || 10}\n        data={holders}\n        totalElements={+holdersTotal}\n        noScrollTop\n        minWidth=\"1266px\"\n        showPages={true}\n        textType={\"holder\"}\n      />\n    </Box>\n  );\n}\n","import { Box, Text } from \"grommet\";\n\nexport function ApprovalsHeader() {\n  return (\n    <Box margin={{ left: \"10px\" }}>\n        <Text size=\"small\" color={\"minorText\"}>\n          This tool will check your wallet for any token approvals and guide you on how to revoke these approvals. To begin, please click the Sign In Metamask button.\n        </Text>\n        <Text size=\"small\" color={\"minorText\"}>\n          During periods of network congestion, it may take some time for the updated approval to be reflected in this tool.\n        </Text>\n        <Text size=\"small\" color={\"red\"} margin={\"medium\"}>\n          <b>NOTE:</b> approvals are required for dApps to function properly. <strong>Use this tool at your own risk.</strong> For more information, check out the Knowledge Base.\n        </Text>\n      </Box>\n  );\n}\n","import { Box, ColumnConfig, Text } from 'grommet'\nimport { Address } from 'src/components/ui'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { ApprovalDetails, RPCTransactionHarmony } from 'src/types';\nconst TabBox = styled(Box) <{ selected: boolean }>`\n  border: 1px solid ${(props) => props.theme.global.colors.border};\n  background: ${(props) =>\n    props.selected ? props.theme.global.colors.backgroundBack : \"transparent\"};\n  padding: 7px 12px 6px 12px;\n  border-radius: 4px;\n  margin: 5px 10px;\n  text-align: center;\n`;\n\nexport function getApprovalsColumns(revokeClicked:(tx:ApprovalDetails) => void): ColumnConfig<any>[] {\n  return [\n    {\n      property: 'hash',\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ fontWeight: 300, width: '95px' }}\n        >\n          Hash\n        </Text>\n      ),\n      render: (data: ApprovalDetails) => (\n        <Address address={data.hash} type=\"tx\" isShort />\n      )\n    },\n    {\n      property: 'lastUpdated',\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Last Updated (UTC)\n        </Text>\n      ),\n      render: (data: ApprovalDetails) => {\n        return (\n          <Text size=\"12px\">\n            {data.lastUpdated.toLocaleString()}\n          </Text>\n        )\n      }\n    },\n    {\n      property: 'approvalType',\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          ApprovalType\n        </Text>\n      ),\n      render: (data: ApprovalDetails) => {\n\n        let value = data.tokenAmount;\n        if (value === undefined || isNaN(value)) {\n          value = data.tokenId;\n        }\n\n        return (\n          <Text size=\"12px\">\n            {data.action} / {value || \"ALL\"}\n          </Text>\n        )\n      }\n    },\n    {\n      property: 'assets',\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ fontWeight: 300, width: '120px' }}\n        >\n          Assets\n        </Text>\n      ),\n      render: (data: ApprovalDetails) => {\n        return (<Address address={data.assetAddress} />)\n      }\n    },\n    {\n      property: 'spender',\n      header: <Text\n        color=\"minorText\"\n        size=\"small\"\n        style={{ fontWeight: 300, width: '120px' }}\n      >\n        Approved Spender\n    </Text>,\n      render: (data: ApprovalDetails) => {\n\n        return (\n          <Text size=\"12px\">\n            <Address address={data.spender} />\n          </Text>\n        )\n      }\n    },\n    {\n      property: 'allowance',\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ fontWeight: 300, width: '120px' }}\n        >\n          Allowance\n        </Text>\n      ),\n      render: (data: ApprovalDetails) => {\n\n        return (\n          <Text size=\"12px\">\n            {data.allowance}\n          </Text>)\n      }\n    },\n    {\n      property: 'action',\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ fontWeight: 300, width: '120px' }}\n        >\n          Action\n        </Text>\n      ),\n      render: (data: ApprovalDetails) => {\n        return (\n          <TabBox onClick={e=>{revokeClicked(data)}} selected={true}>\n            <Text size=\"small\" color={\"minorText\"}>\n              Revoke\n            </Text>\n          </TabBox>)\n      }\n    }\n  ]\n}\n","import { Box, TextInput } from \"grommet\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { ApprovalDetails } from \"src/types\";\nimport { useThemeMode } from \"src/hooks/themeSwitcherHook\";\nimport { Search } from \"grommet-icons\";\nimport { useERC20Pool } from \"src/hooks/ERC20_Pool\";\nimport { useERC721Pool } from \"src/hooks/ERC721_Pool\";\nimport { useERC1155Pool } from \"src/hooks/ERC1155_Pool\";\nimport { addressAliasMap } from \"src/config\";\n\nlet timeoutID: any | null = null;\nconst EMPTY_ADDRESS = \"0x0000000000000000000000000000000000000000\";\n\nexport function ApprovalSearch(props: {\n    data: ApprovalDetails[],\n    dataFiltered: (data: ApprovalDetails[]) => void,\n}) {\n    const [data, setData] = useState<ApprovalDetails[]>([]);\n    const [value, setValue] = useState(\"\");\n    const [readyFilter, setReadyFilter] = useState(false);\n\n    const themeMode = useThemeMode();\n\n    const erc20Map = useERC20Pool();\n    const erc721Map = useERC721Pool();\n    const erc1155Map = useERC1155Pool();\n\n    const resolveName = (address: string) => {\n\n        if (!address) {\n            return \"\";\n        }\n\n        let parsedName = address;\n\n        if (erc20Map[address]) {\n            parsedName = erc20Map[address].name;\n        }\n\n        if (erc721Map[address]) {\n            parsedName = erc721Map[address].name;\n        }\n\n        if (erc1155Map[address]) {\n            parsedName = erc1155Map[address].name;\n        }\n\n        if (addressAliasMap[address]) {\n            parsedName = addressAliasMap[address].name;\n        }\n\n        parsedName = address === EMPTY_ADDRESS ? \"0x0\" : parsedName;\n        return parsedName.toLowerCase();\n    }\n\n    useEffect(() => {\n        setData(props.data.sort((a, b) => b.lastUpdated > a.lastUpdated ? 1 : -1));\n    }, [props.data])\n\n    const onChange = useCallback((event) => {\n        const { value: newValue } = event.target;\n        setValue(newValue);\n        clearTimeout(timeoutID);\n        timeoutID = setTimeout(() => setReadyFilter(true), 200);\n    }, []);\n\n    useEffect(() => {\n        setReadyFilter(false);\n        const filterString = value.trim().toLowerCase();\n        if (filterString.length === 0) {\n            const sorted = props.data.sort((a, b) => b.lastUpdated > a.lastUpdated ? 1 : -1)\n            setData(sorted);\n            props.dataFiltered(sorted);\n        } else {\n            const filtered = props.data.filter(tx => {\n                // filter asset\n                // filter approver\n                // filter allowance\n                if (tx.allowance.toLowerCase().includes(filterString)) {\n                    return true;\n                }\n                if (tx.spender.toLowerCase().includes(filterString)) {\n                    return true;\n                }\n                if (tx.assetAddress.toLowerCase().includes(filterString)) {\n                    return true;\n                }\n                if (resolveName(tx.assetAddress).includes(filterString)) {\n                    return true;\n                }\n                if (resolveName(tx.spender).includes(filterString)) {\n                    return true;\n                }\n                return false; // filtered\n            });\n\n            setData(filtered);\n            props.dataFiltered(filtered);\n        }\n    }, [readyFilter]);\n\n    return (\n        <Box>\n            <TextInput\n                value={value}\n                onChange={onChange}\n                onPaste={(evt) => {\n                    clearTimeout(timeoutID);\n                    timeoutID = setTimeout(() => setReadyFilter(true), 200);\n                }}\n                onKeyDown={(e) => {\n                    if (e.keyCode === 13) {\n                        clearTimeout(timeoutID);\n                        timeoutID = setTimeout(() => setReadyFilter(true), 200);\n                    }\n                }}\n                color=\"red\"\n                icon={<Search color=\"brand\" />}\n                style={{\n                    backgroundColor: themeMode === \"light\" ? \"white\" : \"transparent\",\n                    fontWeight: 500,\n                    marginBottom: \"10px\"\n                }}\n                placeholder=\"Search by Asset / Spender / Allowance\"\n            />\n        </Box>\n    );\n}\n","import { Box, Spinner, Text } from \"grommet\";\nimport styled from \"styled-components\";\nimport { useEffect, useState } from \"react\";\nimport { TableComponent } from \"src/components/tables/TableComponents\";\nimport { getApprovalsColumns } from \"./approvalsColumns\";\nimport { Address } from \"src/components/ui\";\nimport { ApprovalDetails } from \"src/types\";\n\nimport { ApprovalSearch } from \"./approvalSearch\";\n\nconst ViewWrapper = styled(Box)`\n  border: 1px solid #e7ecf7;\n  border-radius: 5px;\n`;\n\nconst NameWrapper = styled(Box)`\n  border-bottom: 1px solid #e7ecf7;\n  padding: 10px;\n  opacity: 0.7;\n  border-radius: 5px;\n  `;\n\nexport function ApprovalsRenderer(props: {\n    data: ApprovalDetails[],\n    isLoading: boolean,\n    revokeClicked: (tx: ApprovalDetails) => void,\n    account: string,\n    contractAddress?: string,\n    title?: string\n}) {\n    const [data, setData] = useState<ApprovalDetails[]>([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        if (isLoading) {\n            setData(props.data);\n        }\n        else {\n            // finish loading, sort\n            setData(props.data.sort((a, b) => b.lastUpdated > a.lastUpdated ? 1 : -1));\n        }\n    }, [props.data, props.isLoading])\n\n    useEffect(() => {\n        setIsLoading(props.isLoading);\n    }, [props.isLoading])\n\n    return (\n        <ViewWrapper direction='column' margin={{ bottom: 'medium' }}>\n            <ApprovalSearch\n                data={props.data}\n                dataFiltered={setData}\n            />\n            \n            <NameWrapper background={'backgroundBack'}>\n                <Text size='small'>\n                    Approved Spenders {props.contractAddress ? <>for <Address address={props.contractAddress} /></> : props.title || \"\"}\n                </Text>\n            </NameWrapper>\n            <TableComponent tableProps={{\n                className: \"g-table-header\",\n                style: { width: \"100%\", tableLayout: 'auto', top: \"12px\" },\n                columns: getApprovalsColumns(props.revokeClicked),\n                data: data,\n                border: {\n                    header: {\n                        color: \"brand\",\n                    },\n                    body: {\n                        color: \"border\",\n                        side: \"top\",\n                        size: \"1px\",\n                    },\n                },\n                primaryKey: \"hash\"\n            }} />{isLoading && <Box justify=\"center\" align=\"center\" height=\"110px\">\n                <Spinner size=\"small\" />\n            </Box>}\n            {!isLoading && props.account?.length > 0 && data.length === 0 && <Box justify=\"center\" align=\"center\" height=\"110px\" direction=\"row\">\n                <Text size=\"small\" color={\"minorText\"} margin={{ right: \"10px\" }}>No approvals found for</Text>\n                <Address address={props.account} />\n                <Text size=\"small\" color={\"minorText\"} margin={{ left: \"10px\" }}>\n                    {props.contractAddress ? <>for <Address address={props.contractAddress} /></> : props.title || \"\"}\n                </Text>\n            </Box>}\n        </ViewWrapper>\n    );\n}\n","import { Box, Text } from \"grommet\";\nimport { useState } from \"react\";\nimport { ApprovalDetails, RPCTransactionHarmony } from \"src/types\";\nimport { HarmonyAddress } from \"src/utils\";\nimport { ApprovalsHeader } from \"src/components/approvals/approvalsHeader\";\nimport { Wallet } from \"../../ContractDetails/ConnectWallets\";\nimport { ApprovalsRenderer } from \"src/components/approvals/approvalsRenderer\";\nimport { revokePermission } from \"src/utils/approvals\";\nimport { ApiCache } from \"src/api/ApiCache\";\nimport { getAllApprovalsForTokens } from \"src/api/rpc\";\nimport { useERC1155Pool } from \"src/hooks/ERC1155_Pool\";\nimport { useERC20Pool } from \"src/hooks/ERC20_Pool\";\nimport { useERC721Pool } from \"src/hooks/ERC721_Pool\";\n\nconst ApprovalCache = new ApiCache({ key: \"approvalsCache\" }); // cache of approvals data mapped\n\nexport function TokenApprovals(props: { contractAddress?: string }) {\n    const [metamaskAddress, setMetamask] = useState(\"\");\n    const [chainId, setChainId] = useState(0);\n    const [data, setData] = useState<ApprovalDetails[]>([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n\n\n    const erc20Map = useERC20Pool();\n    const erc721Map = useERC721Pool();\n    const erc1155Map = useERC1155Pool();\n\n    const isMainNet =\n        process.env.REACT_APP_RPC_URL_SHARD0 === \"https://a.api.s0.t.hmny.io/\";\n\n    const validChainId = isMainNet\n        ? chainId === 1666600000\n        : (chainId === 1666700000 || chainId === 1666900000);\n\n    const loadTransactions = async ({ account = \"\", contractAddress = \"\" }) => {\n\n        if (account === \"\" || !validChainId) {\n            setIsLoading(false);\n            return;\n        }\n\n        const harmonyAddress = new HarmonyAddress(account);\n        const contractHarmonyAddr = contractAddress.length > 0 ? new HarmonyAddress(contractAddress) : null;\n\n        const key = account + (contractHarmonyAddr ? contractAddress : \"\");\n        const pageSize = 100;\n\n        let pageIndex = ApprovalCache.get(account + \"-\" + key + \"-index\") || 0;\n        let result: { txnHistory: ApprovalDetails[], dataObj: RPCTransactionHarmony[] } = { txnHistory: ApprovalCache.get(account + \"-\" + key + \"-txnHistory\") || [], dataObj: [] };\n        try {\n            do {\n                result = await getAllApprovalsForTokens(harmonyAddress.basicHex,\n                    contractHarmonyAddr?.basicHex || \"\",\n                    pageIndex,\n                    pageSize,\n                    result.txnHistory,\n                    erc20Map,\n                    erc1155Map,\n                    erc721Map\n                );\n                // update the page index and the txn history on each refresh\n                if (result.dataObj.length > 0) {\n                    ApprovalCache.set(account + \"-\" + key + \"-index\", pageIndex);\n                    ApprovalCache.set(account + \"-\" + key + \"-txnHistory\", result.txnHistory);\n                }\n\n                pageIndex++;\n\n                if (result.dataObj.length > 0) { // update only when there is data\n                    setData((prev: ApprovalDetails[]) => {\n                        return [...result.txnHistory];\n                    });\n                }\n\n            } while (result.dataObj.length >= pageSize);\n        }\n        catch (error) {\n            setError((error as Error).message)\n        }\n\n        setIsLoading(false);\n    }\n\n    const revokePermissions = async (tx: ApprovalDetails) => {\n        const account = tx.account;\n        const contractAddress = tx.assetAddress;\n\n        setIsLoading((prev: boolean) => {\n            return true;\n        });\n        setError((prev: string | null) => {\n            return null;\n        }); // clear error\n        try {\n            await revokePermission(tx);\n        }\n        catch (error) {\n            // @ts-ignore\n            setError(error.message);\n            return;\n        }\n        setData((prev: ApprovalDetails[]) => {\n            return [];\n        }); // reset data\n\n        await loadTransactions({ account, contractAddress });\n    }\n\n    return (\n        <Box>\n            <ApprovalsHeader />\n            <Box margin={{ left: \"10px\", top: \"medium\" }}>\n                <Wallet onSetMetamask={(addr: string) => {\n                    if (addr?.length > 0) {\n                        setIsLoading(true);\n                        loadTransactions({ account: addr, contractAddress: props.contractAddress });\n                    }\n                    setMetamask(addr);\n                }} onSetChainId={setChainId} />\n                {error && (\n                    <Text color='red' size='small' style={{ marginTop: 5 }}>\n                        {error}\n                    </Text>\n                )}\n                {metamaskAddress?.length > 0 &&\n                    <ApprovalsRenderer data={data} isLoading={isLoading} revokeClicked={revokePermissions} account={metamaskAddress} contractAddress={props.contractAddress} />}\n\n            </Box>\n        </Box>\n    );\n}\n","import { Box, Text } from \"grommet\";\nimport styled from \"styled-components\";\nimport React, { useState } from \"react\";\nimport { TokenApprovals } from \"./TokenApprovals\";\n\nconst TabBox = styled(Box) <{ selected: boolean }>`\n  border: 1px solid ${(props) => props.theme.global.colors.border};\n  background: ${(props) =>\n    props.selected ? props.theme.global.colors.backgroundBack : \"transparent\"};\n  padding: 7px 12px 6px 12px;\n  border-radius: 4px;\n  margin: 5px 10px;\n`;\nconst TabButton = (props: {\n  text: string;\n  onClick: () => void;\n  selected: boolean;\n}) => {\n  return (\n    <TabBox onClick={props.onClick} selected={props.selected}>\n      <Text size=\"small\" color={\"minorText\"}>\n        {props.text}\n      </Text>\n    </TabBox>\n  );\n};\n\nenum V_TABS {\n  APPROVAL = \"Token Approval\"\n}\n\nexport function ToolsTab(props: {\n  contractAddress: string;\n  showTools?: boolean | null\n}) {\n  const [tab, setTab] = useState<V_TABS>(V_TABS.APPROVAL);\n\n  return (\n    <Box direction=\"column\">\n\n      {props.showTools && <Box direction=\"row\" align=\"center\" margin={{ top: \"medium\", bottom: \"medium\" }}>\n        <TabButton\n          text={V_TABS.APPROVAL}\n          onClick={() => { setTab(V_TABS.APPROVAL) }}\n          selected={V_TABS.APPROVAL === tab}\n        />\n      </Box>}\n\n      {tab === V_TABS.APPROVAL && <TokenApprovals contractAddress={props.contractAddress}/>}\n      \n    </Box>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Text, Tabs, Tab, Box } from \"grommet\";\nimport { BasePage, BaseContainer } from \"src/components/ui\";\nimport { AddressDetailsDisplay, getType } from \"./AddressDetails\";\nimport {\n  getUserERC20Balances,\n  getUserERC721Assets,\n  getTokenERC721Assets,\n  getTokenERC1155Assets,\n  getUserERC1155Balances,\n} from \"src/api/client\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useERC20Pool } from \"src/hooks/ERC20_Pool\";\nimport { useERC721Pool } from \"src/hooks/ERC721_Pool\";\nimport { useERC1155Pool } from \"src/hooks/ERC1155_Pool\";\nimport { Transactions } from \"./tabs/transactions/Transactions\";\nimport {\n  IUserERC721Assets,\n  TRelatedTransaction,\n} from \"src/api/client.interface\";\nimport { Inventory } from \"./tabs/inventory/Inventory\";\nimport { getAllBalance, hmy_getDelegationsByDelegator, StakingDelegation } from \"src/api/rpc\";\nimport { ISourceCode, loadSourceCode } from \"../../api/explorerV1\";\nimport { AddressDetails, RelatedTransaction, ShardID } from \"../../types\";\nimport { ContractDetails } from \"./ContractDetails\";\nimport { ERC1155Icon } from \"src/components/ui/ERC1155Icon\";\nimport { getAddress } from \"src/utils\";\nimport { useCurrency } from \"src/hooks/ZPT-ETH-SwitcherHook\";\nimport { HoldersTab } from \"./tabs/holders/HoldersTab\";\nimport { parseHexToText } from \"../../web3/parseHex\";\nimport { ToolsTab } from \"./tabs/tools\";\nimport useQuery from \"../../hooks/useQuery\";\nimport {getContractByAddress} from \"./ContractDetails/helpers\";\nimport {linkedContractsMap} from \"../../config\";\n\nexport function AddressPage() {\n  const history = useHistory();\n  const queryParams = useQuery();\n  const activeTab = +(queryParams.get('activeTab') || 0);\n\n  const [contracts, setContracts] = useState<AddressDetails | null>(null);\n  const [contractShardId, setContractShardId] = useState<ShardID | null>(null);\n  const [sourceCode, setSourceCode] = useState<ISourceCode | null>(null);\n  const [balance, setBalance] = useState<any>([]);\n  const [delegations, setDelegations] = useState<StakingDelegation[]>([]);\n  const [addressDescription, setAddressDescription] = useState('')\n  const [implementation, setImplementation] = useState<AddressDetails | null>(null)\n  const [implementationSourceCode, setImplementationSourceCode] = useState<ISourceCode | null>(null)\n\n  const [tokens, setTokens] = useState<any>(null);\n  const [inventory, setInventory] = useState<IUserERC721Assets[]>([]);\n  const [inventoryHolders, setInventoryForHolders] = useState<\n    IUserERC721Assets[]\n    >([]);\n  const [activeIndex, setActiveIndex] = useState(activeTab);\n  const [holdersCount, setHoldersCount] = useState<number | undefined>()\n  const erc20Map = useERC20Pool();\n  const erc721Map = useERC721Pool();\n  const erc1155Map = useERC1155Pool();\n\n  //TODO remove hardcode\n  // @ts-ignore\n  let { id } = useParams();\n  id = `${id}`.toLowerCase();\n  id = id.slice(0, 3) === \"one\" ? getAddress(id).basicHex : id;\n\n  const erc20Token = erc20Map[id] || null;\n  const erc1155Token = erc1155Map[id] || null\n  let type = erc721Map[id]\n    ? \"erc721\"\n    : erc1155Map[id]\n      ? \"erc1155\"\n      : getType(contracts, erc20Token);\n\n  useEffect(() => {\n    const getActiveIndex = () => {\n      setActiveIndex(activeTab || 0);\n    };\n    getActiveIndex();\n  }, [id]);\n\n  useEffect(() => {\n    const getBal = async () => {\n      let bal: string[] = [];\n      try {\n        bal = await getAllBalance([id, \"latest\"]);\n      } catch {\n        bal = [];\n      }\n\n      setBalance(bal);\n    };\n    getBal();\n  }, [id]);\n\n  useEffect(() => {\n    const getContractCode = async (id: string, shardId: ShardID) => {\n      try {\n        const data = await loadSourceCode(id, shardId)\n        return data\n      } catch (e) {\n        return null\n      }\n    }\n\n    const getContracts = async () => {\n      try {\n        let { contract, shardId } = await getContractByAddress(id);\n        if (contract) {\n          const mergedContracts: any = erc721Map[contract.address]\n            ? { ...contracts, ...erc721Map[contract.address], ...contract }\n            : contract;\n          const code = await getContractCode(contract.address, shardId || 0)\n          setContracts(mergedContracts);\n          setContractShardId(shardId)\n          setSourceCode(code)\n\n          if(contract.implementationAddress) {\n            let { contract: contractData, shardId } = await getContractByAddress(contract.implementationAddress);\n            if (contractData) {\n              const implCode = await getContractCode(contractData.address, shardId || 0)\n              console.log('Implementation contract loaded:', contractData)\n              setImplementation(contractData)\n              setImplementationSourceCode(implCode)\n            }\n          } else {\n            setImplementation(null)\n            setImplementationSourceCode(null)\n          }\n        }\n\n      } catch (err) {\n        setContracts(null);\n        console.error('Error on loading contract:', JSON.stringify(err))\n      }\n    };\n    getContracts();\n  }, [id]);\n\n  useEffect(() => {\n    const getStakingInfo = async () => {\n      try {\n        const data = await hmy_getDelegationsByDelegator(id)\n        setDelegations(data)\n      } catch (e) {\n        console.error('Cannot get staking info', (e as Error).message)\n      }\n    }\n\n    getStakingInfo()\n  }, [id])\n\n  useEffect(() => {\n    const getInventory = async () => {\n      try {\n        if (type === \"erc721\" || type === \"erc1155\") {\n          if(type === \"erc1155\") {\n            setHoldersCount(0)\n          }\n          let items = type === \"erc721\"\n            ? await getTokenERC721Assets([id])\n            : await getTokenERC1155Assets([id])\n\n          items = items.map((item) => {\n            if (item.meta && item.meta.image) {\n              const {image} = item.meta\n              item.meta.image = image.includes('http')\n                ? image\n                : `${process.env.REACT_APP_INDEXER_IPFS_GATEWAY}${image}`;\n            }\n            return item;\n          })\n          // .filter((item) => item.meta)\n          .map((item) => {\n            item.type = type;\n            return item;\n          })\n\n          if(type === 'erc1155') {\n            items = items.filter((item) => item && item.ownerAddress && item.ownerAddress.startsWith('0x'))\n          }\n\n          setInventory(items);\n\n          // TODO remove after fix on backend, workaround\n          if(type === \"erc1155\") {\n            const holdersMap = items\n              .reduce((acc, nextItem) => {\n              const { ownerAddress } = nextItem\n              if(ownerAddress && !acc[ownerAddress.toLowerCase()]) {\n                acc[ownerAddress.toLowerCase()] = true\n              }\n              return acc\n            }, {} as Record<string, boolean>)\n            const holdersInventoryLength = Object.keys(holdersMap).length\n            const tokenHolders = erc1155Token ? erc1155Token.holders : 0\n            setHoldersCount(Math.max(holdersInventoryLength, +tokenHolders))\n          }\n        } else {\n          setInventory([]);\n        }\n      } catch (err) {\n        console.log('Cannot load inventory:', err)\n        setInventory([]);\n      }\n    };\n    getInventory();\n  }, [id, erc721Map]);\n\n  useEffect(() => {\n    const getTokens = async () => {\n      try {\n        let erc721Tokens = await getUserERC721Assets([id]);\n        let tokens = await getUserERC20Balances([id]);\n        let erc1155tokens = await getUserERC1155Balances([id]);\n\n        const erc721BalanceMap = erc721Tokens.reduce((prev, cur) => {\n          if (prev[cur.tokenAddress]) {\n            prev[cur.tokenAddress]++;\n          } else {\n            prev[cur.tokenAddress] = 1;\n          }\n\n          return prev;\n        }, {} as { [token: string]: number });\n\n        setTokens([\n          ...tokens.map((token) => ({ ...token, isERC20: true })),\n          ...erc721Tokens.map((token) => ({\n            ...token,\n            balance: erc721BalanceMap[token.tokenAddress].toString(),\n            isERC721: true,\n          })),\n          ...erc1155tokens.map((item) => ({\n            ...item,\n            balance: item.amount,\n            isERC1155: true,\n          })),\n        ]);\n      } catch (err) {\n        setTokens(null);\n      }\n    };\n    getTokens();\n  }, [id]);\n\n  const renderTitle = () => {\n    const erc721Token = erc721Map[id] || {};\n    const erc1155Token = erc1155Map[id] || {};\n\n    if (type === \"erc20\") {\n      return `ZRC20 ${erc20Token.name || ''}`;\n    }\n\n    if (type === \"erc721\") {\n      return `ERC721 ${erc721Token.name || ''}`;\n    }\n\n    if (type === \"erc1155\") {\n      const title = `ZRC1155 ${erc1155Token.name || \"\"}`;\n      const { meta = {}, ...restErc1155 } = erc1155Token;\n      return meta.image ? (\n        <Box direction={\"row\"} align={\"center\"}>\n          <ERC1155Icon imageUrl={meta.image} />\n          &nbsp;\n          {title}\n        </Box>\n      ) : (\n        title\n      );\n    }\n\n    if (type === \"contract\") {\n      return \"Contract\";\n    }\n\n    return \"Address\";\n  };\n\n  const txsCommonProps = {\n    onTxsLoaded: (txs: RelatedTransaction[]) => {\n      let description = ''\n      if (activeIndex === 0) {\n        const inputWithText = txs.find(tx => parseHexToText(tx.input))\n        if (inputWithText) {\n          description = 'ZPT or more inbound transactions contains a message'\n        }\n      }\n      setAddressDescription(description)\n    }\n  }\n\n  const linkedContract = linkedContractsMap[id]\n\n  return (\n    <BaseContainer pad={{ horizontal: \"0\" }}>\n      <Box direction={'row'} align={'baseline'} gap={'16px'}>\n        <Text size=\"xlarge\" weight=\"bold\" margin={{ bottom: \"medium\" }}>\n          {renderTitle()}\n        </Text>\n        {linkedContract &&\n            <a href={`/address/${linkedContract.address}`}>\n                <Text color={'brand'} size={'medium'}>Open {linkedContract.name} contract ({linkedContract.type})</Text>\n            </a>\n        }\n      </Box>\n      <BasePage margin={{ vertical: \"0\" }} style={{ overflow: \"inherit\" }}>\n        <AddressDetailsDisplay\n          address={id}\n          addressDescription={addressDescription}\n          contracts={contracts}\n          contractShardId={contractShardId}\n          tokens={tokens}\n          balance={balance}\n          delegations={delegations}\n          holdersCount={holdersCount}\n        />\n      </BasePage>\n      <BasePage margin={{ top: \"15px\" }}>\n        <Tabs\n          alignControls=\"start\"\n          justify=\"start\"\n          activeIndex={activeIndex}\n          onActive={(newActive) => {\n            history.replace(\n              `${history.location.pathname}?activeTab=${newActive}`\n            );\n            setActiveIndex(newActive);\n          }}\n        >\n          <Tab title={<Text size=\"small\">Transactions</Text>}>\n            <Transactions {...txsCommonProps} type={\"transaction\"} />\n          </Tab>\n\n          <Tab title={<Text size=\"small\">Staking</Text>}>\n            <Transactions {...txsCommonProps} type={\"staking_transaction\"} />\n          </Tab>\n\n          <Tab title={<Text size=\"small\">Internal</Text>}>\n            <Transactions {...txsCommonProps} type={\"internal_transaction\"} />\n          </Tab>\n\n          <Tab title={<Text size=\"small\">ZRC20 Transfers</Text>}>\n            <Transactions {...txsCommonProps} type={\"erc20\"} />\n          </Tab>\n\n          {/*<Tab title={<Text size=\"small\">NFT Transfers</Text>}>*/}\n          {/*  <Transactions {...txsCommonProps} type={\"erc721\"} />*/}\n          {/*</Tab>*/}\n\n          {type === \"erc721\" || type === \"erc1155\" || type === \"erc20\" ? (\n            <Tab title={<Text size=\"small\">Holders</Text>}>\n              <HoldersTab\n                id={id}\n                type={type}\n                inventory={inventory}\n                holdersCount={holdersCount}\n              />\n            </Tab>\n          ) : null}\n\n          {(type === \"erc721\" || type === \"erc1155\") ? (\n            <Tab title={<Text size=\"small\">Inventory ({inventory.length})</Text>}>\n              <Inventory inventory={inventory} />\n            </Tab>\n          ) : null}\n\n          {!!contracts || !!sourceCode ? (\n            <Tab title={<Text size=\"small\">Contract</Text>}>\n              <ContractDetails\n                address={id}\n                contracts={contracts}\n                sourceCode={sourceCode}\n                shard={contractShardId || 0}\n                implementation={implementation}\n                implementationSourceCode={implementationSourceCode}\n              />\n            </Tab>\n          ) : null}\n\n          {/*type === \"erc20\" &&\n            <Tab title={<Text size=\"small\">Events</Text>}>\n              <EventsTab id={id} />\n            </Tab>\n          */}\n\n          {(type === \"erc721\" || type === \"erc1155\" || type === \"erc20\") ? (\n            <Tab title={<Text size=\"small\">Tools</Text>}>\n              <ToolsTab contractAddress={id} showTools={true} />\n            </Tab>\n          ) : null}\n        </Tabs>\n      </BasePage>\n    </BaseContainer>\n  );\n}\n","import React from \"react\";\n\nimport { Box, DataTable, Text, Spinner, Tip } from \"grommet\";\nimport { Filter } from \"src/types\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Address,\n  formatNumber,\n  PaginationNavigator,\n  PaginationRecordsPerPage,\n  TipContent,\n  TokenValue,\n  TPaginationAction,\n} from \"src/components/ui\";\nimport { Erc20 } from \"../../hooks/ERC20_Pool\";\nimport { CircleQuestion, StatusGood } from \"grommet-icons\";\nimport { isTokenBridged } from \"../../utils\";\n\ninterface TransactionTableProps {\n  data: any[];\n  totalElements: number;\n  limit: number;\n  filter: Filter;\n  setFilter: (filter: Filter, action?: TPaginationAction) => void;\n  showIfEmpty?: boolean;\n  emptyText?: string;\n  isLoading?: boolean;\n  minWidth?: string;\n}\n\nexport function ERC20Table(props: TransactionTableProps) {\n  const history = useHistory();\n  const {\n    data,\n    totalElements,\n    limit,\n    filter,\n    setFilter,\n    emptyText = \"No data to display\",\n    isLoading,\n    minWidth = \"1310px\",\n  } = props;\n\n  if (isLoading) {\n    return (\n      <Box style={{ height: \"700px\" }} justify=\"center\" align=\"center\">\n        <Spinner />\n      </Box>\n    );\n  }\n\n  if (!data.length) {\n    return (\n      <Box style={{ height: \"120px\" }} justify=\"center\" align=\"center\">\n        <Text size=\"small\">{emptyText}</Text>\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <Box\n        direction=\"row\"\n        justify={\"between\"}\n        pad={{ bottom: \"small\" }}\n        margin={{ bottom: \"small\" }}\n        border={{ size: \"xsmall\", side: \"bottom\", color: \"border\" }}\n      >\n        <Text style={{ flex: \"1 1 100%\" }}>\n          <b>{Math.min(limit, data.length)}</b> token\n          {data.length !== 1 ? \"s\" : \"\"} shown\n        </Text>\n        <PaginationNavigator\n          onChange={setFilter}\n          filter={filter}\n          totalElements={totalElements}\n          elements={data}\n          showPages\n          property=\"block_number\"\n        />\n      </Box>\n      <Box style={{ overflow: \"auto\" }}>\n        <DataTable\n          className={\"g-table-header\"}\n          style={{ width: \"100%\", minWidth }}\n          columns={getColumns({ history })}\n          primaryKey={'address'}\n          data={data}\n          border={{\n            header: false,\n            body: {\n              color: \"border\",\n              side: \"bottom\",\n              size: \"1px\",\n            },\n          }}\n          background={{header: 'unset'}}\n        />\n      </Box>\n      <Box\n        direction=\"row\"\n        justify=\"between\"\n        align=\"center\"\n        margin={{ top: \"medium\" }}\n      >\n        <PaginationRecordsPerPage filter={filter} onChange={setFilter} />\n        <PaginationNavigator\n          onChange={setFilter}\n          filter={filter}\n          totalElements={totalElements}\n          elements={data}\n          showPages\n          property=\"block_number\"\n        />\n      </Box>\n    </>\n  );\n}\n\nfunction getColumns(props: any) {\n  return [\n    {\n      property: \"name\",\n      size: \"small\",\n      resizeable: false,\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Name\n        </Text>\n      ),\n      render: (data: Erc20) => <Box direction={'row'} style={{ display: 'flex', alignItems: 'center' }}>\n        <Text size={'small'}>{data.name}</Text>\n        {data.isBridged && <div style={{ marginLeft: \"4px\", height: '14px', cursor: 'pointer' }}>\n           <Tip dropProps={{ align: { bottom: \"top\" }}} content={<TipContent showArrow={true} message={'Token is available on Zippy Bridge'} />}>\n             <StatusGood size={'14px'} color={'successText'} />\n           </Tip>\n        </div>}\n      </Box>,\n    },\n    {\n      property: \"symbol\",\n      size: \"xsmall\",\n      resizeable: false,\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Symbol\n        </Text>\n      ),\n      render: (data: Erc20) => <Text size=\"small\">{data.symbol}</Text>,\n    },\n    {\n      property: \"address\",\n      primary: true,\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Address\n        </Text>\n      ),\n      render: (data: Erc20) => <Address address={data.address} displayHash />,\n    },\n    {\n      property: \"circulatingSupply\",\n      size: \"small\",\n      resizeable: false,\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Circulating Supply\n        </Text>\n      ),\n      render: (data: Erc20) => {\n        return (\n          <Box direction={\"row\"}>\n            <TokenValue\n              value={data.circulatingSupply}\n              tokenAddress={data.address}\n              formatNumber\n              hideSymbol\n            />\n            <Tip\n              dropProps={{ align: { left: \"right\" } }}\n              content={\n                <TipContent\n                  message={`Last update block height: ${formatNumber(\n                    +data.lastUpdateBlockNumber\n                  )}`}\n                />\n              }\n            >\n              <span style={{ marginLeft: \"5px\" }}>\n                <CircleQuestion size=\"small\" />\n              </span>\n            </Tip>\n          </Box>\n        );\n      },\n    },\n    {\n      property: \"totalSupply\",\n      size: \"small\",\n      resizeable: false,\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Total supply\n        </Text>\n      ),\n      render: (data: Erc20) => {\n        return (\n          <Box direction={\"row\"}>\n            <TokenValue\n              value={data.totalSupply}\n              tokenAddress={data.address}\n              formatNumber\n              hideSymbol\n            />\n            <Tip\n              dropProps={{ align: { right: \"left\" } }}\n              content={\n                <TipContent\n                  message={`Last update block height: ${formatNumber(\n                    +data.lastUpdateBlockNumber\n                  )}`}\n                />\n              }\n            >\n              <span style={{ marginLeft: \"5px\" }}>\n                <CircleQuestion size=\"small\" />\n              </span>\n            </Tip>\n          </Box>\n        );\n      },\n    },\n    {\n      property: \"holders\",\n      size: \"small\",\n      resizeable: false,\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Holders\n        </Text>\n      ),\n      render: (data: Erc20) => (\n        <Box direction={\"row\"} justify={\"end\"}>\n          <Text size=\"small\" style={{ fontWeight: 300 }}>\n            {formatNumber(+data.holders)}\n          </Text>\n          <Tip\n            dropProps={{ align: { right: \"left\" } }}\n            content={\n              <TipContent\n                message={`Last update block height: ${formatNumber(\n                  +data.lastUpdateBlockNumber\n                )}`}\n              />\n            }\n          >\n            <span style={{ marginLeft: \"5px\" }}>\n              <CircleQuestion size=\"small\" />\n            </span>\n          </Tip>\n        </Box>\n      ),\n    },\n  ];\n}\n","import { BasePage, TPaginationAction } from \"src/components/ui\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Heading, Spinner, Text, TextInput } from \"grommet\";\nimport { Filter } from \"src/types\";\nimport { Erc20, useERC20Pool } from \"src/hooks/ERC20_Pool\";\nimport { useThemeMode } from \"src/hooks/themeSwitcherHook\";\nimport { ERC20Table } from \"./ERC20Table\";\nimport { Search } from \"grommet-icons\";\n\nexport const ERC20List = () => {\n  const limitValue = localStorage.getItem(\"tableLimitValue\");\n\n  const initFilter: Filter = {\n    offset: 0,\n    limit: limitValue ? +limitValue : 10,\n    orderBy: \"block_number\",\n    orderDirection: \"desc\",\n    filters: [{ type: \"gte\", property: \"block_number\", value: 0 }],\n  };\n\n  const [data, setData] = useState<Erc20[]>([]);\n  const [filter, setFilter] = useState<Filter>(initFilter);\n  const [search, setSearch] = useState<string>(\"\");\n  const erc20 = useERC20Pool();\n  const themeMode = useThemeMode();\n  const erc20Tokens = Object.values(erc20);\n  const searchableFields = [\"name\", \"symbol\", \"address\"] as Array<keyof Erc20>\n\n  const searchedTokenLength = erc20Tokens.filter(\n    filterWithFields(searchableFields, search)\n  ).length;\n\n  useEffect(() => {\n    setData(\n      erc20Tokens\n        .filter(filterWithFields(searchableFields, search))\n        .sort(sortWithHolders)\n        //@ts-ignore\n        .slice(filter.offset, filter.offset + filter.limit)\n    );\n  }, [erc20, filter, search]);\n\n  useEffect(() => {\n    setFilter({ ...filter, offset: 0 });\n  }, [search]);\n\n  const onChangeFilter = (newFilter: Filter, action?: TPaginationAction) => {\n    //@ts-ignore\n    if (action === \"prevPage\" && filter.offset > 0) {\n      //@ts-ignore\n      newFilter.offset = Math.max(0, filter.offset - filter.limit);\n    }\n\n    if (newFilter.limit !== initFilter.limit) {\n      localStorage.setItem(\"tableLimitValue\", `${newFilter.limit}`);\n    }\n\n    if (\n      action === \"nextPage\" &&\n      //@ts-ignore\n      (filter.offset + filter.limit < !!search\n        ? searchedTokenLength\n        : erc20Tokens.length)\n    ) {\n      newFilter.offset = Math.min(\n        //@ts-ignore\n        erc20Tokens.length,\n        //@ts-ignore\n        filter.offset + filter.limit\n      );\n    }\n\n    setFilter(newFilter);\n  };\n\n  const { limit = 10 } = filter;\n\n  return (\n    <>\n      <Heading size=\"xsmall\" margin={{ top: \"0\" }}>\n        ZRC20 Tokens\n      </Heading>\n      <BasePage>\n        <Box width=\"100%\" pad={{ bottom: \"medium\" }}>\n          <TextInput\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n            color=\"red\"\n            icon={<Search color=\"brand\" />}\n            style={{\n              backgroundColor: themeMode === \"light\" ? \"white\" : \"transparent\",\n              fontWeight: 500,\n            }}\n            placeholder=\"Search by Name / Symbol / Address\"\n          />\n        </Box>\n        {!erc20Tokens.length && !search && (\n          <Box height=\"40vh\" justify=\"center\" align=\"center\">\n            <Spinner />\n          </Box>\n        )}\n        {!erc20Tokens.length && search && (\n          <Box justify=\"center\">\n            <Text>No tokens for this search</Text>\n          </Box>\n        )}\n        {!!erc20Tokens.length && (\n          <ERC20Table\n            data={data}\n            limit={limit}\n            filter={filter}\n            setFilter={onChangeFilter}\n            totalElements={!!search ? searchedTokenLength : erc20Tokens.length}\n            minWidth=\"620px\"\n          />\n        )}\n      </BasePage>\n    </>\n  );\n};\n\nfunction filterWithFields(fields: Array<keyof Erc20>, search: string) {\n  return (erc20: Erc20) => {\n    return fields.some((field) =>\n      (erc20 as any)[field]\n        .toString()\n        .toLowerCase()\n        .includes(search.toLowerCase())\n    );\n  };\n}\n\nfunction sortWithHolders(a: Erc20, b: Erc20) {\n  return +b.holders - +a.holders;\n}\n","import React from \"react\";\n\nimport { Box, DataTable, Text, Spinner, Tip } from \"grommet\";\nimport { Filter } from \"src/types\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Address,\n  formatNumber,\n  PaginationNavigator,\n  PaginationRecordsPerPage,\n  TipContent,\n  TPaginationAction,\n} from \"src/components/ui\";\nimport { Erc20 } from \"../../hooks/ERC20_Pool\";\nimport { CircleQuestion, StatusGood } from \"grommet-icons\";\nimport { isTokenBridged } from \"../../utils\";\n\ninterface TransactionTableProps {\n  data: any[];\n  totalElements: number;\n  limit: number;\n  filter: Filter;\n  setFilter: (filter: Filter, action?: TPaginationAction) => void;\n  showIfEmpty?: boolean;\n  emptyText?: string;\n  isLoading?: boolean;\n  minWidth?: string;\n}\n\nexport function ERC721Table(props: TransactionTableProps) {\n  const history = useHistory();\n  const {\n    data,\n    totalElements,\n    limit,\n    filter,\n    setFilter,\n    emptyText = \"No data to display\",\n    isLoading,\n    minWidth = \"1310px\",\n  } = props;\n\n  if (isLoading) {\n    return (\n      <Box style={{ height: \"700px\" }} justify=\"center\" align=\"center\">\n        <Spinner />\n      </Box>\n    );\n  }\n\n  if (!data.length) {\n    return (\n      <Box style={{ height: \"120px\" }} justify=\"center\" align=\"center\">\n        <Text size=\"small\">{emptyText}</Text>\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <Box\n        direction=\"row\"\n        justify={\"between\"}\n        pad={{ bottom: \"small\" }}\n        margin={{ bottom: \"small\" }}\n        border={{ size: \"xsmall\", side: \"bottom\", color: \"border\" }}\n      >\n        <Text style={{ flex: \"1 1 100%\" }}>\n          <b>{Math.min(limit, data.length)}</b> token\n          {data.length !== 1 ? \"s\" : \"\"} shown\n        </Text>\n        <PaginationNavigator\n          onChange={setFilter}\n          filter={filter}\n          totalElements={totalElements}\n          elements={data}\n          showPages\n          property=\"block_number\"\n        />\n      </Box>\n      <Box style={{ overflow: \"auto\" }}>\n        <DataTable\n          className={\"g-table-header\"}\n          style={{ width: \"100%\", minWidth }}\n          columns={getColumns({ history })}\n          data={data}\n          primaryKey={'address'}\n          border={{\n            header: false,\n            body: {\n              color: \"border\",\n              side: \"bottom\",\n              size: \"1px\",\n            },\n          }}\n          background={{header: 'unset'}}\n        />\n      </Box>\n      <Box\n        direction=\"row\"\n        justify=\"between\"\n        align=\"center\"\n        margin={{ top: \"medium\" }}\n      >\n        <PaginationRecordsPerPage filter={filter} onChange={setFilter} />\n        <PaginationNavigator\n          onChange={setFilter}\n          filter={filter}\n          totalElements={totalElements}\n          elements={data}\n          showPages\n          property=\"block_number\"\n        />\n      </Box>\n    </>\n  );\n}\n\nfunction getColumns(props: any) {\n  return [\n    {\n      property: \"name\",\n      size: \"small\",\n      resizeable: false,\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Name\n        </Text>\n      ),\n      render: (data: Erc20) => <Box direction={'row'} style={{ display: 'flex', alignItems: 'center' }}>\n        <Text size={'small'}>{data.name}</Text>\n        {data.isBridged && <div style={{ marginLeft: \"4px\", height: '14px', cursor: 'pointer' }}>\n          <Tip dropProps={{ align: { bottom: \"top\" }}} content={<TipContent showArrow={true} message={'Token is available on Zippy Bridge'} />}>\n            <StatusGood size={'14px'} color={'successText'} />\n          </Tip>\n        </div>}\n      </Box>,\n    },\n    {\n      property: \"symbol\",\n      size: \"xsmall\",\n      resizeable: false,\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Symbol\n        </Text>\n      ),\n      render: (data: Erc20) => <Text size=\"small\">{data.symbol}</Text>,\n    },\n    {\n      property: \"address\",\n      primary: true,\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Address\n        </Text>\n      ),\n      render: (data: Erc20) => {\n        return <Address address={data.address} displayHash />;\n      },\n    },\n    // {\n    //   property: \"totalSupply\",\n    //   size: 'small',\n    //   resizeable: false,\n    //   header: (\n    //     <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n    //       Total supply\n    //     </Text>\n    //   ),\n    //   render: (data: Erc20) => {\n    //     return <TokenValue value={data.totalSupply} formatNumber />;\n    //   },\n    // },\n    {\n      property: \"holders\",\n      size: \"small\",\n      resizeable: false,\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Holders\n        </Text>\n      ),\n      render: (data: Erc20) => (\n        <Box direction={\"row\"} justify={\"end\"}>\n          <Text size=\"small\" style={{ fontWeight: 300 }}>\n            {formatNumber(+data.holders)}\n          </Text>\n          <Tip\n            dropProps={{ align: { right: \"left\" } }}\n            content={\n              <TipContent\n                message={`Last update block height: ${formatNumber(\n                  +data.lastUpdateBlockNumber\n                )}`}\n              />\n            }\n          >\n            <span style={{ marginLeft: \"5px\" }}>\n              <CircleQuestion size=\"small\" />\n            </span>\n          </Tip>\n        </Box>\n      ),\n    },\n  ];\n}\n","import { BasePage, TPaginationAction } from \"src/components/ui\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Heading, Spinner, Text, TextInput } from \"grommet\";\nimport { Filter } from \"src/types\";\nimport { ERC721, useERC721Pool } from \"src/hooks/ERC721_Pool\";\nimport { useThemeMode } from \"src/hooks/themeSwitcherHook\";\nimport { ERC721Table } from \"./ERC721Table\";\nimport { Search } from \"grommet-icons\";\n\nexport const ERC721List = () => {\n  const limitValue = localStorage.getItem(\"tableLimitValue\");\n\n  const initFilter: Filter = {\n    offset: 0,\n    limit: limitValue ? +limitValue : 10,\n    orderBy: \"block_number\",\n    orderDirection: \"desc\",\n    filters: [{ type: \"gte\", property: \"block_number\", value: 0 }],\n  };\n\n  const [data, setData] = useState<ERC721[]>([]);\n  const [filter, setFilter] = useState<Filter>(initFilter);\n  const [search, setSearch] = useState<string>(\"\");\n  const erc721 = useERC721Pool();\n  const themeMode = useThemeMode();\n  const erc721Tokens = Object.values(erc721);\n  const searchableFields = [\"name\", \"symbol\", \"address\"] as Array<keyof ERC721>\n\n  const searchedTokenLength = erc721Tokens.filter(\n    filterWithFields(searchableFields, search)\n  ).length;\n\n  useEffect(() => {\n    setData(\n      erc721Tokens\n        .filter(filterWithFields(searchableFields, search))\n        .sort(sortWithHolders)\n        //@ts-ignore\n        .slice(filter.offset, filter.offset + filter.limit)\n    );\n  }, [erc721, filter, search]);\n\n  useEffect(() => {\n    setFilter({ ...filter, offset: 0 });\n  }, [search]);\n\n  const onChangeFilter = (newFilter: Filter, action?: TPaginationAction) => {\n    //@ts-ignore\n    if (action === \"prevPage\" && filter.offset > 0) {\n      //@ts-ignore\n      newFilter.offset = Math.max(0, filter.offset - filter.limit);\n    }\n\n    if (newFilter.limit !== initFilter.limit) {\n      localStorage.setItem(\"tableLimitValue\", `${newFilter.limit}`);\n    }\n\n    if (\n      action === \"nextPage\" &&\n      //@ts-ignore\n      filter.offset + filter.limit <\n        (!!search ? searchedTokenLength : erc721Tokens.length)\n    ) {\n      newFilter.offset = Math.min(\n        //@ts-ignore\n        erc721Tokens.length,\n        //@ts-ignore\n        filter.offset + filter.limit\n      );\n    }\n\n    setFilter(newFilter);\n  };\n\n  const { limit = 10 } = filter;\n\n  return (\n    <>\n      <Heading size=\"xsmall\" margin={{ top: \"0\" }}>\n        ZRC721 Tokens\n      </Heading>\n      <BasePage>\n        <Box width=\"100%\" pad={{ bottom: \"medium\" }}>\n          <TextInput\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n            color=\"red\"\n            icon={<Search color=\"brand\" />}\n            style={{\n              backgroundColor: themeMode === \"light\" ? \"white\" : \"transparent\",\n              fontWeight: 500,\n            }}\n            placeholder=\"Search by Name / Symbol / Address\"\n          />\n        </Box>\n        {!erc721Tokens.length && !search && (\n          <Box height=\"40vh\" justify=\"center\" align=\"center\">\n            <Spinner />\n          </Box>\n        )}\n        {!erc721Tokens.length && search && (\n          <Box justify=\"center\">\n            <Text>No tokens for this search</Text>\n          </Box>\n        )}\n        {!!erc721Tokens.length && (\n          <ERC721Table\n            data={data}\n            limit={limit}\n            filter={filter}\n            setFilter={onChangeFilter}\n            totalElements={!!search ? searchedTokenLength : erc721Tokens.length}\n            minWidth=\"620px\"\n          />\n        )}\n      </BasePage>\n    </>\n  );\n};\n\nfunction filterWithFields(fields: Array<keyof ERC721>, search: string) {\n  return (erc721: ERC721) => {\n    return fields.some((field) =>\n      erc721[field].toString().toLowerCase().includes(search.toLowerCase())\n    );\n  };\n}\n\nfunction sortWithHolders(a: ERC721, b: ERC721) {\n  return +b.holders - +a.holders;\n}\n","import React from \"react\";\n\nimport { Box, DataTable, Text, Spinner, Tip } from \"grommet\";\nimport { Filter } from \"src/types\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Address,\n  formatNumber,\n  PaginationNavigator,\n  PaginationRecordsPerPage,\n  TipContent,\n  TokenValue,\n  TPaginationAction,\n} from \"src/components/ui\";\nimport { Erc20 } from \"../../hooks/ERC20_Pool\";\nimport { ERC1155Icon } from \"src/components/ui/ERC1155Icon\";\nimport { CircleQuestion, StatusGood } from \"grommet-icons\";\nimport { isTokenBridged } from \"../../utils\";\n\ninterface TransactionTableProps {\n  data: any[];\n  totalElements: number;\n  limit: number;\n  filter: Filter;\n  setFilter: (filter: Filter, action?: TPaginationAction) => void;\n  showIfEmpty?: boolean;\n  emptyText?: string;\n  isLoading?: boolean;\n  minWidth?: string;\n}\n\nexport function ERC1155Table(props: TransactionTableProps) {\n  const history = useHistory();\n  const {\n    data,\n    totalElements,\n    limit,\n    filter,\n    setFilter,\n    emptyText = \"No data to display\",\n    isLoading,\n    minWidth = \"1310px\",\n  } = props;\n\n  if (isLoading) {\n    return (\n      <Box style={{ height: \"700px\" }} justify=\"center\" align=\"center\">\n        <Spinner />\n      </Box>\n    );\n  }\n\n  if (!data.length) {\n    return (\n      <Box style={{ height: \"120px\" }} justify=\"center\" align=\"center\">\n        <Text size=\"small\">{emptyText}</Text>\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <Box\n        direction=\"row\"\n        justify={\"between\"}\n        pad={{ bottom: \"small\" }}\n        margin={{ bottom: \"small\" }}\n        border={{ size: \"xsmall\", side: \"bottom\", color: \"border\" }}\n      >\n        <Text style={{ flex: \"1 1 100%\" }}>\n          <b>{Math.min(limit, data.length)}</b> token\n          {data.length !== 1 ? \"s\" : \"\"} shown\n        </Text>\n        <PaginationNavigator\n          onChange={setFilter}\n          filter={filter}\n          totalElements={totalElements}\n          elements={data}\n          showPages\n          property=\"block_number\"\n        />\n      </Box>\n      <Box style={{ overflow: \"auto\" }}>\n        <DataTable\n          className={\"g-table-header\"}\n          style={{ width: \"100%\", minWidth }}\n          columns={getColumns({ history })}\n          data={data}\n          border={{\n            header: false,\n            body: {\n              color: \"border\",\n              side: \"bottom\",\n              size: \"1px\",\n            },\n          }}\n          background={{header: 'unset'}}\n        />\n      </Box>\n      <Box\n        direction=\"row\"\n        justify=\"between\"\n        align=\"center\"\n        margin={{ top: \"medium\" }}\n      >\n        <PaginationRecordsPerPage filter={filter} onChange={setFilter} />\n        <PaginationNavigator\n          onChange={setFilter}\n          filter={filter}\n          totalElements={totalElements}\n          elements={data}\n          showPages\n          property=\"block_number\"\n        />\n      </Box>\n    </>\n  );\n}\n\nfunction getColumns(props: any) {\n  return [\n    {\n      property: \"icon\",\n      resizeable: false,\n      size: \"xxsmall\",\n      header: (\n        <Text\n          color=\"minorText\"\n          size=\"small\"\n          style={{ fontWeight: 300, width: \"30px\" }}\n        ></Text>\n      ),\n      render: (data: Erc20) => {\n        return <ERC1155Icon imageUrl={data.meta?.image} />;\n      },\n    },\n    {\n      property: \"name\",\n      resizeable: false,\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Name\n        </Text>\n      ),\n      render: (data: Erc20) => <Box direction={'row'} style={{ display: 'flex', alignItems: 'center' }}>\n        <Text size={'small'}>{data.name}</Text>\n        {data.isBridged && <div style={{ marginLeft: \"4px\", height: '14px', cursor: 'pointer' }}>\n          <Tip dropProps={{ align: { bottom: \"top\" }}} content={<TipContent showArrow={true} message={'Token is available on Zippy Bridge'} />}>\n            <StatusGood size={'14px'} color={'successText'} />\n          </Tip>\n        </div>}\n      </Box>,\n    },\n    {\n      property: \"symbol\",\n      size: \"xsmall\",\n      resizeable: false,\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Symbol\n        </Text>\n      ),\n      render: (data: Erc20) => <Text size=\"small\">{data.symbol}</Text>,\n    },\n    {\n      property: \"address\",\n      primary: true,\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Address\n        </Text>\n      ),\n      render: (data: Erc20) => <Address address={data.address} />,\n    },\n    // {\n    //   property: \"totalSupply\",\n    //   size: 'small',\n    //   resizeable: false,\n    //   header: (\n    //     <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n    //       Total supply\n    //     </Text>\n    //   ),\n    //   render: (data: Erc20) => {\n    //     return <TokenValue value={data.totalSupply} formatNumber />;\n    //   },\n    // },\n    {\n      property: \"holders\",\n      size: \"small\",\n      resizeable: false,\n      header: (\n        <Text color=\"minorText\" size=\"small\" style={{ fontWeight: 300 }}>\n          Holders\n        </Text>\n      ),\n      render: (data: Erc20) => (\n        <Box direction={\"row\"} justify={\"end\"}>\n          <Text size=\"small\" style={{ fontWeight: 300 }}>\n            {formatNumber(+data.holders)}\n          </Text>\n          <Tip\n            dropProps={{ align: { right: \"left\" } }}\n            content={\n              <TipContent\n                message={`Last update block height: ${formatNumber(\n                  +data.lastUpdateBlockNumber\n                )}`}\n              />\n            }\n          >\n            <span style={{ marginLeft: \"5px\" }}>\n              <CircleQuestion size=\"small\" />\n            </span>\n          </Tip>\n        </Box>\n      ),\n    },\n  ];\n}\n","import { BasePage, TPaginationAction } from \"src/components/ui\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Heading, Spinner, Text, TextInput } from \"grommet\";\nimport { Filter } from \"src/types\";\nimport { useThemeMode } from \"src/hooks/themeSwitcherHook\";\nimport { ERC1155Table } from \"./ERC1155Table\";\nimport { Search } from \"grommet-icons\";\nimport { useERC1155Pool, ERC1155 } from \"src/hooks/ERC1155_Pool\";\n\nexport const ERC1155List = () => {\n  const limitValue = localStorage.getItem(\"tableLimitValue\");\n\n  const initFilter: Filter = {\n    offset: 0,\n    limit: limitValue ? +limitValue : 10,\n    orderBy: \"block_number\",\n    orderDirection: \"desc\",\n    filters: [{ type: \"gte\", property: \"block_number\", value: 0 }],\n  };\n\n  const [data, setData] = useState<ERC1155[]>([]);\n  const [filter, setFilter] = useState<Filter>(initFilter);\n  const [search, setSearch] = useState<string>(\"\");\n  const erc1155 = useERC1155Pool();\n  const themeMode = useThemeMode();\n  const erc1155Tokens = Object.values(erc1155);\n  const searchableFields = [\"name\", \"symbol\", \"address\"] as Array<keyof ERC1155>\n\n  const searchedTokenLength = erc1155Tokens.filter(\n    filterWithFields(searchableFields, search)\n  ).length;\n\n  useEffect(() => {\n    setData(\n      erc1155Tokens\n        .filter(filterWithFields(searchableFields, search))\n        .sort(sortWithHolders)\n        //@ts-ignore\n        .slice(filter.offset, filter.offset + filter.limit)\n    );\n  }, [erc1155, filter, search]);\n\n  useEffect(() => {\n    setFilter({ ...filter, offset: 0 });\n  }, [search]);\n\n  const onChangeFilter = (newFilter: Filter, action?: TPaginationAction) => {\n    //@ts-ignore\n    if (action === \"prevPage\" && filter.offset > 0) {\n      //@ts-ignore\n      newFilter.offset = Math.max(0, filter.offset - filter.limit);\n    }\n\n    if (newFilter.limit !== initFilter.limit) {\n      localStorage.setItem(\"tableLimitValue\", `${newFilter.limit}`);\n    }\n\n    if (\n      action === \"nextPage\" &&\n      //@ts-ignore\n      filter.offset + filter.limit <\n        (!!search ? searchedTokenLength : erc1155Tokens.length)\n    ) {\n      newFilter.offset = Math.min(\n        //@ts-ignore\n        erc1155Tokens.length,\n        //@ts-ignore\n        filter.offset + filter.limit\n      );\n    }\n\n    setFilter(newFilter);\n  };\n\n  const { limit = 10 } = filter;\n\n  return (\n    <>\n      <Heading size=\"xsmall\" margin={{ top: \"0\" }}>\n        ZRC1155 Tokens\n      </Heading>\n      <BasePage>\n        <Box width=\"100%\" pad={{ bottom: \"medium\" }}>\n          <TextInput\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n            color=\"red\"\n            icon={<Search color=\"brand\" />}\n            style={{\n              backgroundColor: themeMode === \"light\" ? \"white\" : \"transparent\",\n              fontWeight: 500,\n            }}\n            placeholder=\"Search by Name / Symbol / Address\"\n          />\n        </Box>\n        {!erc1155Tokens.length && !search && (\n          <Box height=\"40vh\" justify=\"center\" align=\"center\">\n            <Spinner />\n          </Box>\n        )}\n        {!erc1155Tokens.length && search && (\n          <Box justify=\"center\">\n            <Text>No tokens for this search</Text>\n          </Box>\n        )}\n        {!!erc1155Tokens.length && (\n          <ERC1155Table\n            data={data}\n            limit={limit}\n            filter={filter}\n            setFilter={onChangeFilter}\n            totalElements={\n              !!search ? searchedTokenLength : erc1155Tokens.length\n            }\n            minWidth=\"620px\"\n          />\n        )}\n      </BasePage>\n    </>\n  );\n};\n\nfunction filterWithFields(fields: Array<keyof ERC1155>, search: string) {\n  return (erc721: ERC1155) => {\n    return fields.some((field) =>\n      erc721[field].toString().toLowerCase().includes(search.toLowerCase())\n    );\n  };\n}\n\nfunction sortWithHolders(a: ERC1155, b: ERC1155) {\n  return +b.holders - +a.holders;\n}\n","import {InternalTransaction, RelatedTransaction} from \"../../types\";\nimport dayjs from \"dayjs\";\nimport Big from \"big.js\";\nimport { calculateFee, calculateFeePriceUSD } from \"../../utils/fee\";\nimport {TRelatedTransaction} from \"../../api/client.interface\";\nimport {Erc20} from \"../../hooks/ERC20_Pool\";\nimport {ERC721} from \"../../hooks/ERC721_Pool\";\nimport {ERC1155} from \"../../hooks/ERC1155_Pool\";\n\nconst downloadBlob = (content: any, filename: string) => {\n  const blob = new Blob([content], { type: 'text/csv;charset=utf-8;' });\n  const url = URL.createObjectURL(blob);\n\n  // Create a link to download it\n  const pom = document.createElement('a');\n  pom.href = url;\n  pom.setAttribute('download', filename);\n  pom.click();\n}\n\nconst convertValue = (value: string | number, precision = 18) => {\n  return Big(value).div(Math.pow(10, precision)).round(precision).toString()\n}\n\nconst mapRelatedTxToExport = (ownerAddress: string, tx: RelatedTransaction, onePrice: number) => {\n  const txDate = dayjs(tx.timestamp)\n  const isSender = ownerAddress === tx.from\n  return {\n    Txhash: tx.hash,\n    Blockno: tx.blockNumber,\n    UnixTimestamp: txDate.unix(),\n    DateTime: txDate.format('YYYY-MM-DD HH:MM:ss'),\n    From: tx.from,\n    To: tx.to,\n    ['Value_IN(ZPT)']: convertValue(isSender ? '0': tx.value),\n    ['Value_OUT(ZPT)']: convertValue(isSender ? tx.value : '0'),\n    [`CurrentValue @ $${onePrice}/ZPT`]: convertValue(onePrice * +tx.value),\n    ['TxnFee(ZPT)']: calculateFee(tx.gas, tx.gasPrice),\n    ['TxnFee(USD)']: calculateFeePriceUSD(tx.gas, tx.gasPrice, onePrice),\n    Method: tx.input.slice(0, 10)\n  }\n}\n\nconst mapHrc20TxToExport = (ownerAddress: string, tx: any, erc20Map: Record<string, Erc20>, erc721Map: Record<string, ERC721>, erc1155Map: Record<string, ERC1155>) => {\n  const txDate = dayjs(tx.timestamp)\n  const token = erc20Map[tx.address] || erc721Map[tx.address] || erc1155Map[tx.address]\n  const precision = token ? token.decimals : 18\n\n  const isSender = ownerAddress === tx.from\n  return {\n    Txhash: tx.transactionHash,\n    Blockno: tx.blockNumber,\n    UnixTimestamp: txDate.unix(),\n    DateTime: txDate.format('YYYY-MM-DD HH:MM:ss'),\n    From: tx.from,\n    To: tx.to,\n    ['Value_IN']: convertValue(isSender ? '0': tx.value, precision),\n    ['Value_OUT']: convertValue(isSender ? tx.value : '0', precision),\n    ['TokenAddress']: tx.address,\n    ['TokenName']: token ? token.name: 'N/A',\n    ['TokenSymbol']: token ? token.symbol: 'N/A'\n  }\n}\n\nconst mapInternalTxToExport = (ownerAddress: string, tx: InternalTransaction, onePrice: number) => {\n  const txDate = dayjs(tx.timestamp)\n  const isSender = ownerAddress === tx.from\n  return {\n    Txhash: tx.transactionHash,\n    Blockno: tx.blockNumber,\n    UnixTimestamp: txDate.unix(),\n    DateTime: txDate.format('YYYY-MM-DD HH:MM:ss'),\n    From: tx.from,\n    To: tx.to,\n    ['Value_IN(ZPT)']: convertValue(isSender ? '0': tx.value),\n    ['Value_OUT(ZPT)']: convertValue(isSender ? tx.value : '0'),\n    [`CurrentValue @ $${onePrice}/ZPT`]: convertValue(onePrice * +tx.value),\n    Method: tx.input.slice(0, 10),\n    Type: tx.type\n  }\n}\n\nexport interface IDownloadCsvParams {\n  type: TRelatedTransaction\n  address: string\n  txs: RelatedTransaction[]\n  onePrice: number\n  erc20Map: Record<string, Erc20>\n  erc721Map: Record<string, ERC721>\n  erc1155Map: Record<string, ERC1155>\n}\n\nexport const downloadCSV = (params: IDownloadCsvParams, filename: string) => {\n  const { type, address, txs, onePrice, erc20Map, erc721Map, erc1155Map } = params\n\n  const mapTx = (tx: any) => {\n    if(type === 'erc20') {\n      return mapHrc20TxToExport(address, tx, erc20Map, erc721Map, erc1155Map)\n    } else if (type === 'internal_transaction') {\n      return mapInternalTxToExport(address, tx, onePrice)\n    }\n    return mapRelatedTxToExport(address, tx, onePrice)\n  }\n\n  const mappedTxs = txs.map(mapTx)\n  const header = mappedTxs.filter((_, index) => index === 0).map(item => Object.keys(item))\n  const body = mappedTxs\n    .map((item) => Object.values(item))\n\n  const csv = [...header, ...body]\n    .map(row =>\n      row\n        .map(String)  // convert every value to String\n        .map((v: any) => v.replaceAll('\"', '\"\"'))  // escape double colons\n        // .map((v: any) => `\"${v}\"`)  // quote it\n        .join(', ')  // comma-separated\n    ).join('\\r\\n');  // rows starting on new lines\n\n  downloadBlob(csv, filename)\n}\n","import React, { useState } from \"react\";\nimport { StatusCritical } from \"grommet-icons\";\nimport { Address, BaseContainer, BasePage, Button, TipContent } from \"src/components/ui\";\nimport { Heading, DateInput, Box, Spinner, Tip, Text } from \"grommet\";\nimport styled from \"styled-components\";\nimport useQuery from \"../../hooks/useQuery\";\nimport {getBlocks, getRelatedTransactionsByType} from \"../../api/client\";\nimport { downloadCSV } from \"./export-utils\";\nimport dayjs from \"dayjs\";\nimport { toaster } from \"../../App\";\nimport { useZPTExchangeRate } from \"../../hooks/useZPTExchangeRate\";\nimport {TRelatedTransaction} from \"../../api/client.interface\";\nimport {useERC20Pool} from \"../../hooks/ERC20_Pool\";\nimport {useERC721Pool} from \"../../hooks/ERC721_Pool\";\nimport {useERC1155Pool} from \"../../hooks/ERC1155_Pool\";\n\nconst erc20TransfersURL = 'https://api-hrc-tx.t.hmny.io'\n\nconst IconError = styled(StatusCritical)`\n  margin-right: 5px;\n`;\n\nconst FlexWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nconst InputContainer = styled.div`\n  width: 46%;\n`\n\nconst DownloadButton = styled(Button)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 42px;\n`\n\nconst DefaultLimit = 5000\n\nexport const ExportData = () => {\n  const query = useQuery();\n  const address = (query.get('address') || '').toLowerCase()\n  const type = (query.get('type') || 'transaction') as TRelatedTransaction;\n\n  const dateFormat = 'YYYY-MM-DD'\n  const initialDateFrom = dayjs().startOf('month').format(dateFormat)\n  const initialDateTo = dayjs().format(dateFormat)\n\n  const { lastPrice: onePrice } = useZPTExchangeRate();\n  const erc20Map = useERC20Pool();\n  const erc721Map = useERC721Pool();\n  const erc1155Map = useERC1155Pool();\n\n  const [isDownloading, setIsDownloading] = useState(false)\n  const [dateFrom, setDateFrom] = useState(initialDateFrom)\n  const [dateTo, setDateTo] = useState(initialDateTo)\n\n  const dateInputProps = {\n    format: 'mm/dd/yyyy',\n    value: (new Date()).toISOString(),\n    calendarProps: {\n      size: 'medium',\n      bounds: [dayjs().subtract(5, 'year').format(dateFormat), dayjs().format(dateFormat)]\n    },\n    inputProps: { width: '170px' }\n  }\n\n  const showErrorNotification = () => {\n    toaster.show({\n      message: () => (\n        <Box direction={\"row\"} align={\"center\"} pad={\"small\"}>\n          <IconError size={\"medium\"} color={\"headerText\"}/>\n          <Text size={\"small\"}>Error on loading transactions</Text>\n        </Box>\n      )\n    })\n  }\n\n  const onDownloadClicked = async () => {\n    // using dedicated server and db to get erc20 (for tax returns)\n    if (type === 'erc20') {\n      const url = `${erc20TransfersURL}/v0/shard/0/address/${address.toLowerCase()}/transactions/type/erc20`\n      const txs = await fetch(url).then(r => r.json())\n\n      const downloadParams = {\n        type,\n        address,\n        txs,\n        onePrice,\n        erc20Map,\n        erc721Map,\n        erc1155Map\n      }\n      downloadCSV(downloadParams, `export_${type}_${address}.csv`)\n      return\n    }\n\n\n    try {\n      setIsDownloading(true)\n\n      const txsFilter: any = {\n        offset: 0,\n        limit: DefaultLimit,\n        orderBy: 'block_number',\n        orderDirection: 'desc',\n        filters: []\n      }\n\n      // if (type === 'transaction') {\n      //   if (dateFrom) {\n      //     txsFilter.filters.push({\n      //       type: 'gt',\n      //       property: 'timestamp',\n      //       value: `'${dateFrom}'`\n      //     })\n      //   }\n      //   if (dateTo) {\n      //     txsFilter.filters.push({\n      //       type: 'lt',\n      //       property: 'timestamp',\n      //       value: `'${dayjs(dateTo).add(1, 'day').format(dateFormat)}'`\n      //     })\n      //   }\n      // }\n\n      // Get block numbers first, then filter internal by block number (not timestamp)\n      if (dateFrom) {\n        const blockFromFilter = {\n          offset: 0,\n          limit: 1,\n          orderBy: 'number',\n          orderDirection: 'desc',\n          filters: [{\n            type: 'lte',\n            property: 'timestamp',\n            value: `'${dateFrom}'`\n          }]\n        }\n        const [blockFrom] = await getBlocks([0, blockFromFilter]);\n        if(blockFrom) {\n              txsFilter.filters.push({\n                type: 'gte',\n                property: 'block_number',\n                value: blockFrom.number\n              })\n        }\n      }\n      if (dateTo) {\n        const diff = dayjs().diff(dayjs(dateTo), 'days')\n        const isCurrentDateOrNext = diff <= 0\n        const blockToFilter = {\n          offset: 0,\n          limit: 1,\n          orderBy: 'number',\n          orderDirection: 'desc',\n          filters: [] as any\n        }\n        if(!isCurrentDateOrNext) {\n          blockToFilter.filters.push({\n            type: 'lte',\n            property: 'timestamp',\n            value: `'${dayjs(dateTo).add(1, 'day').format(dateFormat)}'`\n          })\n        }\n        const [blockTo] = await getBlocks([0, blockToFilter]);\n        if(blockTo) {\n          txsFilter.filters.push({\n            type: 'lte',\n            property: 'block_number',\n            value: blockTo.number\n          })\n        }\n      }\n\n      const txs = await getRelatedTransactionsByType([\n        0,\n        address,\n        type,\n        txsFilter,\n      ]);\n      const downloadParams = {\n        type,\n        address,\n        txs,\n        onePrice,\n        erc20Map,\n        erc721Map,\n        erc1155Map\n      }\n      downloadCSV(downloadParams, `export_${type}_${address}.csv`)\n    } catch (e) {\n      console.error('Error on download:', (e as Error).message)\n      showErrorNotification()\n    } finally {\n      setIsDownloading(false)\n    }\n  }\n\n  const onChangeDateFrom = (value: any) => {\n    setDateFrom(dayjs(value).format(dateFormat))\n  }\n\n  const onChangeDateTo = (value: any) => {\n    setDateTo(dayjs(value).format(dateFormat))\n  }\n\n  const getTxTextType = (type: TRelatedTransaction) => {\n    if(type === 'transaction') {\n      return 'transactions'\n    } else if (type === 'internal_transaction') {\n      return 'internal transactions'\n    }\n    return type + ' transactions'\n  }\n\n  return <BaseContainer pad={{ horizontal: \"0\" }} style={{ maxWidth: '740px', alignSelf: 'center' }}>\n    <Heading size=\"xsmall\" margin={{ bottom: \"medium\", top: \"0\" }}>\n      <Box gap={'4px'} direction={'row'} align={'baseline'}>\n        Download Data\n        <Text size={'medium'} weight={'normal'} color={'minorText'}>({getTxTextType(type)})</Text>\n      </Box>\n    </Heading>\n    <BasePage pad={\"medium\"} style={{ overflow: \"inherit\" }}>\n      <Box pad={{ top: 'medium', bottom: 'medium' }} style={{ display: 'inline-block' }}>\n        {type !== 'erc20'\n          ? <>Export the last {DefaultLimit} {getTxTextType(type)} for <Address address={address} /></>\n          : <>Export ERC20 transfers for <Address address={address} /></> }\n        {type === 'transaction' && 'starting from'}\n      </Box>\n      {!['erc20', 'internal_transaction'].includes(type) &&\n          <FlexWrapper>\n            <InputContainer>\n              <Tip dropProps={{ align: { bottom: \"top\" }}} content={<TipContent showArrow={true} message={'Select start date'} />}>\n                <DateInput\n                    {...dateInputProps}\n                    value={dayjs(dateFrom).toISOString()}\n                    onChange={({ value }) => onChangeDateFrom(value)}\n                />\n              </Tip>\n            </InputContainer>\n            <div>to</div>\n            <InputContainer>\n              <Tip dropProps={{ align: { bottom: \"top\" }}} content={<TipContent showArrow={true} message={'Select end date'} />}>\n                <DateInput\n                    {...dateInputProps}\n                    value={dayjs(dateTo).toISOString()}\n                    onChange={({ value }) => onChangeDateTo(value)}\n                />\n              </Tip>\n            </InputContainer>\n          </FlexWrapper>\n      }\n      <Box style={{ justifyContent: 'center', alignItems: 'center' }} pad={{ top: 'large', bottom: 'medium' }}>\n        <Box width={'small'}>\n          <DownloadButton\n            size={'medium'}\n            disabled={isDownloading}\n            style={{ letterSpacing: '0.3px' }}\n            icon={isDownloading ? <Spinner size={'small'} /> : undefined}\n            onClick={onDownloadClicked}\n          >\n            Download\n          </DownloadButton>\n        </Box>\n      </Box>\n    </BasePage>\n  </BaseContainer>\n}\n","import {Box, Text} from \"grommet\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  getTokenERC1155AssetDetails,\n  getTokenERC721AssetDetails,\n} from \"src/api/client\";\nimport {IUserERC721Assets} from \"src/api/client.interface\";\nimport {Address, BasePage} from \"src/components/ui\";\nimport {ERC1155, useERC1155Pool} from \"src/hooks/ERC1155_Pool\";\nimport {ERC721, useERC721Pool} from \"src/hooks/ERC721_Pool\";\nimport styled from \"styled-components\";\n// import HarmonyLogo from '../../assets/Logo.svg';\nimport { linkedContractsMap, config } from '../../config'\nimport {ERC1155Icon} from \"../../components/ui/ERC1155Icon\";\nimport dayjs from \"dayjs\";\nimport {CopyBtn} from \"../../components/ui/CopyBtn\";\nimport {convertErc721TokenId, ZPTCountryTLD} from \"../../utils/oneCountry\";\n\nconst AddressLink = styled.a`\n  text-decoration: none;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\ninterface NFTImageProps {\n  imageUrl: string\n}\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  max-width: 100%;\n  max-height: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 0.35rem;\n`\n\nconst ImageContainer = styled(Box)`\n  background-color: #f1f2f3;\n  width: 100%;\n  border-radius: 0.35rem;\n`\n\nconst NFTContainer = styled(Box)`\n  min-width: 300px;\n\n  @media (min-width: 768px) {\n    width: 42%;\n  }\n`\n\nconst DetailsWrapper = styled(Box)`\n  margin-top: 32px;\n  width: 100%;\n\n  @media (min-width: 768px) {\n    margin-top: 0;\n    width: 56%;\n  }\n`\n\nconst NFTImage = (props: NFTImageProps) => {\n  const { imageUrl } = props\n\n  const [isLoading, setIsLoading] = useState(true)\n  const [isLoadingError, setLoadingError] = useState(false)\n\n  const onLoadSuccess = () => {\n    setIsLoading(false)\n  }\n\n  const onLoadError = () => {\n    // setIsLoading(false);\n    setLoadingError(true);\n  }\n\n  return <ImageContainer width={'inherit'} height={'inherit'} justify={'center'} align={'center'}>\n    {/* {isLoading &&\n        <Image src={HarmonyLogo} style={{ height: '50%' }} />\n    } */}\n    <Image\n      src={imageUrl}\n      onLoad={onLoadSuccess}\n      onError={onLoadError}\n      style={{ display: isLoading ? 'none': 'block' }}\n    />\n  </ImageContainer>\n}\n\ninterface NFTInfoProps {\n  tokenIDParam: string;\n  tokenAddressParam: string;\n  isLoading: boolean\n  tokenERC721: ERC721\n  tokenERC1155: ERC1155\n  asset: IUserERC721Assets\n}\n\nconst DetailsProp = styled(Box)`\n  width: 30%;\n  min-width: 30%;\n  max-width: 300px;\n`\n\nconst DetailsRow = styled(Box)`\n  flex-direction: row;\n`\n\nconst Attribute = styled(Box)`\n  width: calc(25% - 16px);\n  min-width: 100px;\n  border-radius: 12px;\n  padding: 16px;\n  margin-top: 16px;\n  text-align: center;\n  \n  &:not(:last-child) {\n    margin-right: 16px;\n  }\n`\n\nconst TextEllipsis = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-left: 4px;\n`\n\nconst NotAvailable = 'N/A'\nconst urlPattern = /([a-zA-Z0-9\\-\\.]+\\.[a-zA-Z]{3,7})|(\\n)/g;\n\nconst MetaDescription = (props: { text: string, domainParseLinks?: string }) => {\n  const { text, domainParseLinks: tld } = props\n\n  if(tld) {\n    const richText = text.replace(urlPattern, function(url) {\n      const link = 'https://' + url\n      return `<a href=\"${link}\" style=\"color: #00AEE9;\">${url}</a>`\n    })\n    return <div dangerouslySetInnerHTML={{ __html: richText }} />\n  }\n\n    return <Box>\n      {text}\n    </Box>\n}\n\nconst NFTDetails = (props: NFTInfoProps) => {\n  const { tokenAddressParam, tokenIDParam, tokenERC721, asset, isLoading } = props\n  const { ownerAddress, tokenID, tokenAddress } = asset\n\n  // const token = tokenERC721 || tokenERC1155 || {}\n  const meta = asset.meta || {} as any\n\n  const EmptyValue = isLoading ? '' : NotAvailable\n  const tokenStandard = tokenID ? tokenERC721 ? 'ERC721' : 'ERC1155' : EmptyValue\n\n  return <Box round={'8px'} border={{ color: 'border' }} style={{ boxShadow: '0 0.5rem 1.2rem rgb(189 197 209 / 20%)' }}>\n    <Box pad={'16px'} border={{ side: 'bottom' }}>\n      <Text weight={'bold'}>Details</Text>\n    </Box>\n    <Box pad={'16px'} border={{ side: 'bottom'}} gap={'16px'}>\n      <DetailsRow>\n        <DetailsProp>\n          <Text size={'small'}>Owner:</Text>\n        </DetailsProp>\n        <Box>\n          {ownerAddress ? <Address address={ownerAddress} /> : EmptyValue}\n        </Box>\n      </DetailsRow>\n      <DetailsRow>\n        <DetailsProp>\n          <Text size={'small'}>Contract Address:</Text>\n        </DetailsProp>\n        <Box>\n          {tokenAddress ? <Address address={tokenAddress} displayHash /> : EmptyValue}\n        </Box>\n      </DetailsRow>\n      <DetailsRow>\n        <DetailsProp>\n          <Text size={'small'}>Token ID:</Text>\n        </DetailsProp>\n        <Box>\n          {tokenID\n            ? <Box direction={'row'} align={'center'}>\n                <CopyBtn\n                  value={tokenID}\n                  showNotification={true}\n                />\n                <TextEllipsis size={'small'}>\n                  {tokenID}\n                </TextEllipsis>\n              </Box>\n            : EmptyValue}\n        </Box>\n      </DetailsRow>\n      <DetailsRow>\n        <DetailsProp>\n          <Text size={'small'}>Token Standard:</Text>\n        </DetailsProp>\n        <Box>\n          <Text size={'small'}>{tokenStandard}</Text>\n        </Box>\n      </DetailsRow>\n    </Box>\n    <Box pad={'16px'} border={{ side: 'bottom' }}>\n      <Text weight={'bold'}>Description</Text>\n    </Box>\n    <Box pad={'16px'}>\n      {asset.meta?.description\n        ? <MetaDescription\n          text={asset.meta?.description}\n          domainParseLinks={tokenAddress === config.oneCountryNFTContractAddress ? ZPTCountryTLD : ''}\n        />\n        : EmptyValue\n      }\n    </Box>\n    {meta.attributes &&\n      <Box border={{ side: 'top' }}>\n          <Box pad={'16px'} border={{ side: 'bottom' }}>\n              <Text weight={'bold'}>Attributes</Text>\n          </Box>\n          <Box pad={'0px 24px 16px'} wrap={true} direction={'row'}>\n            {Object.values(meta.attributes).map((attr: any, index: number) => {\n              const { trait_type, display_type } = attr\n\n              const value = display_type === 'date'\n                ? dayjs(+attr.value).format('MMM DD, YYYY')\n                : attr.value\n              const valueTitle = display_type === 'date'\n                ? dayjs(+attr.value).format('MMM DD, YYYY HH:mm:ss')\n                : attr.value\n\n              return <Attribute key={index} border={{ color: 'border' }} background={'backgroundDropdownItem'}>\n                <Text size={'small'} color={'brand'} weight={'bold'}>{trait_type}</Text>\n                <Text size={'small'} title={valueTitle}>{value}</Text>\n              </Attribute>\n            })}\n          </Box>\n      </Box>\n    }\n  </Box>\n}\n\nconst NFTInfo = (props: NFTInfoProps) => {\n  const { tokenAddressParam, tokenIDParam, tokenERC721, tokenERC1155, asset, isLoading } = props\n  const { meta, tokenID } = asset\n\n  const EmptyValue = isLoading ? '' : NotAvailable\n\n  const token = tokenERC721 || tokenERC1155 || {}\n  const nameValue = tokenID && token.name\n    ? `${token.name} ${meta?.name || ''}`\n    : EmptyValue;\n  const erc1155Image = tokenERC1155 && tokenERC1155.meta ? tokenERC1155.meta.image : ''\n\n  const linkedContract = linkedContractsMap[tokenAddressParam]\n  const linkTokenId = linkedContract && linkedContract.address === config.oneCountryNFTContractAddress\n    ? convertErc721TokenId(tokenIDParam)\n    : tokenIDParam\n\n  return <Box>\n    <Box>\n      <Box style={{ minHeight: '28px' }}>\n        <Text weight={'bold'} size={'large'}>{nameValue}</Text>\n      </Box>\n      <Box direction={'row'} align={'center'} gap={'12px'} margin={{ top: '4px' }}>\n        <ERC1155Icon imageUrl={erc1155Image} />\n        <AddressLink href={`/address/${token.address}`}>\n          <Text color={'brand'} size={'small'}>{token.name}</Text>\n        </AddressLink>\n        {linkedContract &&\n          <Box>\n            <AddressLink href={`/inventory/${linkedContract.type}/${linkedContract.address}/${linkTokenId}`}>\n                <Text color={'brand'} size={'medium'}>Show this NFT on {linkedContract.name} page</Text>\n            </AddressLink>\n          </Box>\n        }\n      </Box>\n      <Box margin={{ top: '24px' }}>\n        <NFTDetails {...props} />\n      </Box>\n    </Box>\n  </Box>\n}\n\nexport function InventoryDetailsPage() {\n  const erc721Map = useERC721Pool();\n  const erc1155Map = useERC1155Pool();\n\n  const [inventory, setInventory] = useState<IUserERC721Assets>({} as any);\n  const [isLoading, setIsLoading] = useState(false)\n\n  const {\n    address = '',\n    tokenID = '',\n    type = ''\n  }: { address: string, tokenID: string, type: string } = useParams();\n\n  const token721 = erc721Map[address]\n  const token1155 = erc1155Map[address]\n\n  useEffect(() => {\n    const loadData = async () => {\n      setIsLoading(true)\n      try {\n        if (type === \"erc721\" || type === \"erc1155\") {\n          let inventoryItem =\n            type === \"erc721\"\n              ? await getTokenERC721AssetDetails(address, tokenID)\n              : await getTokenERC1155AssetDetails(address, tokenID);\n          setInventory(inventoryItem || {});\n        }\n      } catch (e) {\n        console.error('Cannot load token data:', e)\n      } finally {\n        setIsLoading(false)\n      }\n    };\n    loadData();\n  }, [address]);\n\n  const metaImageUrl = inventory && inventory.meta && inventory.meta?.image ? inventory.meta?.image : ''\n  const fullImageUrl = metaImageUrl.includes('http') ? metaImageUrl : `${config.ipfsGateway}${metaImageUrl}`\n\n  return (\n    <>\n      <BasePage>\n        <Box direction={'row'} justify={'between'} wrap={true}>\n          <NFTContainer>\n            <NFTImage imageUrl={fullImageUrl} />\n          </NFTContainer>\n          <DetailsWrapper>\n            <NFTInfo\n              tokenAddressParam={address.toLowerCase()}\n              tokenIDParam={tokenID}\n              isLoading={isLoading}\n              tokenERC721={token721}\n              tokenERC1155={token1155}\n              asset={inventory}\n            />\n          </DetailsWrapper>\n        </Box>\n      </BasePage>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Box, Heading, Tab, Tabs, Text } from \"grommet\";\nimport { BasePage, BaseContainer } from \"src/components/ui\";\nimport { TransactionsTable } from \"../../components/tables/TransactionsTable\";\nimport { ApprovalDetails, Filter, RPCTransactionHarmony } from \"../../types\";\nimport { useHistory } from \"react-router-dom\";\nimport { getTransactions, getCount } from \"src/api/client\";\nimport { ShardDropdown } from \"src/components/ui/ShardDropdown\";\nimport { useParams } from \"react-router-dom\";\nimport { ToolsTab } from \"../AddressPage/tabs/tools\";\nimport { ApprovalsRenderer } from \"src/components/approvals/approvalsRenderer\";\nimport { HarmonyAddress } from \"src/utils\";\nimport { ApiCache } from \"src/api/ApiCache\";\nimport { getAllApprovalsForTokens } from \"src/api/rpc\";\nimport { revokePermission } from \"src/utils/approvals\";\nimport { Wallet } from \"../AddressPage/ContractDetails/ConnectWallets\";\nimport { ApprovalsHeader } from \"src/components/approvals/approvalsHeader\";\nimport { useERC1155Pool } from \"src/hooks/ERC1155_Pool\";\nimport { useERC721Pool } from \"src/hooks/ERC721_Pool\";\nimport { useERC20Pool } from \"src/hooks/ERC20_Pool\";\n\nconst ApprovalCache = new ApiCache({ key: \"approvalsCache\" }); // cache of approvals data mapped\n\n\nexport function ApprovalPage() {\n  const history = useHistory();\n\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [metamaskAddress, setMetamask] = useState(\"\");\n  const [chainId, setChainId] = useState(0);\n  const [data, setData] = useState<ApprovalDetails[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const erc1155Pool = useERC1155Pool();\n  const erc721Pool = useERC721Pool();\n  const erc20Pool = useERC20Pool();\n\n  const isMainNet =\n    process.env.REACT_APP_RPC_URL_SHARD0 === \"https://a.api.s0.t.hmny.io/\";\n\n  const validChainId = isMainNet\n    ? chainId === 1666600000\n    : (chainId === 1666700000 || chainId === 1666900000);\n\n  const loadTransactions = async ({ account = \"\" }) => {\n\n    if (account === \"\" || !validChainId) {\n      setIsLoading(false);\n      return;\n    }\n\n    const harmonyAddress = new HarmonyAddress(account);\n    const key = account;\n\n    let pageIndex = ApprovalCache.get(key + \"-index\") || 0;\n    const pageSize = 100;\n    let result: { txnHistory: ApprovalDetails[], dataObj: RPCTransactionHarmony[] } = { txnHistory: ApprovalCache.get(key + \"-txnHistory\") || [], dataObj: [] };\n    try {\n      do {\n        result = await getAllApprovalsForTokens(harmonyAddress.basicHex,\n          \"\",\n          pageIndex,\n          pageSize,\n          result.txnHistory,\n          erc20Pool,\n          erc1155Pool,\n          erc721Pool\n        );\n        // update the page index and the txn history on each refresh\n        if (result.dataObj.length > 0) {\n          ApprovalCache.set(key + \"-index\", pageIndex);\n          ApprovalCache.set(key + \"-txnHistory\", result.txnHistory);\n        }\n\n        pageIndex++;\n\n        setData((prev: ApprovalDetails[]) => {\n          return [...result.txnHistory];\n        });\n\n      } while (result.dataObj.length >= pageSize);\n    }\n    catch (error) {\n      // @ts-ignore\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }\n\n  const revokePermissions = async (tx:ApprovalDetails) => {\n    const account = tx.account;\n\n    setIsLoading((prev: boolean) => {\n      return true;\n    });\n    setError((prev: string | null) => {\n      return null;\n    }); // clear error\n    try {\n      await revokePermission(tx);\n    }\n    catch (error) {\n      // @ts-ignore\n      setError(error.message);\n      return;\n    }\n    setData((prev: ApprovalDetails[]) => {\n      return [];\n    }); // reset data\n\n    await loadTransactions({ account });\n  }\n\n  // test user 0x5c57fec3e02e5b64f8c3b47b39942ef682e51459\n  return (\n    <BaseContainer pad={{ horizontal: \"0\" }}>\n      <Heading size=\"small\" margin={{ bottom: \"medium\", top: \"0\" }}>\n      Zippy Token Approvals\n      </Heading>\n      <BasePage pad={\"small\"} style={{ overflow: \"inherit\" }}>\n        <Box direction=\"column\">\n          <ApprovalsHeader />\n          <Box margin={{ left: \"10px\", top: \"medium\" }}>\n            <Wallet onSetMetamask={(addr: string) => {\n              console.log(\"Address\", addr);\n              if (addr?.length > 0) {\n                setIsLoading(true);\n                loadTransactions({ account: addr });\n              }\n              setMetamask(addr);\n            }} onSetChainId={setChainId} />\n            {error && (\n              <Text color='red' size='small' style={{ marginTop: 5 }}>\n                {error}\n              </Text>\n            )}\n            {metamaskAddress?.length > 0 && <Box>\n              <Tabs\n                alignControls=\"start\"\n                justify=\"start\"\n                activeIndex={activeIndex}\n                onActive={(newActive) => {\n                  history.replace(\n                    `${history.location.pathname}?activeTab=${newActive}`\n                  );\n                  setActiveIndex(newActive);\n                }}\n              >\n\n                <Tab title={<Text size=\"small\">ZRC20</Text>}>\n                </Tab>\n\n                <Tab title={<Text size=\"small\">ZRC1155</Text>}>\n                </Tab>\n\n                <Tab title={<Text size=\"small\">ZRC721</Text>}>\n                </Tab>\n\n              </Tabs>\n              <Box margin={{top: \"small\"}}>\n                {\n                  activeIndex === 0 &&\n                  <ApprovalsRenderer data={data.filter(details => erc20Pool[details.assetAddress])} isLoading={isLoading} revokeClicked={revokePermissions} account={metamaskAddress} title=\"for all ZRC20\" />\n                }\n\n                {\n                  activeIndex === 1 &&\n                  <ApprovalsRenderer data={data.filter(details => erc1155Pool[details.assetAddress])} isLoading={isLoading} revokeClicked={revokePermissions} account={metamaskAddress} title=\"for all ZRC1155\" />\n                }\n\n                {\n                  activeIndex === 2 &&\n                  <ApprovalsRenderer data={data.filter(details => erc721Pool[details.assetAddress])} isLoading={isLoading} revokeClicked={revokePermissions} account={metamaskAddress} title=\"for all ZRC721\" />\n                }\n              </Box>\n            </Box>}\n          </Box>\n        </Box>\n      </BasePage>\n    </BaseContainer>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Box, Heading, Select, Spinner, Text, TextArea, TextInput, Tip } from \"grommet\";\nimport { Alert, StatusGood } from \"grommet-icons\";\nimport { BaseContainer, BasePage, TipContent } from \"../../../components/ui\";\nimport useQuery from \"../../../hooks/useQuery\";\nimport { getContractsByField } from \"../../../api/client\";\nimport styled from \"styled-components\";\nimport { AddressDetails } from \"../../../types\";\nimport { ABIManager, IABI } from \"src/web3/ABIManager\";\nimport ERC20ABI from 'src/web3/abi/ERC20ABI.json'\nimport ERC721ABI from 'src/web3/abi/ERC721ABI.json'\nimport ERC1155ABI from 'src/web3/abi/ERC1155ABI.json'\nimport {copyTextToClipboard, getAddress} from \"../../../utils\";\nimport { toaster } from \"../../../App\";\nimport { useHistory } from \"react-router-dom\";\n\nconst StyledTextArea = styled(TextArea)`\n  padding: 0.75rem;\n  border-radius: 0.35rem;\n  font-weight: normal;\n`;\n\nconst ErrorMessage = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: ${(props) => props.theme.global.colors.errorText};\n`\n\nconst EventsWrapper = styled(Box)`\n  flex-wrap: wrap;\n  row-gap: 16px;\n  column-gap: 16px;\n`\n\nconst EventContainer = styled.div<{ isMatched: boolean }>`\n  border-radius: 2px;\n  padding: 5px;\n  background: ${(props) => props.theme.global.colors.backgroundBack};\n\n  text-align: center;\n  font-weight: bold;\n  cursor: pointer;\n\n  ${(props) => !props.isMatched && `\n    color: ${props.theme.global.colors.minorText};\n    font-weight: normal;\n    text-decoration: line-through;\n  `};\n`\n\nenum ContractType {\n  'erc20' = 'ERC20',\n  'erc721' = 'ERC721',\n  'erc1155' = 'ERC1155'\n}\n\nconst methods = {\n  [ContractType.erc20]: [\n    'Transfer',\n    'Approval',\n    'totalSupply',\n    'decimals',\n    'transfer',\n    'balanceOf',\n    'symbol',\n    'name',\n    'approve',\n  ],\n  [ContractType.erc721]: [\n    'Transfer',\n    'Approval',\n    'totalSupply',\n    'ownerOf',\n    'tokenURI',\n    'transferFrom',\n    'safeTransferFrom',\n    'balanceOf',\n    'symbol',\n    'name',\n    'approve',\n  ],\n  [ContractType.erc1155]: [\n    'TransferSingle',\n    'TransferBatch',\n    // 'totalSupply',\n    'owner',\n    'tokenURIPrefix',\n    'balanceOfBatch',\n    'contractURI',\n  ]\n}\n\nconst erc20ABIManager = ABIManager(ERC20ABI as IABI)\nconst erc721ABIManager = ABIManager(ERC721ABI as IABI)\nconst erc1155ABIManager = ABIManager(ERC1155ABI as IABI)\n\nexport function CheckZRC() {\n  const query = useQuery();\n  const history = useHistory();\n  const queryAddress = query.get('address') || '';\n  const initialId = queryAddress\n\n  const [contractAddress, setContractAddress] = useState(initialId)\n  const [contractType, setContractType] = useState(ContractType.erc20)\n  const [matchedEvents, setMatchedEvents] = useState<string[]>([])\n  const [contractData, setContractData] = useState<AddressDetails | null>(null)\n  const [contractError, setContractError] = useState('')\n  const [isContractLoading, setContractLoading] = useState(false)\n\n  const getAbiManager = () => {\n    if (contractType === ContractType.erc20) {\n      return erc20ABIManager\n    } else if(contractType === ContractType.erc721) {\n      return erc721ABIManager\n    }\n    return erc1155ABIManager\n  }\n\n  const geMethodSignature = (name: string) => {\n    const abiManager = getAbiManager()\n    const entry = abiManager.getEntryByName(name)\n    if (entry) {\n      const { signatureWithout0x } = entry\n      return signatureWithout0x\n    }\n    return ''\n  }\n\n  const onEventClicked = (name: string) => {\n    const signature = geMethodSignature(name)\n    copyTextToClipboard(signature)\n    toaster.show({\n      message: () => (\n        <Box direction={\"row\"} align={\"center\"} pad={\"small\"}>\n          <StatusGood size={\"small\"} color={\"headerText\"} style={{ marginRight: '5px' }}/>\n          <Text size={\"small\"}>Signature copied to clipboard</Text>\n        </Box>\n      )\n    })\n  }\n\n  const onContractLoaded = (bytecode: string) => {\n    const matched = {\n      [ContractType.erc20]: erc20ABIManager.getMatchingSignatures(methods[ContractType.erc20], bytecode),\n      [ContractType.erc721]: erc721ABIManager.getMatchingSignatures(methods[ContractType.erc721], bytecode),\n      [ContractType.erc1155]: erc1155ABIManager.getMatchingSignatures(methods[ContractType.erc1155], bytecode),\n    }\n\n    let type = ContractType.erc20\n    if (matched[ContractType.erc721].length === methods[ContractType.erc721].length) {\n      type = ContractType.erc721\n    } else if (matched[ContractType.erc1155].length === methods[ContractType.erc1155].length) {\n      type = ContractType.erc1155\n    }\n\n    setContractType(type)\n    setMatchedEvents(matched[type])\n  }\n\n  useEffect(() => {\n    const getContract = async () => {\n      setContractLoading(true)\n      try {\n        let contract: any = await getContractsByField([0, \"address\", prepareAddress(contractAddress)]);\n        setContractData(contract)\n        onContractLoaded(contract.bytecode)\n      } catch (e) {\n        const message = e && (e as Error).message ? (e as Error).message : 'Unknown error'\n        console.error('Cannot get contract by id:', contractAddress, e)\n        setContractError(message)\n      } finally {\n        setContractLoading(false)\n      }\n    }\n    setContractData(null)\n    setContractError('')\n    setMatchedEvents([])\n    if (contractAddress) {\n      history.push({\n        pathname: \"/tools/checkHrc\",\n        search: `?address=${contractAddress}`\n      });\n      getContract()\n    } else {\n\n    }\n  }, [contractAddress])\n\n  const prepareAddress = (address: string) => {\n    let a = address.toLowerCase()\n    if(address.startsWith('one1')) { // convert one1 to 0x before send request to backend\n      try {\n        a = getAddress(address).basicHex\n      } catch (e) {}\n    }\n    return a\n  }\n\n  const isAllEventsMatched = matchedEvents.length === methods[contractType].length\n\n  return (\n    <BaseContainer pad={{ horizontal: \"0\" }}>\n      <Heading size=\"small\" margin={{ bottom: \"medium\", top: \"0\" }}>\n        Check ZRC\n      </Heading>\n      <BasePage pad={\"small\"} style={{ overflow: \"inherit\" }}>\n        <Box>\n          <Box direction=\"row\" justify={'start'} wrap pad={'16px'} gap={'16px'}>\n            <Box margin={'0'}>\n              <Text>Contract Address</Text>\n              <Box direction=\"row\">\n                <Box width={'550px'}>\n                  <TextInput\n                    placeholder={\"ZPT contract address\"}\n                    onChange={(evt: React.ChangeEvent<HTMLInputElement>) => {\n                      setContractAddress(evt.currentTarget.value)\n                    }}\n                    value={contractAddress}\n                    disabled={false}\n                  />\n                </Box>\n              </Box>\n            </Box>\n            <Box>\n              <Text>Contract type</Text>\n              <Select\n                options={[ContractType.erc20, ContractType.erc721, ContractType.erc1155]}\n                value={contractType}\n                onChange={({ option }) => setContractType(option)\n                }\n                disabled={isContractLoading}\n              />\n            </Box>\n            {isContractLoading &&\n              <Box justify=\"center\" align=\"center\" margin={'24px 0 0 24px'}>\n                <Spinner />\n              </Box>\n            }\n            {(!isContractLoading && contractAddress) &&\n              <Box justify=\"center\" align=\"center\" margin={'24px 0 0 24px'}>\n                {isAllEventsMatched\n                  ? <Tip\n                    dropProps={{ align: { bottom: \"top\" }}}\n                    content={<TipContent showArrow={true} message={'All events found'} />}\n                  >\n                    <StatusGood size=\"medium\" color={'successText'} />\n                </Tip>\n                  : <Tip\n                    dropProps={{ align: { bottom: \"top\" }}}\n                    content={<TipContent showArrow={true} message={'Some events missing'} />}\n                  >\n                    <Alert size=\"medium\" color={'minorText'} />\n                  </Tip>}\n              </Box>\n            }\n        </Box>\n          {!isContractLoading && contractError &&\n            <Box margin={'0'} pad={'0 0 0 16px'}>\n              <ErrorMessage style={{ width: '500px' }}>{contractError}</ErrorMessage>\n            </Box>\n          }\n        </Box>\n        {contractAddress &&\n          <Box direction=\"column\" justify=\"between\" wrap pad={'16px'}>\n            <Box>\n              Required events:\n            </Box>\n            <EventsWrapper direction={'row'}>\n              {methods[contractType].map((name) => {\n                const isMatched = !!matchedEvents.find(matchedName => matchedName === name)\n                const signature = geMethodSignature(name)\n                return <Tip content={<TipContent message={`Signature: ${signature}`} />}>\n                  <EventContainer onClick={() => onEventClicked(name)} isMatched={isMatched}>\n                    {name}\n                  </EventContainer>\n                </Tip>\n              })}\n            </EventsWrapper>\n          </Box>\n        }\n        <Box direction=\"column\" justify=\"between\" wrap pad={'16px'}>\n          <StyledTextArea\n            readOnly={true}\n            rows={7}\n            cols={100}\n            value={contractData ? contractData.bytecode : \"\"} placeholder={'Bytecode'}\n          />\n        </Box>\n      </BasePage>\n    </BaseContainer>\n  )\n}\n","import {palette} from \"../../theme\";\nimport dayjs from \"dayjs\";\nimport dayOfYear from \"dayjs/plugin/dayOfYear\";\nimport {MetricsDailyItem} from \"../../types\";\nimport {ChartOption} from \"./ChartFilter\";\n\ndayjs.extend(dayOfYear)\n\nexport const getChartData = (themeMode: string, items: MetricsDailyItem[], label: string) => {\n    return {\n        labels: items.map((i) => dayjs(i.date).format(\"dddd, MMMM DD YYYY\")),\n        datasets: [{\n            label,\n            data: items.map((i) => +i.value),\n            borderColor: themeMode === 'light' ? palette.Purple : palette.MintGreen,\n            borderWidth: 2,\n            backgroundColor: 'white',\n            pointRadius: 0,\n            pointHoverRadius: 8,\n            pointBorderWidth: 0,\n            pointBorderColor: 'transparent',\n            pointHoverBackgroundColor: themeMode === 'light' ? 'rgba(85, 98, 109, 0.4)' : 'rgba(105, 250, 189, 0.4)',\n        }]\n    }\n}\n\nexport interface OptionsConfig {\n    isMobile?: boolean\n    yAxisLabel?: string\n}\n\nexport const getDetailedChartOptions = (themeMode: 'light' | 'dark', points: any, config: OptionsConfig = {}) => {\n    const { yAxisLabel } = config\n\n    const [minPoint] = [...points]\n        .sort((a: { value: string; }, b: { value: string; }) => +a.value - +b.value)\n    let minY = minPoint ? minPoint.value : 0\n    const minPointLog = Math.floor(Math.log10(minY))\n    minY = minY - (minY % Math.pow(10, minPointLog))\n\n    const ticksColor = themeMode === 'light' ? palette.DarkGray : palette.WhiteGrey\n    const tooltipColor = themeMode === 'light' ? '#3f4850' : palette.WhiteGrey\n    const tooltipBorderColor = themeMode === 'light' ? '#3f4850' : palette.DarkBlue\n    const tooltipBackground = themeMode === 'light' ? 'rgba(244, 247, 249, 0.85)' : 'rgba(27, 41, 94, 0.95)'\n\n    return {\n        responsive: true,\n        maintainAspectRatio: false, // To properly adjust height on page resize\n        animation: false,\n        animations: {\n            colors: false,\n            x: false,\n        },\n        tooltips: {\n            mode: 'index',\n            intersect: false\n        },\n        hover: {\n            intersect: false\n        },\n        plugins: {\n            legend: {\n                display: false,\n            },\n            title: {\n                display: false,\n            },\n            // https://www.chartjs.org/docs/latest/configuration/tooltip.html\n            tooltip: {\n                intersect: false,\n                displayColors: false, // Removes colored square icon\n                caretPadding: 8,\n                caretSize: 8,\n                cornerRadius: 4,\n                titleSpacing: 4,\n                titleFont: { weight: 400, size: 10 },\n                bodyFont: { weight: 'bold' },\n                backgroundColor: tooltipBackground,\n                borderColor: tooltipBorderColor,\n                borderWidth: 1,\n                titleColor: tooltipColor,\n                bodyColor: tooltipColor\n            }\n        },\n        scales: {\n            x: {\n                grid: {\n                    display: false,\n                    drawBorder: true,\n                },\n                ticks: {\n                    color: ticksColor,\n                    maxTicksLimit: 2000,\n                    maxRotation: 0,\n                    minRotation: 0,\n                    align: 'end',\n                    callback: function(value: string, index: any, ticks: any) {\n                        const item = points[index]\n                        const nextItem = points[index + 1]\n                        if(nextItem) {\n                            // Show January and July\n                            if (dayjs(item.timestamp).month() !== dayjs(nextItem.timestamp).month() &&\n                                ([6, 0].includes(dayjs(nextItem.timestamp).month()))) {\n                                return dayjs(nextItem.timestamp).format(\"MMM 'YY\")\n                            }\n\n                            // too many labels for mobile screen\n                            if(!config.isMobile) {\n                                // show each month\n                                if(ticks.length <= 365) {\n                                    if (dayjs(item.timestamp).month() !== dayjs(nextItem.timestamp).month()) {\n                                        return dayjs(nextItem.timestamp).format(\"MMM 'YY\")\n                                    }\n                                }\n                            }\n                            if(ticks.length <= 30) {\n                                // show each day\n                                if (dayjs(item.timestamp).day() !== dayjs(nextItem.timestamp).day() &&\n                                    [1].includes(dayjs(item.timestamp).day())) {\n                                    return dayjs(nextItem.timestamp).format(\"D MMM\")\n                                }\n                            }\n                        }\n                        return '';\n                    }\n                },\n            },\n            y: {\n                min: minY,\n                title: {\n                    display: !!yAxisLabel,\n                    text: yAxisLabel\n                },\n                grid: {\n                    display: true,\n                    drawBorder: true,\n                },\n                ticks: {\n                    color: ticksColor,\n                    callback: function(value: string, index: any, ticks: any) {\n                        if (index === 0 || index === ticks.length - 1 || index === Math.round(ticks.length / 2 - 1)) {\n                            return Intl.NumberFormat('en-US', {\n                                notation: \"compact\",\n                                maximumFractionDigits: 4\n                            }).format(+value);\n                        }\n                        return '';\n                    }\n                }\n            }\n        },\n        tension: 0.4, // Curve line\n        borderWidth: 1,\n    };\n}\n\nexport const enrichResponse = (items: MetricsDailyItem[]) => {\n    return items.reverse().map(item => ({\n        ...item,\n        timestamp: item.date\n    }))\n}\n\nconst downloadBlob = (content: any, filename: string) => {\n    const blob = new Blob([content], { type: 'text/csv;charset=utf-8;' });\n    const url = URL.createObjectURL(blob);\n\n    // Create a link to download it\n    const pom = document.createElement('a');\n    pom.href = url;\n    pom.setAttribute('download', filename);\n    pom.click();\n}\n\nexport const downloadMetricsCSV = (filename: string, params: { items: MetricsDailyItem[] }) => {\n    const { items } = params\n\n    const mappedTxs = items.map(item => ({ date: item.date, value: item.value }))\n    const header = mappedTxs.filter((_, index) => index === 0)\n        .map(item => Object.keys(item))\n    const body = mappedTxs\n        .map((item) => Object.values(item))\n\n    const csv = [...header, ...body]\n        .map(row =>\n            row\n                .map(String)  // convert every value to String\n                .map((v: any) => v.replaceAll('\"', '\"\"'))  // escape double colons\n                // .map((v: any) => `\"${v}\"`)  // quote it\n                .join(', ')  // comma-separated\n        ).join('\\r\\n');  // rows starting on new lines\n\n    downloadBlob(csv, filename)\n}\n","import React, {useState} from 'react'\nimport {Box} from \"grommet\";\n\nexport enum ChartOption {\n    month = 'month',\n    month3 = 'month3',\n    year = 'year',\n    ytd = 'ytd',\n    all = 'all'\n}\n\nconst OptionAlias = {\n    [ChartOption.month]: '1M',\n    [ChartOption.month3]: '3M',\n    [ChartOption.year]: '1Y',\n    [ChartOption.ytd]: 'YTD',\n    [ChartOption.all]: 'ALL',\n}\n\nexport const ChartOptions = Object.values(ChartOption)\n\nconst Option = (props: { value: ChartOption, isActive: boolean, onSelect: (value: ChartOption) => void }) => {\n    const {value, isActive, onSelect} = props\n\n    return <Box\n        round={'8px'}\n        pad={'4px'}\n        width={'48px'}\n        background={isActive ? 'background' : 'unset'}\n        align={'center'}\n        onClick={() => onSelect(value)}\n        style={{ cursor: 'pointer', fontWeight: isActive ? 'bold': 'normal' }}\n    >\n        {OptionAlias[value]}\n    </Box>\n}\n\nexport interface ChartFilterProps {\n    activeOption: ChartOption\n    onSelect: (option: ChartOption) => void\n    disabled?: boolean\n}\n\nexport const ChartFilter = (props: ChartFilterProps) => {\n    const { activeOption, disabled, onSelect } = props\n\n    return <Box\n        pad={'4px'}\n        direction={'row'}\n        gap={'8px'}\n        round={'8px'}\n        background={'backgroundBack'}\n        border={{ size: '1px' }}\n    >\n        {ChartOptions.map(option => <Option\n            key={option}\n            value={option}\n            isActive={activeOption === option}\n            onSelect={(option) => !disabled ? onSelect(option) : undefined}\n        />)}\n    </Box>\n}\n","import React, {useEffect, useState} from 'react'\nimport {Box, Heading, Spinner, Text} from \"grommet\";\nimport {BaseContainer, BasePage} from \"../../components/ui\";\nimport {useThemeMode} from \"../../hooks/themeSwitcherHook\";\nimport {Line as LineChartJs} from \"react-chartjs-2\";\nimport {MetricsDailyItem} from \"../../types\";\nimport {\n    getDetailedChartOptions,\n    getChartData,\n    downloadMetricsCSV\n} from './utils'\nimport {ChartFilter, ChartOption} from \"./ChartFilter\";\nimport styled from \"styled-components\";\nimport dayjs from \"dayjs\";\nimport {Alert, Info} from \"grommet-icons\";\nimport {Link} from \"react-router-dom\";\nimport {useMediaQuery} from \"react-responsive\";\n\nconst ChartModalContainer = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`\n\nconst TextLink = styled(Text)`\n  cursor: pointer;\n  text-decoration: underline;\n`\n\nconst LoadingErrorModal = () => {\n    return <ChartModalContainer\n        justify={'center'}\n        gap={'16px'}\n        pad={'16px'}\n        align={'center'}\n        background={'warningBackground'}\n        round={'8px'}\n        border={{ size: '1px' }}\n        style={{ zIndex: 1 }}\n    >\n        <Alert size={'medium'} />\n        <Text>Error on loading data</Text>\n        <Text size={'small'}>Please try again later</Text>\n    </ChartModalContainer>\n}\n\nconst formatValue = (value: string) => Intl.NumberFormat('en-US').format(+value)\nconst formatDate = (date: string) => date ? dayjs(date).format('dddd, MMMM D, YYYY') : '—'\n\nexport interface DailyChartPageProps {\n    title: string\n    description?: string\n    unitLabel: string\n    items: MetricsDailyItem[]\n    isLoading: boolean\n    loadingError?: string\n    chart: {\n        yAxisLabel: string,\n        tooltipLabel: string\n    }\n    renderMaxValue: (value: string, date: string) => string\n    renderMinValue: (value: string, date: string) => string\n}\n\nconst chartItemFilter = (item: MetricsDailyItem, option: ChartOption) => {\n    const date = dayjs(item.date)\n    const current = dayjs()\n    switch(option) {\n        case ChartOption.month: return current.diff(date, 'month') < 1\n        case ChartOption.month3: return current.diff(date, 'month') < 3\n        case ChartOption.year: return current.diff(date, 'month') <= 12\n        case ChartOption.ytd: return current.year() === date.year()\n        default:\n            return true\n    }\n}\n\nexport const DailyChartPage = (props: DailyChartPageProps) => {\n    const themeMode = useThemeMode();\n\n    const { isLoading, loadingError } = props\n\n    const [items, setItems] = useState<MetricsDailyItem[]>([]);\n    const [cache, setCache] = useState<MetricsDailyItem[]>([])\n    const [filterOption, setFilterOption] = useState(ChartOption.year)\n    const [minValue, setMinValue] = useState<MetricsDailyItem>({value: '0', date: ''})\n    const [maxValue, setMaxValue] = useState<MetricsDailyItem>({value: '0', date: ''})\n\n    const applyFilter = (cachedData: MetricsDailyItem[]) => {\n        const data = cachedData.filter((item) => chartItemFilter(item, filterOption))\n        const sortedData = [...data].sort((a, b) => +a.value - +b.value)\n        setItems(data)\n        setMinValue(sortedData[0])\n        setMaxValue(sortedData[sortedData.length - 1])\n    }\n\n    useEffect(() => {\n        if(cache.length > 0) {\n            applyFilter(cache)\n        }\n    }, [filterOption])\n\n    useEffect(() => {\n        setCache(props.items)\n        if(props.items.length > 0) {\n            applyFilter(props.items)\n        }\n    }, [props.items])\n\n    const isMobile = useMediaQuery({ query: '(max-width: 868px)' })\n    const chartOptions = getDetailedChartOptions(themeMode, items, { isMobile, yAxisLabel: props.chart.yAxisLabel })\n    const chartData = getChartData(themeMode, items, props.chart.tooltipLabel)\n\n    return <BaseContainer pad={{ horizontal: \"0\" }}>\n        <Heading size=\"20px\" margin={{ bottom: \"medium\", top: \"0\" }} style={{ maxWidth: 'unset' }}>\n            <Box direction={'row'} justify={'between'} align={'center'}>\n                <Box direction={\"row\"} gap={'8px'} align={'center'}>\n                    <Box>\n                        <Link to={'/charts'}><TextLink color={'brand'}>Charts</TextLink></Link>\n                    </Box>\n                    <Box>\n                        <Text style={{ opacity: 0.4 }}>/</Text>\n                    </Box>\n                    <Box>\n                        {props.title}\n                    </Box>\n                </Box>\n                {!isMobile && props.description &&\n                    <Box align={'end'}>\n                        <Text size={'xsmall'} weight={'normal'}>{props.description}</Text>\n                    </Box>\n                }\n            </Box>\n        </Heading>\n        <BasePage pad={\"small\"}>\n            <Box direction={'row'} justify={'between'} flex={'grow'} wrap={true}>\n                <Box direction={'row'} gap={'8px'} justify={'center'} align={'center'} style={{ flexGrow: 2 }}>\n                    <Info size={'small'} />\n                    <Text size={'small'}>\n                        {props.renderMaxValue(formatValue(maxValue.value), formatDate(maxValue.date))}\n                    </Text>\n                </Box>\n                <Box direction={'row'} gap={'8px'} justify={'center'} align={'center'} style={{ flexGrow: 2 }}>\n                    <Info size={'small'} />\n                    <Text size={'small'}>\n                        {props.renderMinValue(formatValue(minValue.value), formatDate(minValue.date))}\n                    </Text>\n                </Box>\n            </Box>\n        </BasePage>\n        <BasePage pad={\"small\"} style={{overflow: 'inherit', marginTop: '16px'}}>\n            <Box align={'end'}>\n                <ChartFilter\n                    disabled={isLoading || !!loadingError}\n                    activeOption={filterOption}\n                    onSelect={(o) => setFilterOption(o)}\n                />\n            </Box>\n            <Box\n                width={'100%'}\n                height=\"260px\"\n                direction={\"row\"}\n                align={'center'}\n                justify={'center'}\n                margin={{ top: '8px' }}\n                style={{ position: 'relative', pointerEvents: isLoading || loadingError ? 'none': 'unset' }}\n            >\n                {isLoading && <ChartModalContainer justify={'center'} gap={'16px'} align={'center'}>\n                    <Spinner size={'medium'} />\n                    <Text>Loading Data</Text>\n                </ChartModalContainer>}\n                {!isLoading && loadingError && <LoadingErrorModal />}\n                <Box\n                    height={'inherit'}\n                    width={'inherit'}\n                    style={{ filter: isLoading || loadingError ? 'blur(4px)': 'unset' }}\n                >\n                    {\n                        // @ts-ignore\n                        <LineChartJs options={chartOptions} data={chartData} />\n                    }\n                </Box>\n            </Box>\n            <Box margin={{ top: '32px' }} align={'end'}>\n                <Box direction={'row'} gap={'4px'}>\n                    <Text size={'small'}>Download</Text>\n                    <TextLink\n                        color={'brand'}\n                        size={'small'}\n                        onClick={() => downloadMetricsCSV(`${props.unitLabel}_metrics.csv`, { items: [...cache].reverse() })}>\n                        CSV Data\n                    </TextLink>\n                </Box>\n            </Box>\n        </BasePage>\n    </BaseContainer>\n}\n","import React, {useEffect, useState} from 'react'\nimport {getMetricsByType} from \"../../api/client\";\nimport {MetricsDailyItem, MetricsType} from \"../../types\";\nimport {\n    enrichResponse,\n} from './utils'\nimport {DailyChartPage} from \"./DailyChartPage\";\n\nexport const ActiveAddresses = () => {\n    const [items, setItems] = useState<MetricsDailyItem[]>([]);\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const [loadingError, setLoadingError] = useState('')\n\n    useEffect(() => {\n        const loadData = async () => {\n            try {\n                setIsLoading(true)\n                const data = await getMetricsByType(MetricsType.walletsCount, 0, 2000)\n                setItems(enrichResponse(data))\n            } catch (e) {\n                console.error('Error on loading metrics:', e)\n                setLoadingError('Loading error')\n            } finally {\n                setIsLoading(false);\n            }\n        }\n        loadData()\n    }, [])\n\n    const dailyPageProps = {\n        title: 'Zippy Daily Active Addresses',\n        description: 'The Active Address chart shows the daily number of unique addresses that were active on the network as a sender or receiver',\n        unitLabel: 'addresses',\n        items,\n        isLoading,\n        loadingError,\n        chart: {\n            yAxisLabel: 'Active Zippy Addresses',\n            tooltipLabel: 'Active Zippy Addresses'\n        },\n        renderMaxValue: (value: string, date: string) => {\n            return `Highest number of ${value} addresses on ${date}`\n        },\n        renderMinValue: (value: string, date: string) => {\n            return `Lowest number of ${value} addresses on ${date}`\n        }\n    }\n\n    return <DailyChartPage {...dailyPageProps} />\n}\n","import React, {useEffect, useState} from 'react'\nimport {getMetricsByType} from \"../../api/client\";\nimport {MetricsDailyItem, MetricsType} from \"../../types\";\nimport {\n    enrichResponse,\n} from './utils'\nimport {DailyChartPage} from \"./DailyChartPage\";\n\nexport const DailyTransactions = () => {\n    const [items, setItems] = useState<MetricsDailyItem[]>([]);\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const [loadingError, setLoadingError] = useState('')\n\n    useEffect(() => {\n        const loadData = async () => {\n            try {\n                setIsLoading(true)\n                const data = await getMetricsByType(MetricsType.transactionsCount, 0, 2000)\n                setItems(enrichResponse(data))\n            } catch (e) {\n                console.error('Error on loading metrics:', e)\n                setLoadingError('Loading error')\n            } finally {\n                setIsLoading(false);\n            }\n        }\n        loadData()\n    }, [])\n\n    const dailyPageProps = {\n        title: 'Zippy Daily Transactions',\n        unitLabel: 'transactions',\n        items,\n        isLoading,\n        loadingError,\n        chart: {\n            yAxisLabel: 'Transactions per day',\n            tooltipLabel: 'Daily transactions'\n        },\n        renderMaxValue: (value: string, date: string) => {\n            return `Highest number of ${value} transactions on ${date}`\n        },\n        renderMinValue: (value: string, date: string) => {\n            return `Lowest number of ${value} transactions on ${date}`\n        }\n    }\n\n    return <DailyChartPage {...dailyPageProps} />\n}\n","import React, {useEffect, useState} from 'react'\nimport {getMetricsByType} from \"../../api/client\";\nimport {MetricsDailyItem, MetricsType} from \"../../types\";\nimport {\n    enrichResponse,\n} from './utils'\nimport {DailyChartPage} from \"./DailyChartPage\";\n\nexport const AverageFee = () => {\n    const [items, setItems] = useState<MetricsDailyItem[]>([]);\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const [loadingError, setLoadingError] = useState('')\n\n    useEffect(() => {\n        const loadData = async () => {\n            try {\n                setIsLoading(true)\n                const data = await getMetricsByType(MetricsType.averageFee, 0, 2000)\n                setItems(enrichResponse(data))\n            } catch (e) {\n                console.error('Error on loading metrics:', e)\n                setLoadingError('Loading error')\n            } finally {\n                setIsLoading(false);\n            }\n        }\n        loadData()\n    }, [])\n\n    const dailyPageProps = {\n        title: 'Zippy Daily Average Fee',\n        unitLabel: 'fee',\n        items,\n        isLoading,\n        loadingError,\n        chart: {\n            yAxisLabel: 'Average Transaction Fee (ZPT)',\n            tooltipLabel: 'Average tx fee (ZPT)'\n        },\n        renderMaxValue: (value: string, date: string) => {\n            return `Highest average transaction fee of ${value} ZPT on ${date}`\n        },\n        renderMinValue: (value: string, date: string) => {\n            return `Lowest average transaction fee of ${value} ZPT on ${date}`\n        }\n    }\n\n    return <DailyChartPage {...dailyPageProps} />\n}\n","import React, {useEffect, useState} from 'react'\nimport {getMetricsByType} from \"../../api/client\";\nimport {MetricsDailyItem, MetricsType} from \"../../types\";\nimport {\n    enrichResponse,\n} from './utils'\nimport {DailyChartPage} from \"./DailyChartPage\";\n\nexport const AverageBlockSize = () => {\n    const [items, setItems] = useState<MetricsDailyItem[]>([]);\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const [loadingError, setLoadingError] = useState('')\n\n    useEffect(() => {\n        const loadData = async () => {\n            try {\n                setIsLoading(true)\n                const data = await getMetricsByType(MetricsType.blockSize, 0, 2000)\n                setItems(enrichResponse(data))\n            } catch (e) {\n                console.error('Error on loading metrics:', e)\n                setLoadingError('Loading error')\n            } finally {\n                setIsLoading(false);\n            }\n        }\n        loadData()\n    }, [])\n\n    const dailyPageProps = {\n        title: 'Zippy Average Block Size',\n        unitLabel: 'blocksize',\n        items,\n        isLoading,\n        loadingError,\n        chart: {\n            yAxisLabel: 'Block Size in Bytes',\n            tooltipLabel: 'Block Size (Bytes)'\n        },\n        renderMaxValue: (value: string, date: string) => {\n            return `Largest size of ${value} bytes on ${date}`\n        },\n        renderMinValue: (value: string, date: string) => {\n            return `Smallest size of ${value} bytes on ${date}`\n        }\n    }\n\n    return <DailyChartPage {...dailyPageProps} />\n}\n","import {Box, Heading, Spinner, Text} from \"grommet\";\nimport {BaseContainer, BasePage} from \"../../components/ui\";\nimport styled from \"styled-components\";\nimport {Link} from \"react-router-dom\";\nimport {useMediaQuery} from \"react-responsive\";\nimport { Alert, Info } from 'grommet-icons';\n\nconst TextLink = styled(Text)`\n  cursor: pointer;\n  text-decoration: underline;\n`\n\nconst ChartModalContainer = styled(Box)`\n`\n\nconst LoadingErrorModal = () => {\n    return <ChartModalContainer\n        justify={'center'}\n        gap={'16px'}\n        pad={'16px'}\n        align={'center'}\n        background={'warningBackground'}\n        round={'8px'}\n        border={{ size: '1px' }}\n        style={{ zIndex: 1 }}\n    >\n        <Alert size={'medium'} />\n        <Text>Error on loading data</Text>\n        <Text size={'small'}>Please try again later</Text>\n    </ChartModalContainer>\n}\n\nconst parseKeyValue = (key : string) => {\n    return key.replace(/([A-Z])/g, ' $1').trim().split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n}\n\nexport interface StatProps {\n    title: string\n    description?: string\n    items: any[]\n    keys: string[]\n    infoLeft: string\n    infoRight?: string\n    isLoading: boolean\n    loadingError?: string\n}\n\nexport const StatPage = (props: StatProps) => {\n    const { isLoading, loadingError } = props\n\n    const rows = []\n    for (let i = 0; i < props.items.length; i++) {\n        rows.push(\n            <Box \n                key={String(i)} \n                width={{width: '40%'}} \n                margin={{bottom: '8px'}} \n                border={{ size: '1px' }} \n                round={'8px'} \n                overflow={'hidden'}\n            >\n                <Box align='center' pad={'8px'} background={'backgroundDropdownItem'} >\n                    <Text color={'brand'}>Shard {i}</Text>\n                </Box>\n                <Box align='center' pad={'8px'}>\n                    {props.keys.map((key, _) => {\n                        return <Text>{parseKeyValue(key)}: {props.items[i][key]}</Text>\n                    })}\n                </Box>\n            </Box>\n        )\n    }\n\n    const isMobile = useMediaQuery({ query: '(max-width: 868px)' })\n\n    return <BaseContainer pad={{ horizontal: \"0\" }}>\n        <Heading size=\"20px\" margin={{ bottom: \"medium\", top: \"0\" }} style={{ maxWidth: 'unset' }}>\n            <Box direction={'row'} justify={'between'} align={'center'}>\n                <Box direction={\"row\"} gap={'8px'} align={'center'}>\n                    <Box>\n                        <Link to={'/charts'}><TextLink color={'brand'}>Charts</TextLink></Link>\n                    </Box>\n                    <Box>\n                        <Text style={{ opacity: 0.4 }}>/</Text>\n                    </Box>\n                    <Box>\n                        {props.title}\n                    </Box>\n                </Box>\n                {!isMobile && props.description &&\n                    <Box align={'end'}>\n                        <Text size={'xsmall'} weight={'normal'}>{props.description}</Text>\n                    </Box>\n                }\n            </Box>\n        </Heading>\n        <BasePage pad={\"small\"}>\n            <Box direction={'row'} justify={'between'} flex={'grow'} wrap={true}>\n                <Box direction={'row'} gap={'8px'} justify={'center'} align={'center'} style={{ flexGrow: 2 }}>\n                    <Info size={'small'} />\n                    <Text size={'small'}> {props.infoLeft} </Text>\n                </Box>\n               {props.infoRight && <Box direction={'row'} gap={'8px'} justify={'center'} align={'center'} style={{ flexGrow: 2 }}>\n                    <Info size={'small'} />\n                    <Text size={'small'}> {props.infoRight} </Text>\n                </Box>}\n            </Box>\n        </BasePage>\n        <BasePage pad={\"small\"} style={{overflow: 'inherit', marginTop: '16px'}}>\n            <Box\n                width={'100%'}\n                height='280px' \n                direction={'row'} \n                justify={'evenly'} \n                align={'center'} \n                wrap={true}\n            >\n                {isLoading && <ChartModalContainer justify={'center'} gap={'16px'} align={'center'}>\n                    <Spinner size={'medium'} />\n                    <Text>Loading Data</Text>\n                </ChartModalContainer>}\n                {!isLoading && loadingError && <LoadingErrorModal />}\n                {!isLoading && !loadingError && rows}\n            </Box>\n        </BasePage>\n    </BaseContainer>\n}\n","import {useEffect, useState} from 'react'\nimport { StatPage } from './StatPage';\nimport { hmyv2_getNodeMetadata } from 'src/api/rpc';\nimport { config } from 'src/config';\n\nconst CONSENSUS = \"consensus\"\nconst BLOCK_NUM = \"blocknum\"\nconst VIEW_ID = \"viewId\"\n\nexport const ViewChangeStats = () => {\n    const { availableShards } = config\n    const [items, setItems] = useState<any[]>([])\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const [loadingError, setLoadingError] = useState('')\n    const [totalViewChange, setTotalViewChange] = useState(0)\n\n    useEffect(() => {\n        const loadData = async () => {\n            try {\n                setIsLoading(true) \n                for (let i in availableShards) {\n                    const nodeMetadata = await hmyv2_getNodeMetadata(i)\n                    const blockHeight = nodeMetadata[CONSENSUS][BLOCK_NUM]\n                    const viewId = nodeMetadata[CONSENSUS][VIEW_ID]\n                    const viewChange = viewId - blockHeight\n                    setItems(items => [...items, {\n                        viewChange: viewChange,\n                        viewId: viewId,\n                        blockHeight: blockHeight,\n                    }])\n                    setTotalViewChange(totalViewChange => totalViewChange + viewChange)\n                }             \n            } catch (e) {\n                console.error('Error on loading metrics:', e)\n                setLoadingError('Loading error')\n            } finally {\n                setIsLoading(false)\n            }\n        }\n        loadData()\n    }, [])\n\n    const viewChangeProps = {\n        title: 'Zippy View Change Statistics',\n        description: '',\n        items: items,\n        keys: ['viewChange', 'viewId', 'blockHeight'],\n        isLoading,\n        loadingError,\n        infoLeft: `Total of ${totalViewChange} view changes across ${availableShards.length} shards`,\n        infoRight: 'Data is obtained from the explorer node, which may result in a slight delay'\n    }\n\n    return <StatPage {...viewChangeProps} />\n}\n","import React from \"react\";\nimport {Box, Heading, Text} from \"grommet\";\nimport { BasePage, BaseContainer } from \"src/components/ui\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport {ActiveAddresses} from \"./ActiveAddresses\";\nimport {DailyTransactions} from \"./DailyTransactions\";\nimport {AverageFee} from \"./AverageFee\";\nimport {AverageBlockSize} from \"./AverageBlockSize\";\nimport styled from \"styled-components\";\nimport {useThemeMode} from \"../../hooks/themeSwitcherHook\";\nimport { ViewChangeStats } from \"./ViewChangeStats\";\n\nenum ChartType {\n    tx = 'tx',\n    addresses = 'addresses',\n    fee = 'fee',\n    blockSize = 'blocksize',\n    viewChange = 'viewchange'\n}\n\nconst PreviewContainer = styled(Box)`\n  flex: 0 0 calc(25% - 16px);\n  margin-left: 8px;\n  margin-right: 8px;\n\n  @media (max-width: 1024px) {\n    flex: 0 0 calc(50% - 16px);\n    margin-bottom: 0.75rem;\n  }\n\n  @media (max-width: 768px) {\n    flex: 0 0 calc(100% - 16px);\n    margin-top: 0.75rem;\n    margin-bottom: 0.75rem;\n  }\n`\n\nconst PreviewCard = (props: { type: ChartType, title: string }) => {\n    const themeMode = useThemeMode();\n    const {type, title} = props\n    const history = useHistory();\n\n    const onClick = () => history.push(`charts/${type}`)\n    const imgProps = {\n        alt: type\n    }\n    const previewImgPostfix = themeMode === 'dark' ? '_dark' : ''\n\n    return <PreviewContainer\n        border={{ size: '1px' }}\n        margin={{ bottom: '12px'}}\n        round={'8px'}\n        overflow={'hidden'}\n        onClick={onClick}\n    >\n        <Box pad={'8px'} background={'backgroundDropdownItem'}>\n            <Text size={'small'} color={'brand'}>{title}</Text>\n        </Box>\n        <Box pad={'8px'} height={'11.2vh'} border={{ side: 'top' }} style={{ filter: themeMode === 'dark' ? 'unset' : 'grayscale(0.8)' }}>\n            {/* {type === ChartType.tx && <img src={require(`./thumbnails/daily_txs${previewImgPostfix}.png`).default} height={'100%'} {...imgProps} />}\n            {type === ChartType.addresses && <img src={require(`./thumbnails/daily_addresses${previewImgPostfix}.png`).default} height={'100%'} {...imgProps} />}\n            {type === ChartType.fee && <img src={require(`./thumbnails/daily_fee${previewImgPostfix}.png`).default} height={'100%'} {...imgProps} />}\n            {type === ChartType.blockSize && <img src={require(`./thumbnails/daily_blocksize${previewImgPostfix}.png`).default} height={'100%'} {...imgProps} />}\n            {type === ChartType.viewChange && <img src={require(`./thumbnails/view_change${previewImgPostfix}.png`).default} height={'100%'} {...imgProps} />} */}\n        </Box>\n    </PreviewContainer>\n}\n\nexport function ChartsPage() {\n    const location = useLocation();\n    const [, ,route] = location.pathname.split('/')\n\n    if(route === ChartType.tx) {\n        return <DailyTransactions />\n    } else if(route === ChartType.addresses) {\n        return <ActiveAddresses />\n    } else if(route === ChartType.fee) {\n        return <AverageFee />\n    } else if(route === ChartType.blockSize) {\n        return <AverageBlockSize />\n    } else if(route === ChartType.viewChange) {\n        return <ViewChangeStats />\n    }\n\n    return (\n        <BaseContainer pad={{ horizontal: \"0\" }}>\n            <Heading size=\"small\" margin={{ bottom: \"medium\", top: \"0\" }}>\n                <Box direction={\"row\"}>Zippy Charts</Box>\n            </Heading>\n            <BasePage pad={'0'} style={{overflow: 'inherit'}}>\n                <Box border={{ side: 'bottom' }} pad={\"small\"}>\n                    <Text weight={'bold'}>Blockchain Data</Text>\n                </Box>\n                <Box\n                    wrap\n                    direction={'row'}\n                    pad={\"small\"}\n                    justify={'start'}\n                    align={'center'}\n                >\n                    <PreviewCard type={ChartType.tx} title={'Daily Transactions Chart'} />\n                    <PreviewCard type={ChartType.addresses} title={'Daily Active Addresses'} />\n                    <PreviewCard type={ChartType.fee} title={'Average Transaction Fee'} />\n                    <PreviewCard type={ChartType.blockSize} title={'Average Block Size'} />\n                    <PreviewCard type={ChartType.viewChange} title={'View Change Statistics'} />\n                </Box>\n            </BasePage>\n        </BaseContainer>\n    );\n}\n","import React from 'react'\nimport {Box, Text} from \"grommet\";\nimport {MetricsTopItem, MetricsTopType} from \"../../types\";\nimport styled from \"styled-components\";\nimport {Address} from \"../../components/ui\";\n// import {ReactComponent as HarmonyLogo} from '../../assets/Logo.svg';\n\n\nexport interface TopTableProps {\n    items: MetricsTopItem[]\n    title: string\n    columns: string[]\n    isLoading?: boolean\n}\n\ninterface TopTableRowProps {\n    item: MetricsTopItem\n}\n\nconst TableContainer = styled(Box)`\n  flex: 0 0 calc(50% - 16px);\n  margin-left: 8px;\n  margin-right: 8px;\n\n  @media (max-width: 1024px) {\n    flex: 0 0 calc(100% - 16px);\n    margin-bottom: 0.75rem;\n  }\n`\n\nconst LogoWrapper = styled(Box)`\n  svg path {\n    fill: #00AEE9;\n  }\n`\n\nconst columnsWidth = ['5%', '65%', '15%', '10%']\n\nconst TopTableHeader = (props: { columns: string[] }) => {\n    const { columns } = props\n    return <Box\n        direction={'row'}\n        gap={'8px'}\n        pad={'8px'}\n        // border={{ size: '2px', side: 'top' }}\n        style={{ fontWeight: 'bold' }}\n    >\n        <Box width={columnsWidth[0]}>\n            <Text size={'xsmall'}>{columns[0]}</Text>\n        </Box>\n        <Box width={columnsWidth[1]}>\n            <Text size={'xsmall'}>{columns[1]}</Text>\n        </Box>\n        <Box width={columnsWidth[2]}>\n            <Text size={'xsmall'}>{columns[2]}</Text>\n        </Box>\n        <Box width={columnsWidth[3]}>\n            <Text size={'xsmall'}>{columns[3]}</Text>\n        </Box>\n    </Box>\n}\n\nconst TopTableRow = (props: TopTableRowProps) => {\n    const { item: { type, rank, address, value, share } } = props\n\n    const isZPTTransfer = [MetricsTopType.topZPTSender, MetricsTopType.topZPTReceiver].includes(type)\n    const valueFormat = isZPTTransfer\n        ? Math.round(+value / Math.pow(10, 18))\n        : value\n\n    const valueFormatEn = Intl.NumberFormat('en-US', {\n        notation: \"compact\",\n        maximumFractionDigits: 2\n    }).format(+valueFormat)\n\n    const shareFormatEn = Intl.NumberFormat('en-US', {\n        notation: \"compact\",\n        maximumFractionDigits: 2\n    }).format(+share)\n\n    return <Box\n        direction={'row'}\n        gap={'8px'}\n        pad={'8px'}\n        border={{ size: '1px', side: 'top' }}\n    >\n        <Box width={columnsWidth[0]}>\n            <Text size={'small'}>{rank}</Text>\n        </Box>\n        <Box width={columnsWidth[1]}>\n            <Address address={address} hideCopyBtn={true} isShortEllipsis={true} style={{ fontSize: 'small' }} />\n        </Box>\n        <Box width={columnsWidth[2]} direction={'row'} align={'center'} gap={'6px'}>\n            {isZPTTransfer && <LogoWrapper>\n                {/* <HarmonyLogo width={'12px'} height={'12px'} /> */}\n            </LogoWrapper> }\n            <Text size={'xsmall'}>{valueFormatEn}</Text>\n        </Box>\n        <Box width={columnsWidth[3]}>\n            <Text size={'xsmall'}>{shareFormatEn}%</Text>\n        </Box>\n    </Box>\n}\n\nexport const TopTable = (props: TopTableProps) => {\n    return <TableContainer\n        border={{ size: '1px' }}\n        round={'8px'}\n        overflow={'hidden'}\n        margin={{ bottom: '16px' }}\n        style={{ opacity: props.isLoading ? 0.5 : 1 }}\n        background={'background'}\n    >\n        <Box style={{ overflowX: 'auto' }}>\n            <Box style={{ minWidth: '550px' }}>\n                <Box pad={'8px'} border={{ size: '1px', side: 'bottom' }} background={'backgroundBackEmpty'}>\n                    <Text size={'small'}>{props.title}</Text>\n                </Box>\n                <TopTableHeader columns={props.columns} />\n                {props.items.map(item => <TopTableRow key={item.address} item={item} />)}\n            </Box>\n        </Box>\n    </TableContainer>\n}\n","import React from 'react'\nimport {Box, Text} from \"grommet\";\nimport {MetricsTopPeriod} from \"../../types\";\n\nconst OptionAlias = {\n    [MetricsTopPeriod.d1]: '1 Day',\n    [MetricsTopPeriod.d3]: '3 Days',\n    [MetricsTopPeriod.d7]: '7 Days',\n}\n\nexport const ChartOptions = Object.values(MetricsTopPeriod).filter(v => typeof v === 'number') as MetricsTopPeriod[]\n\nconst Option = (props: { value: MetricsTopPeriod, isActive: boolean, onSelect: (value: MetricsTopPeriod) => void }) => {\n    const {value, isActive, onSelect} = props\n    return <Box\n        align={'center'}\n        pad={'8px'}\n        round={'8px'}\n        background={isActive ? 'background' : 'unset'}\n        onClick={() => onSelect(value)}\n        style={{ cursor: 'pointer', fontWeight: isActive ? 'bold': 'normal' }}\n    >\n        <Text size='small'>{OptionAlias[value]}</Text>\n    </Box>\n}\n\nexport interface OptionsSelectProps {\n    activeOption: MetricsTopPeriod\n    onSelect: (option: MetricsTopPeriod) => void\n    disabled?: boolean\n}\n\nexport const OptionsSelect = (props: OptionsSelectProps) => {\n    const { activeOption, disabled, onSelect } = props\n\n    return <Box\n        direction={'row'}\n        justify={'between'}\n        pad={'4px'}\n        gap={'8px'}\n        round={'8px'}\n        background={'backgroundBack'}\n        border={{ size: '1px' }}\n    >\n        {ChartOptions.map(option => <Option\n            key={option}\n            value={option}\n            isActive={activeOption === option}\n            onSelect={(option) => !disabled ? onSelect(option) : undefined}\n        />)}\n    </Box>\n}\n","import React, {useEffect, useState} from 'react'\nimport {Box, Spinner, Text, Tip} from \"grommet\";\nimport {TopTable} from \"./CommonTopTable\";\nimport {getTopMetricsByType} from \"../../api/client\";\nimport {MetricsTopItem, MetricsTopPeriod, MetricsTopType} from \"../../types\";\nimport {OptionsSelect} from \"./OptionsSelect\";\nimport dayjs from \"dayjs\";\nimport {TipContent} from \"../../components/ui\";\n\nconst defaultMetricsItem = {\n    [MetricsTopType.topZPTSender]: [] as MetricsTopItem[],\n    [MetricsTopType.topZPTReceiver]: [] as MetricsTopItem[],\n    [MetricsTopType.topTxsCountSent]: [] as MetricsTopItem[],\n    [MetricsTopType.topTxsCountReceived]: [] as MetricsTopItem[],\n}\n\nconst defaultCache = {\n    [MetricsTopPeriod.d1]: {...defaultMetricsItem},\n    [MetricsTopPeriod.d3]: {...defaultMetricsItem},\n    [MetricsTopPeriod.d7]: {...defaultMetricsItem},\n}\n\nexport const TransactionTopStats = () => {\n    const [isLoading, setLoading] = useState(false)\n    const [period, setPeriod] = useState(MetricsTopPeriod.d1)\n    const [cache, setCache] = useState(defaultCache)\n    const [oneSenders, setZPTSenders] = useState<MetricsTopItem[]>([])\n    const [oneReceivers, setZPTReceivers] = useState<MetricsTopItem[]>([])\n    const [txsSenders, setTxsSenders] = useState<MetricsTopItem[]>([])\n    const [txsReceivers, setTxsReceivers] = useState<MetricsTopItem[]>([])\n\n    useEffect(() => {\n        const retrieveMetrics = async (type: MetricsTopType, p: MetricsTopPeriod) => {\n            const cachedRows = cache[p][type]\n            if(cachedRows.length > 0) {\n                return [...cachedRows]\n            }\n            // await new Promise(resolve => setTimeout(resolve, 500))\n\n            return await getTopMetricsByType(type, p)\n        }\n\n        const loadData = async () => {\n            try {\n                setLoading(true)\n                const rowsZPTSent = await retrieveMetrics(MetricsTopType.topZPTSender, period)\n                const rowsZPTReceive = await retrieveMetrics(MetricsTopType.topZPTReceiver, period)\n                const rowsTxsSent = await retrieveMetrics(MetricsTopType.topTxsCountSent, period)\n                const rowsTxsReceived = await retrieveMetrics(MetricsTopType.topTxsCountReceived, period)\n\n                setZPTSenders(rowsZPTSent)\n                setZPTReceivers(rowsZPTReceive)\n                setTxsSenders(rowsTxsSent)\n                setTxsReceivers(rowsTxsReceived)\n\n                const cacheUpdated = {\n                    ...cache,\n                    [period]: {\n                        [MetricsTopType.topZPTSender]: rowsZPTSent,\n                        [MetricsTopType.topZPTReceiver]: rowsZPTReceive,\n                        [MetricsTopType.topTxsCountSent]: rowsTxsSent,\n                        [MetricsTopType.topTxsCountReceived]: rowsTxsReceived\n                    }\n                }\n                setCache(cacheUpdated)\n            } catch (e) {\n                console.error('Error on loading top metrics:', (e as Error).message)\n            } finally {\n                setLoading(false)\n            }\n        }\n        loadData()\n    }, [period])\n\n    const dateFrom = oneSenders.length > 0 ? dayjs(oneSenders[0].updatedAt).subtract(period, 'day') : ''\n    const dateTo = oneSenders.length > 0 ? dayjs(oneSenders[0].updatedAt).subtract(1, 'day') : ''\n    const dateUpdate = oneSenders.length > 0 ? dayjs(oneSenders[0].updatedAt) : ''\n\n    return <Box gap={'16px'}>\n        <Box direction={'row'} align={'center'} pad={'8px'} justify={'between'}>\n            <Box direction={'row'} gap={'24px'} justify={'center'}>\n                <OptionsSelect\n                    disabled={isLoading}\n                    activeOption={period}\n                    onSelect={(option) => setPeriod(option)}\n                />\n                <Box justify={'center'}>\n                    {isLoading && <Spinner size={'small'} />}\n                </Box>\n            </Box>\n            {!isLoading && dateFrom && dateTo && dateUpdate &&\n                <Box pad={{ right: '4px' }}>\n                    <Tip\n                        dropProps={{ align: { bottom: \"top\" }}}\n                        content={<TipContent showArrow={true} message={`Last update: ${dateUpdate.format('DD MMM HH:mm:ss')}`} />}\n                    >\n                        <Box>\n                            {period === MetricsTopPeriod.d1 &&\n                                <Text size={'small'}>{dateTo.format('DD MMM')}</Text>\n                            }\n                            {period !== MetricsTopPeriod.d1 &&\n                                <Text size={'small'}>{dateFrom.format('DD MMM')} - {dateTo.format('DD MMM')}</Text>\n                            }\n                        </Box>\n                    </Tip>\n                </Box>\n            }\n        </Box>\n        <Box\n            wrap\n            direction={'row'}\n            justify={'start'}\n            align={'center'}\n        >\n            <TopTable\n                items={oneSenders}\n                title={'Top ZPT Senders'}\n                columns={['Rank', 'Address', 'Total ZPT', 'Percentage']}\n                isLoading={isLoading}\n            />\n            <TopTable\n                items={oneReceivers}\n                title={'Top ZPT Receivers'}\n                columns={['Rank', 'Address', 'Total ZPT', 'Percentage']}\n                isLoading={isLoading}\n            />\n            <TopTable\n                items={txsSenders}\n                title={'Top Txs Count Sent'}\n                columns={['Rank', 'Address', 'Total Txs', 'Percentage']}\n                isLoading={isLoading}\n            />\n            <TopTable\n                items={txsReceivers}\n                title={'Top Txs Count Received'}\n                columns={['Rank', 'Address', 'Total Txs', 'Percentage']}\n                isLoading={isLoading}\n            />\n        </Box>\n    </Box>\n}\n","import React from 'react'\nimport {Box, Heading, Text} from \"grommet\";\nimport {BaseContainer, BasePage} from \"../../components/ui\";\nimport {TransactionTopStats} from \"./Transaction\";\n\nexport const TopStatsPage = () => {\nreturn <BaseContainer pad={{ horizontal: \"0\" }}>\n    <Heading size=\"xsmall\" margin={{ bottom: \"medium\", top: \"0\" }}>\n        <Box direction={\"row\"}>Top Statistics</Box>\n    </Heading>\n    <BasePage pad={'0'} style={{overflow: 'inherit'}}>\n        <Box border={{ side: 'bottom' }} pad={\"small\"}>\n            <Text weight={'bold'}>Transactions</Text>\n        </Box>\n        <Box\n            wrap\n            direction={'row'}\n            pad={\"small\"}\n            justify={'start'}\n            align={'center'}\n        >\n            <TransactionTopStats />\n        </Box>\n    </BasePage>\n</BaseContainer>\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Box, Heading, Tab, Tabs, Text } from \"grommet\";\nimport { BasePage, BaseContainer } from \"src/components/ui\";\nimport { TransactionsTable } from \"../../components/tables/TransactionsTable\";\nimport { ApprovalDetails, Filter, RPCTransactionHarmony } from \"../../types\";\nimport { useHistory } from \"react-router-dom\";\nimport { getTransactions, getCount } from \"src/api/client\";\nimport { ShardDropdown } from \"src/components/ui/ShardDropdown\";\nimport { useParams } from \"react-router-dom\";\nimport { ToolsTab } from \"../AddressPage/tabs/tools\";\nimport { ApprovalsRenderer } from \"src/components/approvals/approvalsRenderer\";\nimport { HarmonyAddress } from \"src/utils\";\nimport { ApiCache } from \"src/api/ApiCache\";\nimport { getAllApprovalsForTokens } from \"src/api/rpc\";\nimport 'chart.js/auto';\n\n\nimport {Pie as PieChartJs} from \"react-chartjs-2\";\n\n\nimport { ApprovalsHeader } from \"src/components/approvals/approvalsHeader\";\nimport { useERC1155Pool } from \"src/hooks/ERC1155_Pool\";\nimport { useERC721Pool } from \"src/hooks/ERC721_Pool\";\nimport { useERC20Pool } from \"src/hooks/ERC20_Pool\";\n\nconst ApprovalCache = new ApiCache({ key: \"approvalsCache\" }); // cache of approvals data mapped\n\n\nexport function ValidatorsPage() {\n  const history = useHistory();\n\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [metamaskAddress, setMetamask] = useState(\"\");\n  const [chainId, setChainId] = useState(0);\n  const [data, setData] = useState<{miner: string, blkcnt: number}[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedShard, setSelectedShard] = useState(\"0\");\n\n  const isMainNet =\n    process.env.REACT_APP_RPC_URL_SHARD0 === \"\";\n\n  const validChainId = isMainNet\n    ? chainId === 1666600000\n    : (chainId === 1666700000 || chainId === 1666900000);\n\n  const loadData = async (shardNumber: number) => {\n\n      setIsLoading(false);\n\n\n    try {\n      const resp = await fetch(`https://testnet-rest.zippychain.ai/v0/shard/${shardNumber}/validators/distribution`)\n      const result = await resp.json()\n      console.log(result)\n      setData(result)\n    }\n    catch (error) {\n      // @ts-ignore\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }\n\n  useEffect(() => {\n    loadData(Number(selectedShard))\n  }, [selectedShard])\n\n  // test user 0x5c57fec3e02e5b64f8c3b47b39942ef682e51459\n  return (\n    <BaseContainer pad={{ horizontal: \"0\" }}>\n      <Heading size=\"small\" margin={{ bottom: \"medium\", top: \"0\" }}>\n      Zippy Validators\n      </Heading>\n      <BasePage pad={\"small\"} style={{ overflow: \"inherit\" }}>\n        <Box direction=\"column\">\n        <ShardDropdown\n                  allShardsAvailable={true}\n                  selected={selectedShard}\n                  onClick={(shardNumber) => setSelectedShard(shardNumber)}\n                />\n          <Box margin={{ left: \"10px\", top: \"medium\" }}>\n            <PieChartJs data={\n              {\n                labels: data.map((e)=>e.miner),\n                datasets: [\n                  {\n                    label: `Validator Distribution on shard ${selectedShard}`,\n                    data: data.map((e)=>e.blkcnt),\n                  }\n                ]\n              }\n            }\n            options={{\n              responsive: true,\n              plugins: {\n                legend: {\n                  position: 'top',\n                },\n                title: {\n                  display: true,\n                  text: 'Chart.js Pie Chart'\n                }\n              }\n            }}\n            ></PieChartJs>\n          </Box>\n        </Box>\n      </BasePage>\n    </BaseContainer>\n  );\n}\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { BlockPage } from \"src/pages/BlockPage\";\nimport { MainPage } from \"src/pages/MainPage\";\nimport { TransactionPage } from \"src/pages/TransactionPage\";\nimport { StakingTransactionPage } from \"src/pages/StackingTransactionPage\";\nimport { AllBlocksPage } from \"src/pages/AllBlocksPage\";\nimport { AllTransactionsPage } from \"src/pages/AllTransactionsPage\";\nimport { AddressPage } from \"src/pages/AddressPage\";\nimport { ERC20List } from \"src/pages/ERC20List\";\nimport { ERC721List } from \"src/pages/ERC721List\";\nimport { VerifyContract } from \"./pages/VerifyContract/VerifyContract\";\nimport { ERC1155List } from \"./pages/ERC1155List\";\nimport { ExportData } from \"./pages/ExportData\";\nimport { InventoryDetailsPage } from \"./pages/InventoryDetailsPage/InventoryDetailsPage\";\nimport { ApprovalPage } from \"./pages/ApprovalPage\";\nimport { CheckZRC } from \"./pages/tools/CheckZRC\";\nimport { ChartsPage } from \"./pages/ChartsPage\";\nimport { TopStatsPage } from \"./pages/TopStatsPage\";\nimport { ValidatorsPage } from \"./pages/ValidatorsPage\";\n\nexport function Routes() {\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/\">\n          <MainPage />\n        </Route>\n\n        <Route exact path=\"/blocks\">\n          {/* <AllBlocksPage /> */}\n          <Redirect to=\"/blocks/shard/0\" />\n        </Route>\n\n        <Route exact path=\"/blocks/shard/:shardNumber\">\n          <AllBlocksPage />\n        </Route>\n\n        <Route path=\"/block/:id\">\n          <BlockPage />\n        </Route>\n\n        <Route exact path=\"/transactions\">\n          {/* <AllTransactionsPage /> */}\n          <Redirect to=\"/transactions/shard/0\" />\n        </Route>\n\n        <Route exact path=\"/transactions/shard/:shardNumber\">\n          <AllTransactionsPage />\n        </Route>\n\n        <Route exact path=\"/tools/approvals\">\n          <ApprovalPage />\n        </Route>\n\n        <Route exact path=\"/tools/checkHrc\">\n          <CheckZRC />\n        </Route>\n\n        <Route path=\"/tx/:id\">\n          <TransactionPage />\n        </Route>\n\n        <Route path=\"/staking-tx/:id\">\n          <StakingTransactionPage />\n        </Route>\n\n        <Route exact path=\"/address/:id\">\n          <AddressPage />\n        </Route>\n\n        <Route path=\"/inventory/:type/:address/:tokenID\">\n          <InventoryDetailsPage />\n        </Route>\n\n        <Route path=\"/tokens\">\n          <ERC20List />\n        </Route>\n\n        <Route path=\"/tokens721\">\n          <ERC721List />\n        </Route>\n\n        <Route path=\"/zrc20\">\n          <ERC20List />\n        </Route>\n\n        <Route path=\"/zrc721\">\n          <ERC721List />\n        </Route>\n\n        <Route path=\"/zrc1155\">\n          <ERC1155List />\n        </Route>\n\n        <Route path=\"/verifycontract\">\n          <VerifyContract />\n        </Route>\n\n        <Route path=\"/exportData\">\n          <ExportData />\n        </Route>\n\n        <Route path=\"/charts\">\n          <Route path={'/'}><ChartsPage /></Route>\n        </Route>\n\n        <Route path=\"/topstat\">\n          <Route path={'/'}><TopStatsPage /></Route>\n        </Route>\n\n        <Route path=\"/validators\">\n          <ValidatorsPage />\n        </Route>\n\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Menu } from \"grommet-icons\";\nimport { Box, Text, DropButton } from \"grommet\";\nimport styled from \"styled-components\";\nimport {\n  useThemeMode,\n  setThemeMode,\n  themeType,\n} from \"src/hooks/themeSwitcherHook\";\n\nimport { DateFormat, setDateFormatMode, useDateFormatMode } from \"src/hooks/dateFormatSwitcherHook\";\n\nimport {\n  useCurrency,\n  setCurrency,\n  currencyType,\n} from \"src/hooks/ZPT-ETH-SwitcherHook\";\nimport { GearIcon } from \"../ui/icons\";\n\nexport function ConfigureButton() {\n  const theme = useThemeMode();\n  const currency = useCurrency();\n  const dateFormat = useDateFormatMode();\n\n  return (\n    <DropButton\n      label={<GearIcon size=\"24px\" color={'#fff'} />}\n      dropAlign={{ top: \"bottom\", right: \"right\" }}\n      style={{\n        height: '32px',\n        border: \"none\",\n        boxShadow: \"none\",\n        paddingRight: \"6px\",\n        paddingLeft: 0,\n      }}\n      dropProps={{ round: '4px' }}\n      dropContent={\n        <Box\n          pad=\"medium\"\n          background=\"background\"\n          border={{ size: \"xsmall\", color: \"border\" }}\n          style={{ borderRadius: \"0px\" }}\n        >\n          <Text size=\"small\" weight=\"bold\" margin={{ bottom: \"xsmall\" }}>\n            Theme\n          </Text>\n          <ToggleButton\n            value={theme}\n            options={[\n              { text: \"Light\", value: \"light\" },\n              { text: \"Dark\", value: \"dark\" },\n            ]}\n            onChange={setThemeMode}\n          />\n          {/*<Text*/}\n          {/*  size=\"small\"*/}\n          {/*  weight=\"bold\"*/}\n          {/*  margin={{ bottom: \"xsmall\", top: \"small\" }}*/}\n          {/*>*/}\n          {/*  Address style*/}\n          {/*</Text>*/}\n          {/*<ToggleButton*/}\n          {/*  value={currency}*/}\n          {/*  options={[*/}\n          {/*    { text: \"Harmony\", value: \"ZPT\" },*/}\n          {/*    { text: \"ETH\", value: \"ETH\" },*/}\n          {/*  ]}*/}\n          {/*  onChange={setCurrency}*/}\n          {/*/>*/}\n          <Text\n            size=\"small\"\n            weight=\"bold\"\n            margin={{ bottom: \"xsmall\", top: \"small\" }}\n          >\n            Date Format\n          </Text>\n          <ToggleButton\n            value={dateFormat}\n            options={[\n              { text: \"Exact\", value: DateFormat.EXACT },\n              { text: \"Relative\", value: DateFormat.RELATIVE },\n            ]}\n            onChange={setDateFormatMode}\n          />\n        </Box>\n      }\n    />\n  );\n}\n\ninterface ToggleProps {\n  value: string;\n  options: Array<{\n    text: string;\n    value: themeType | currencyType | DateFormat;\n  }>;\n  onChange: (value: any) => void;\n}\n\n//@ts-ignore\nconst ToggleButton = (props: ToggleProps) => {\n  const { options, value, onChange } = props;\n\n  return (\n    <Box\n      direction=\"row\"\n      background=\"transparent\"\n      border={{ size: \"xsmall\", color: \"border\" }}\n      style={{ overflow: \"hidden\", borderRadius: \"8px\" }}\n    >\n      {options.map((i) => (\n        <SwitchButton\n          selected={i.value === value}\n          onClick={() => onChange(i.value)}\n          key={i.value}\n        >\n          {i.text}\n        </SwitchButton>\n      ))}\n    </Box>\n  );\n};\n\nconst SwitchButton = styled.div<{ selected: boolean }>`\n  padding: 8px 20px;\n  min-width: 60px;\n  background-color: ${(props) =>\n    props.selected ? props.theme.global.colors.brand : \"transparent\"};\n  color: ${(props) =>\n    props.selected\n      ? props.theme.global.colors.background\n      : props.theme.global.colors.brand};\n  font-weight: ${(props) => (props.selected ? \"bold\" : \"normal\")};\n  user-select: none;\n  outline: none;\n  text-align: center;\n  cursor: ${(props) => (props.selected ? \"auto\" : \"pointer\")};\n`;\n","import React, { useState } from \"react\";\nimport { CaretDownFill } from \"grommet-icons\";\nimport { Box, DropButton, Anchor, Text } from \"grommet\";\nimport { useHistory } from \"react-router-dom\";\n\nexport function InfoButton() {\n  const history = useHistory();\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  return (\n    <DropButton\n      label={\n        <Box direction={\"row\"} align=\"center\">\n          <Text size=\"small\" color=\"white\" weight=\"bold\">\n            Tokens\n          </Text>\n          <CaretDownFill color=\"white\" />\n        </Box>\n      }\n      onOpen={() => {\n        setIsOpen(true);\n      }}\n      onClose={() => {\n        setIsOpen(false);\n      }}\n      open={isOpen}\n      dropProps={{ round: '4px' }}\n      dropAlign={{ top: \"bottom\", right: \"right\" }}\n      dropContent={\n        <Box\n          pad=\"medium\"\n          background=\"background\"\n          border={{ size: \"xsmall\", color: \"border\" }}\n          style={{ borderRadius: \"0px\" }}\n          gap=\"small\"\n        >\n          <Anchor\n            style={{ textDecoration: \"underline\" }}\n            onClick={(e) => {\n              setIsOpen(false);\n              history.push(\"/zrc20\");\n            }}\n          >\n            ZRC20 tokens\n          </Anchor>\n          <Anchor\n            style={{ textDecoration: \"underline\" }}\n            onClick={(e) => {\n              setIsOpen(false);\n              history.push(\"/zrc721\");\n            }}\n          >\n            ZRC721 tokens\n          </Anchor>\n          <Anchor\n            style={{ textDecoration: \"underline\" }}\n            onClick={(e) => {\n              setIsOpen(false);\n              history.push(\"/zrc1155\");\n            }}\n          >\n            ZRC1155 tokens\n          </Anchor>\n        </Box>\n      }\n      style={{\n        border: \"none\",\n        boxShadow: \"none\",\n        paddingRight: \"6px\"\n      }}\n    />\n  );\n}\n","import React, { useState } from \"react\";\nimport { CaretDownFill } from \"grommet-icons\";\nimport { Box, DropButton, Anchor, Text } from \"grommet\";\nimport { useHistory } from \"react-router-dom\";\n\nexport function ToolsButton() {\n  const history = useHistory();\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  return (\n    <DropButton\n      label={\n        <Box direction={\"row\"} align=\"center\">\n          <Text size=\"small\" color=\"white\" weight=\"bold\">\n            Tools\n          </Text>\n          <CaretDownFill color=\"white\" />\n        </Box>\n      }\n      onOpen={() => {\n        setIsOpen(true);\n      }}\n      onClose={() => {\n        setIsOpen(false);\n      }}\n      open={isOpen}\n      dropProps={{ round: '4px' }}\n      dropAlign={{ top: \"bottom\", right: \"right\" }}\n      dropContent={\n        <Box\n          pad=\"medium\"\n          background=\"background\"\n          border={{ size: \"xsmall\", color: \"border\" }}\n          style={{ borderRadius: \"0px\" }}\n          gap=\"small\"\n        >\n          <Anchor\n            style={{ textDecoration: \"underline\" }}\n            onClick={(e) => {\n              setIsOpen(false);\n              history.push(\"/tools/approvals\");\n            }}\n          >\n            Token Approvals\n          </Anchor>\n          <Anchor\n            style={{ textDecoration: \"underline\" }}\n            onClick={(e) => {\n              setIsOpen(false);\n              history.push(\"/tools/checkHrc\");\n            }}\n          >\n            Check ZRC\n          </Anchor>\n            {/*<Anchor*/}\n            {/*    style={{ textDecoration: \"underline\" }}*/}\n            {/*    onClick={(e) => {*/}\n            {/*        setIsOpen(false);*/}\n            {/*        history.push(\"/proxyContractChecker\");*/}\n            {/*    }}*/}\n            {/*>*/}\n            {/*    Proxy verification*/}\n            {/*</Anchor>*/}\n        </Box>\n      }\n      style={{\n        border: \"none\",\n        boxShadow: \"none\",\n        paddingRight: \"6px\"\n      }}\n    />\n  );\n}\n","import React, { useState } from \"react\";\nimport { CaretDownFill } from \"grommet-icons\";\nimport { Box, DropButton, Anchor, Text } from \"grommet\";\nimport { useHistory } from \"react-router-dom\";\n\nexport function ResourcesButton() {\n    const history = useHistory();\n    const [isOpen, setIsOpen] = useState<boolean>(false);\n\n    return (\n        <DropButton\n            label={\n                <Box direction={\"row\"} align=\"center\">\n                    <Text size=\"small\" color=\"white\" weight=\"bold\">\n                        Resources\n                    </Text>\n                    <CaretDownFill color=\"white\" />\n                </Box>\n            }\n            onOpen={() => {\n                setIsOpen(true);\n            }}\n            onClose={() => {\n                setIsOpen(false);\n            }}\n            open={isOpen}\n            dropProps={{ round: '4px' }}\n            dropAlign={{ top: \"bottom\", right: \"right\" }}\n            dropContent={\n                <Box\n                    pad=\"medium\"\n                    background=\"background\"\n                    border={{ size: \"xsmall\", color: \"border\" }}\n                    style={{ borderRadius: \"0px\" }}\n                    gap=\"small\"\n                >\n                    <Anchor\n                        style={{ textDecoration: \"underline\" }}\n                        onClick={(e) => {\n                            setIsOpen(false);\n                            history.push(\"/charts\");\n                        }}\n                    >\n                        <Box direction={'row'} align={'center'} gap={'4px'}>\n                            Charts & Stats\n                        </Box>\n                    </Anchor>\n                    <Anchor\n                        style={{ textDecoration: \"underline\" }}\n                        onClick={(e) => {\n                            setIsOpen(false);\n                            history.push(\"/topstat\");\n                        }}\n                    >\n                        <Box direction={'row'} align={'center'} gap={'4px'}>\n                            Top Statistics\n                        </Box>\n                    </Anchor>\n                </Box>\n            }\n            style={{\n                border: \"none\",\n                boxShadow: \"none\",\n                paddingRight: \"6px\"\n            }}\n        />\n    );\n}\n","import {Box, Text} from \"grommet\";\nimport {useHistory} from \"react-router-dom\";\nimport {useState} from \"react\";\nimport {CaretDownFill, CaretUpFill, Sun, Moon, Clock, Calendar} from \"grommet-icons\";\nimport {setThemeMode, useThemeMode} from \"../../hooks/themeSwitcherHook\";\nimport {DateFormat, setDateFormatMode, useDateFormatMode} from \"../../hooks/dateFormatSwitcherHook\";\n\ninterface MenuRowItem {\n    title: string\n    route?: string\n    content?: any\n}\n\ninterface MenuRowProps {\n    title: string\n    items: MenuRowItem[]\n    route?: string\n    onSelect?: (title: string, route?: string) => void\n}\n\nconst MenuItem = (props: { item: MenuRowItem, onSelect?: (title: string, route?: string) => void }) => {\n    const { item: { title, route, content }, onSelect } = props\n    const onClick = (e: any) => {\n        e.stopPropagation()\n        if(onSelect) {\n            onSelect(title, route)\n        }\n    }\n    return <Box pad={'8px 32px'} onClick={onClick}>\n        <Text size={'small'}>{title}</Text>\n        {!!content &&\n            content\n        }\n    </Box>\n}\n\nconst MenuRow = (props: MenuRowProps) => {\n    const [isItemsVisible, setItemsVisible] = useState(false)\n    const {title, items, route, onSelect} = props\n\n    const onClick = () => {\n        if(route && onSelect) {\n            onSelect(title, route)\n        }\n        if(items.length > 0) {\n            setItemsVisible(!isItemsVisible)\n        }\n    }\n\n    return <Box pad={'4px 16px'} onClick={onClick}>\n        <Box direction={'row'} justify={'between'} pad={'8px'}>\n            <Text size={'medium'} color={isItemsVisible ? 'brand' : 'text'}>{title}</Text>\n            {items.length > 0 && !isItemsVisible && <CaretDownFill size={'16px'} color={'text'} /> }\n            {items.length > 0 && isItemsVisible && <CaretUpFill size={'16px'} color={'brand'} /> }\n        </Box>\n        {isItemsVisible &&\n            <Box style={{ position: 'relative' }}>\n                <Box width={'2px'} height={'100%'} margin={{ left: '12px' }} background={'brand'} style={{ position: 'absolute' }} />\n                {items.map((item, i) => <MenuItem key={item.title + i} item={item} onSelect={onSelect} />)}\n            </Box>\n        }\n    </Box>\n}\n\nexport const MenuMobile = (props: { isOpened: boolean; onClose: () => void }) => {\n    const history = useHistory();\n\n    const onSelect = (title: string, route?: string) => {\n        if(route) {\n            history.push(route);\n            props.onClose()\n        }\n    }\n\n    const ThemeSwitch = () => {\n        const theme = useThemeMode();\n        return <Box direction={'row'}\n                    gap={'8px'}\n                    align={'center'}\n                    onClick={() => setThemeMode(theme === 'light' ? 'dark' : 'light')}>\n            <Box>{theme === 'light' ? <Moon /> : <Sun />}</Box>\n            <Box>{theme === 'light' ? 'Switch to Dark mode' : 'Switch to Light mode'}</Box>\n        </Box>\n    }\n\n    const DateFormatSwitch = () => {\n        const dateFormat = useDateFormatMode();\n        return <Box direction={'row'}\n                    gap={'8px'}\n                    align={'center'}\n                    onClick={() => setDateFormatMode(dateFormat === DateFormat.EXACT ? DateFormat.RELATIVE : DateFormat.EXACT)}\n        >\n            <Box>{dateFormat === DateFormat.EXACT ? <Clock height={'2px'} /> : <Calendar height={'2px'} />}</Box>\n            <Box>{dateFormat === DateFormat.EXACT ? 'Switch to Relative dates' : 'Switch to Exact dates'}</Box>\n        </Box>\n    }\n\n    return <Box pad={'8px 0'} background={'background'} style={{ display: props.isOpened ? 'block' : 'none' }}>\n        <MenuRow title={'Home'} items={[]} route={'/'} onSelect={onSelect} />\n        <MenuRow title={'Tokens'} items={[{ title: 'ZRC20', route: '/zrc20' }, { title: 'ZRC721', route: '/zrc721' }, { title: 'ZRC1155', route: '/zrc1155' }]} onSelect={onSelect} />\n        <MenuRow title={'Tools'} items={[{ title: 'Token Approvals', route: '/tools/approvals' }, { title: 'Check ZRC', route: '/tools/checkHrc' }]} onSelect={onSelect} />\n        <MenuRow title={'Resources'} items={[{ title: 'Charts & Stats', route: '/charts' }, { title: 'Top Statistics', route: '/topstat' }]} onSelect={onSelect} />\n        <MenuRow title={'Appearance'} items={[{ title: '', content: <ThemeSwitch /> }, { title: '', content: <DateFormatSwitch />}]} />\n    </Box>\n}\n","import React, {useState} from \"react\";\nimport { Box, Heading, Text } from \"grommet\";\nimport { useMediaQuery } from 'react-responsive'\nimport { FiatPrice, BaseContainer } from \"src/components/ui\";\nimport { useHistory } from \"react-router-dom\";\nimport { ConfigureButton } from \"./ConfigureButton\";\nimport { InfoButton } from \"./InfoButton\";\nimport { useThemeMode } from \"src/hooks/themeSwitcherHook\";\nimport styled, { CSSProperties } from \"styled-components\";\nimport { AddressFormatSwitch } from \"./AddressFormatSwitch\";\nimport { ToolsButton } from \"./ToolsButton\";\nimport { ResourcesButton } from \"./ResourcesButton\";\nimport {MenuMobile} from \"./MenuMobile\";\nimport {Menu, Close} from \"grommet-icons\";\n\nconst HeaderLine = (props: any) => {\n  //@ts-ignore\n  const isDark = useThemeMode() === \"dark\";\n\n  return (\n    <Box\n      tag=\"header\"\n      direction=\"row\"\n      justify=\"center\"\n      background={isDark ? \"background\" : \"brand\"}\n      pad={{ vertical: \"small\" }}\n      elevation={isDark ? \"none\" : \"medium\"}\n      style={{ zIndex: \"1\" }}\n      {...props}\n    />\n  );\n};\n\nconst ProjectName = styled(Box)`\n  margin-top: 7px;\n  margin-left: 7px;\n  font-size: 1.2em;\n  line-height: 0.7em;\n`;\n\nexport function AppHeader(props: { style: CSSProperties }) {\n  const history = useHistory();\n  const [isMenuMobileOpened, setMenuMobileOpened] = useState(false)\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 960px)' })\n  \n  return (\n    <Box>\n      <HeaderLine\n          {...props}\n          style={{ boxShadow: \"0px 4px 8px rgb(0 0 0 / 12%)\" }}\n      >\n        <BaseContainer direction=\"row\" align=\"center\" justify=\"between\" flex>\n          <Heading\n              level=\"5\"\n              margin=\"none\"\n              style={{\n                cursor: \"pointer\",\n                color: \"#fff\",\n              }}\n              onClick={() => history.push(\"/\")}\n          >\n            <Box direction={\"row\"} align={\"center\"}>\n              {/* <img src={require(\"../../assets/Logo.svg\").default} /> */}\n              {!isTabletOrMobile &&\n                  <ProjectName direction={\"column\"} align={\"start\"}>\n                    Zippy\n                    <Text size={\"small\"}>Block Explorer</Text>\n                  </ProjectName>\n              }\n            </Box>\n          </Heading>\n          <Box direction=\"row\">\n            <Box direction=\"row\" align={'center'}>\n              {/* {!isTabletOrMobile &&\n                  <Box alignSelf={'center'} margin={'0 16px 0 0'}>\n                    <Text size={'small'} color=\"headerText\">Address Format</Text>\n                  </Box>\n              } */}\n              {/* <AddressFormatSwitch /> */}\n            </Box>\n            {!isTabletOrMobile &&\n                <Box direction=\"row\" align={'center'}>\n                  <InfoButton />\n                  <ResourcesButton />\n                  <ToolsButton />\n                  <ConfigureButton />\n                </Box>\n            }\n            {isTabletOrMobile &&\n                <Box justify={'center'} margin={{ left: 'large' }}>\n                    {isMenuMobileOpened && <Close size={'medium'} color={'white'} onClick={() => setMenuMobileOpened(false)} /> }\n                    {!isMenuMobileOpened && <Menu size={'medium'} color={'white'} onClick={() => setMenuMobileOpened(true)} /> }\n                </Box>\n            }\n          </Box>\n        </BaseContainer>\n      </HeaderLine>\n      {isTabletOrMobile &&\n          <MenuMobile isOpened={isMenuMobileOpened} onClose={() => setMenuMobileOpened(false)} />\n      }\n    </Box>\n  );\n}\n","import React from 'react'\nimport { Box, Text } from \"grommet\"\nimport { Group, Medium, Twitter } from 'grommet-icons'\nimport styled, {CSSProperties} from 'styled-components';\n\nimport { TelegramIcon, DiscordIcon, SubstackIcon } from 'src/components/ui/icons'\n\nconst IconAhchor = styled.a`\n  opacity: 0.9;\n  transition: 0.17s ease all;\n  \n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport function AppFooter(props: { style: CSSProperties }) {\n\n  return (\n    <Box background=\"background\" justify=\"center\" align=\"center\" pad=\"medium\" margin={{ top: 'medium' }} {...props}>\n      <Box gap=\"xsmall\">\n        <Box direction=\"row\" width=\"320px\" justify=\"center\" align=\"center\" gap=\"medium\">\n          {/* <IconAhchor href=\"https://harmony.one/team\" target=\"_blank\" rel=\"noreferrer\">\n            <Group size=\"24px\" color=\"minorText\" style={{ cursor: 'pointer'}} />\n          </IconAhchor>\n          <IconAhchor href=\"https://harmony.one/discord\" target=\"_blank\" rel=\"noreferrer\">\n            <DiscordIcon size=\"23px\" color=\"minorText\" />\n          </IconAhchor>\n          <IconAhchor href=\"https://substack.com/@harmonyone\" target=\"_blank\" rel=\"noreferrer\">\n            <SubstackIcon size=\"23px\" color=\"minorText\" />\n          </IconAhchor>\n          <IconAhchor href=\"https://t.me/harmony_one\" target=\"_blank\" rel=\"noreferrer\">\n            <TelegramIcon size=\"22px\" color=\"minorText\" />\n          </IconAhchor>\n          <IconAhchor href=\"https://twitter.com/harmonyprotocol\" target=\"_blank\" rel=\"noreferrer\">\n            <Twitter size=\"24px\" color=\"minorText\" style={{ cursor: 'pointer'}} />\n          </IconAhchor> */}\n        </Box>\n        {/*<Box direction=\"row\" justify=\"center\" align=\"center\" gap=\"xsmall\">*/}\n        {/*  <Anchor color=\"minorText\" size=\"small\" weight=\"normal\" href=\"/\">Terms of Use</Anchor>*/}\n        {/*  <Text color=\"minorText\" size=\"medium\">|</Text>*/}\n        {/*  <Anchor color=\"minorText\" size=\"small\" weight=\"normal\" href=\"/\">Privacy Policy</Anchor>*/}\n        {/*</Box>*/}\n        <Box direction=\"row\" justify=\"center\" align=\"center\" gap=\"xsmall\">\n          <Text color=\"minorText\" size=\"xsmall\" margin={{ top: '3px' }}>©</Text>\n          <Text color=\"minorText\" size=\"xsmall\">Zippy {new Date().getFullYear()}</Text>\n          <Text color=\"minorText\" size=\"small\" margin={{ bottom: '6px' }}>.</Text>\n          <Text color=\"minorText\" size=\"xsmall\">hello@zippychain.ai</Text>\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n","import React, { useEffect } from \"react\";\nimport { getAllERC20 } from \"src/api/client\";\nimport { setERC20Pool, Erc20 } from \"src/hooks/ERC20_Pool\";\nimport { getTabHidden, useWindowFocused } from \"src/hooks/useWindowFocusHook\";\nimport { IndexedDbKeyPath, IndexedDbStore, saveToIndexedDB } from \"../utils/indexedDB\";\nimport { isTokenBridged } from \"../utils\";\n\nconst updateTokensInterval = 1000 * 60 * 15\n\nexport function ERC20_Pool() {\n  const focus = useWindowFocused();\n  useEffect(() => {\n    let tId = 0;\n\n    const getTokens = async () => {\n      if (getTabHidden()) {\n        return; // hidden tab, ignore the refresh request\n      }\n      try {\n        let erc20: Erc20[] = await getAllERC20();\n        const erc20Map = {} as Record<string, Erc20>;\n        erc20 = erc20.map((item) => {\n          erc20Map[item.address] = {\n            ...item,\n            isBridged: isTokenBridged(item.address),\n            name: item.implementationAddress ? `${item.name} (Proxy)` : item.name\n          };\n          return {\n            [IndexedDbKeyPath]: item.address,\n            ...item\n          }\n        });\n        setERC20Pool(erc20Map);\n        await saveToIndexedDB(IndexedDbStore.ERC20Pool, erc20)\n        localStorage.setItem(IndexedDbStore.ERC20Pool, Date.now().toString())\n        console.log(`ERC20 tokens updated, count: ${erc20.length}`)\n      } catch (e) {\n        console.error('Cannot update ERC20 tokens', (e as Error).message)\n      } finally {\n        window.clearTimeout(tId);\n        tId = window.setTimeout(getTokens, updateTokensInterval);\n      }\n    };\n\n    const lastLoadTimestamp = +(window.localStorage.getItem(IndexedDbStore.ERC20Pool) || 0)\n    const timeToTextUpdate = lastLoadTimestamp + updateTokensInterval - Date.now()\n    if(timeToTextUpdate < 0) {\n      tId = window.setTimeout(getTokens, 1000 * 2);\n    } else {\n      console.log(`ERC20 tokens pool is up to date, next update in ${Math.floor((timeToTextUpdate) / 60 / 1000)} min`)\n    }\n\n    return () => {\n      clearTimeout(tId);\n    };\n  }, []);\n\n  return null;\n}\n","import React, { useEffect } from \"react\";\nimport { getAllERC721 } from \"src/api/client\";\nimport { setERC721Pool, ERC721 } from \"src/hooks/ERC721_Pool\";\nimport { getTabHidden, useWindowFocused } from \"src/hooks/useWindowFocusHook\";\nimport { IndexedDbKeyPath, IndexedDbStore, saveToIndexedDB } from \"../utils/indexedDB\";\nimport { isTokenBridged } from \"../utils\";\n\nconst updateTokensInterval = 1000 * 60 * 10\n\nexport function ERC721_Pool() {\n  const focus = useWindowFocused();\n\n  useEffect(() => {\n    let tId = 0;\n\n    const getTokens = async () => {\n      try {\n        if (getTabHidden()) {\n          return; // tab is hidden don't refresh\n        }\n        let erc721: ERC721[] = await getAllERC721();\n        const erc721Map = {} as Record<string, ERC721>;\n        erc721 = erc721.map((item) => {\n          erc721Map[item.address] = {\n            ...item,\n            decimals: item.decimals || 0,\n            isBridged: isTokenBridged(item.address)\n          };\n          return {\n            [IndexedDbKeyPath]: item.address,\n            ...item\n          }\n        });\n        setERC721Pool(erc721Map);\n        await saveToIndexedDB(IndexedDbStore.ERC721Pool, erc721)\n        localStorage.setItem(IndexedDbStore.ERC721Pool, Date.now().toString())\n        console.log(`ERC721 tokens is updated, count: ${erc721.length}`)\n      } catch (e) {\n        console.error('Cannot update ERC721 tokens', (e as Error).message)\n      } finally {\n        clearTimeout(tId);\n        tId = window.setTimeout(getTokens, 10 * 60 * 1e3);\n      }\n    };\n\n    const lastLoadTimestamp = +(window.localStorage.getItem(IndexedDbStore.ERC721Pool) || 0)\n    const timeToTextUpdate = lastLoadTimestamp + updateTokensInterval - Date.now()\n    if(timeToTextUpdate < 0) {\n      tId = window.setTimeout(getTokens, 1000 * 3);\n    } else {\n      console.log(`ERC721 tokens pool is up to date, next update in ${Math.floor((timeToTextUpdate) / 60 / 1000)} min`)\n    }\n\n    return () => {\n      clearTimeout(tId);\n    };\n  }, []);\n\n  return null;\n}\n","import React, { useEffect } from \"react\";\nimport { getAllERC1155 } from \"src/api/client\";\nimport { setERC1155Pool, ERC1155 } from \"src/hooks/ERC1155_Pool\";\nimport { getTabHidden, useWindowFocused } from \"src/hooks/useWindowFocusHook\";\nimport { IndexedDbKeyPath, IndexedDbStore, saveToIndexedDB } from \"../utils/indexedDB\";\nimport { isTokenBridged } from \"../utils\";\n\nconst updateTokensInterval = 1000 * 60 * 10\n\nexport function ERC1155_Pool() {\n  const focus = useWindowFocused();\n\n  useEffect(() => {\n    let tId = 0;\n\n    const getTokens = async () => {\n      if (getTabHidden()) {\n        return; // ignore when tab is hidden\n      }\n      try {\n        const erc1155Map = {} as Record<string, ERC1155>;\n        let erc1155: ERC1155[] = await getAllERC1155();\n        erc1155 = erc1155.map(item => {\n          erc1155Map[item.address] = {\n            ...item,\n            isBridged: isTokenBridged(item.address)\n          };\n          return {\n            [IndexedDbKeyPath]: item.address,\n            ...item\n          }\n        })\n        setERC1155Pool(erc1155Map);\n        await saveToIndexedDB(IndexedDbStore.ERC1155Pool, erc1155)\n        localStorage.setItem(IndexedDbStore.ERC1155Pool, Date.now().toString())\n        console.log(`ERC1155 tokens is updated, count: ${erc1155.length}`)\n      } catch (e) {\n        console.error('Cannot update ERC1155 tokens', (e as Error).message)\n      } finally {\n        clearTimeout(tId);\n        tId = window.setTimeout(getTokens, 10 * 60 * 1e3);\n      }\n    };\n\n    const lastLoadTimestamp = +(window.localStorage.getItem(IndexedDbStore.ERC1155Pool) || 0)\n    const timeToTextUpdate = lastLoadTimestamp + updateTokensInterval - Date.now()\n    if(timeToTextUpdate < 0) {\n      tId = window.setTimeout(getTokens, 1000 * 3);\n    } else {\n      console.log(`ERC1155 tokens pool is up to date, next update in ${Math.floor((timeToTextUpdate) / 60 / 1000)} min`)\n    }\n\n    return () => {\n      clearTimeout(tId);\n    };\n  }, []);\n\n  return null;\n}\n","export interface IToasterProps {}\nexport interface IToasterOption {\n  message: string | (() => JSX.Element);\n  /**\n   * time life in ms.\n   * if 0 - forever\n   * @default 3000\n   */\n  time?: number;\n}\n\nexport class Toaster {\n  public currentSelected: IToasterOption[] = [];\n\n  public updateComponent!: Function;\n\n  show(options: IToasterOption) {\n    const { time = 3000 } = options;\n    this.currentSelected.push(options);\n    this.updateComponent();\n\n    if (time) {\n      setTimeout(() => this.hide(options), time);\n    }\n  }\n\n  hide(options: IToasterOption) {\n    this.currentSelected.splice(this.currentSelected.indexOf(options), 1);\n    this.updateComponent();\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Box, Text } from \"grommet\";\nimport { Toaster } from \"./Toaster\";\nimport styled, { css, keyframes } from \"styled-components\";\n\nconst Wrapper = styled(Box)`\n  overflow: hidden;\n`;\n\nconst animation = keyframes`\n  from { \n  transform: translateY(100%);\n  visibility: visible;\n  }\n\n  to { \n  transform: translateY(0);\n  }\n`;\nconst ToasterItem = styled(Box)<{ index: number }>`\n  position: absolute;\n  right: 0px;\n  bottom: 0px;\n  height: 60px;\n  width: 300px;\n  z-index: 999;\n  margin: 10px;\n\n  ${(props) =>\n    props.index\n      ? css`\n          animation-name: ${animation};\n          animation-duration: 0.4s;\n          animation-fill-mode: both;\n        `\n      : css``};\n`;\n\nexport interface IToasterComponentProps {\n  toaster: Toaster;\n}\n\nexport class ToasterComponent extends React.Component<IToasterComponentProps> {\n  constructor(props: IToasterComponentProps) {\n    super(props);\n    props.toaster.updateComponent = () => this.forceUpdate();\n  }\n\n  render() {\n    const { currentSelected } = this.props.toaster;\n    return (\n      <Wrapper>\n        {currentSelected.length\n          ? currentSelected.map((item, index) => {\n              return (\n                <ToasterItem\n                  key={index}\n                  background={\"backgroundToaster\"}\n                  pad={\"xsmall\"}\n                  index={index}\n                  style={{\n                    borderRadius: \"6px\",\n                    marginBottom: `${index * 70 + 10}px`,\n                  }}\n                >\n                  <Text color={\"headerText\"}>\n                    {typeof item.message === \"function\"\n                      ? item.message()\n                      : item.message}\n                  </Text>\n                </ToasterItem>\n              );\n            })\n          : null}\n      </Wrapper>\n    );\n  }\n}\n","export class SettingsService {\n  private postfix: string | undefined;\n  private settingsField: string;\n\n  constructor(postfix?: string, settingsField?: string) {\n    this.postfix = postfix;\n    this.settingsField =\n      settingsField === void 0 ? \"ZPT_SETTINGS_\" : settingsField;\n  }\n  // tslint:disable-next-line:no-any\n  get<T = any>(\n    key: string,\n    initValue: {} = {},\n    returnClearValue?: boolean\n  ): T | undefined {\n    const nameSettingsField = this.getCurrentSettingsName();\n    const currentItem = localStorage.getItem(nameSettingsField)\n      ? JSON.parse(localStorage.getItem(nameSettingsField) as string)\n      : {};\n\n    if (key in currentItem) {\n      try {\n        return currentItem[key];\n      } catch {\n        if (returnClearValue) {\n          return undefined;\n        } else {\n          return initValue as T;\n        }\n      }\n    }\n\n    if (returnClearValue) {\n      return undefined;\n    } else {\n      return initValue as T;\n    }\n  }\n\n  set(key: string, value: any) {\n    const nameSettingsField = this.getCurrentSettingsName();\n    const currentItem = localStorage.getItem(nameSettingsField)\n      ? JSON.parse(localStorage.getItem(nameSettingsField) as string)\n      : {};\n\n    const newValue = { [key]: value };\n\n    localStorage.setItem(\n      nameSettingsField,\n      JSON.stringify({ ...currentItem, ...newValue })\n    );\n  }\n\n  remove(name?: string) {\n    const nameSettingsField = this.getCurrentSettingsName();\n\n    if (name) {\n      const currentItem = localStorage.getItem(nameSettingsField);\n      const parsedItems = JSON.parse(currentItem as string);\n      if (parsedItems && parsedItems[name]) {\n        delete parsedItems[name];\n        localStorage.setItem(\n          nameSettingsField,\n          JSON.stringify({ ...parsedItems })\n        );\n      }\n    } else {\n      localStorage.removeItem(nameSettingsField);\n    }\n  }\n\n  public setPostFix(postFix: string) {\n    this.postfix = postFix;\n  }\n\n  public getCurrentSettingsName() {\n    return this.settingsField + this.postfix;\n  }\n}\n","import React, { useEffect } from \"react\";\nimport \"./index.css\";\nimport { Box, Grommet } from \"grommet\";\nimport { BrowserRouter, HashRouter, useHistory } from \"react-router-dom\";\n\nimport { Routes } from \"src/Routes\";\nimport { AppHeader } from \"src/components/appHeader\";\nimport { AppFooter } from \"src/components/appFooter\";\n\nimport { SearchInput, BaseContainer } from \"src/components/ui\";\nimport { ZPT_USDT_Rate } from \"src/components/ZPT_USDT_Rate\";\nimport { ERC20_Pool } from \"src/components/ERC20_Pool\";\nimport { ERC721_Pool } from \"src/components/ERC721_Pool\";\nimport { ERC1155_Pool } from \"src/components/ERC1155_Pool\";\nimport { useThemeMode } from \"src/hooks/themeSwitcherHook\";\nimport { theme, darkTheme } from \"./theme\";\nimport { Toaster, ToasterComponent } from \"./components/ui/toaster\";\nimport { SettingsService } from \"./utils/settingsService/SettingsService\";\n\nexport const toaster = new Toaster();\nexport const settingsService = new SettingsService();\n\nfunction App() {\n  // if (document.location.hash && document.location.hash !== \"#code\") {\n  //   document.location.href = `${\n  //     document.location.origin\n  //   }/${document.location.hash.slice(2)}`;\n  // }\n\n  return (\n    // <BrowserRouter>\n    <HashRouter>\n      <AppWithHistory />\n    </HashRouter>\n    // </BrowserRouter>\n  );\n}\n\nlet prevAddress = document.location.pathname;\n\nfunction AppWithHistory() {\n  const themeMode = useThemeMode();\n  const history = useHistory();\n\n  useEffect(() => {\n    const unlisten = history.listen((location, action) => {\n      if (prevAddress !== location.pathname) {\n        prevAddress = location.pathname;\n        const scrollBody = document.getElementById(\"scrollBody\");\n        if (scrollBody) {\n          scrollBody.scrollTo({ top: 0 });\n        }\n      }\n    });\n    return () => {\n      unlisten();\n    };\n  }, []);\n\n  document.body.className = themeMode;\n\n  return (\n    <Grommet\n      theme={themeMode === \"light\" ? theme : darkTheme}\n      themeMode={themeMode}\n      full\n      id=\"scrollBody\"\n    >\n      <ToasterComponent toaster={toaster} />\n      <ERC20_Pool />\n      <ERC721_Pool />\n      <ERC1155_Pool />\n      <Box\n        background=\"backgroundBack\"\n        style={{ margin: \"auto\", minHeight: \"100%\" }}\n      >\n        <AppHeader style={{ flex: \"0 0 auto\" }} />\n        {/*<Box align=\"center\" style={{ flex: \"1 1 100%\", borderRadius: \"2px\", backgroundColor: \"tomato\", color: \"white\" }}>\n          <h1>Explorer is currently undergoing maintenance. Services will be restored soon</h1>\n        </Box>\n        */}\n        <Box align=\"center\" style={{ flex: \"1 1 100%\" }}>\n          <BaseContainer>\n            <SearchInput />\n            <Routes />\n          </BaseContainer>\n        </Box>\n        <AppFooter style={{ flex: \"0 0 auto\" }} />\n        <ZPT_USDT_Rate />\n      </Box>\n    </Grommet>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals' \nconsole.log(process.env)\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}